+++ Reading file of Prolog terms:
'Prolog fact' = pp(a)
'Prolog fact' = qq(a,b)
'Prolog fact' = rr(1,2,3)
'Prolog fact' = prolog_read_error
'Prolog fact' = uuu(1)
'Prolog fact' = a + 1
'Prolog fact' = tttt
+++ Reading file of canonical Prolog terms:
'Prolog canonical fact' = pp(a)
'Prolog canonical fact' = qq(a,b)
'Prolog canonical fact' = rr(1,2,3)
'Prolog canonical fact' = read_canonical_error
'Prolog canonical fact' = uuu(1)
'Prolog canonical fact' = read_canonical_error
'Prolog canonical fact' = tttt
+++ Reading file line by line:
'Line: ' = '
''Line: ' = 'A file of text lines.
''Line: ' = '
''Line: ' = 'THIS FILE IS IN THE PUBLIC DOMAIN.
''Line: ' = '
''Line: ' = 'IT IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
''Line: ' = 'INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
''Line: ' = '   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
''Line: ' = '   IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
''Line: ' = '   OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
''Line: ' = 'ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
''Line: ' = 'OTHER DEALINGS IN THE SOFTWARE.
'
+++ Reading file line by line, removing trailing newlines:
A file of text lines.THIS FILE IS IN THE PUBLIC DOMAIN.IT IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.   IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR   OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OROTHER DEALINGS IN THE SOFTWARE.
+++ Reading file line by line, converting to character lists,
    then removing trailing newlines.
    Converting back to atoms before printing out:
A file of text lines.THIS FILE IS IN THE PUBLIC DOMAIN.IT IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.   IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR   OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OROTHER DEALINGS IN THE SOFTWARE.
+++ Reading file of Ergo terms:
'Flora term' = p(a)
'Flora term' = q(a,b)
'Flora term' = (p(b), p(c))
'Flora term' = (p(aa), (p(bb), p(cc)))
'Flora term' = (${p(b)@main}, ${p(c)@main})
'Flora term' = flora_read_error
'Flora term' = (${Mary[father->Bill]@main}, ${Mary[child->Bob]@main})
'Flora term' = ${Bob[age->22]@foo}
'Flora term' = aaa(bbb)(ccc)
'Flora term' = flora_read_error
+++ Reading a file of Ergo terms, placing reified terms in foobar:
Ergo term: p(a)
Ergo term: q(a,b)
Ergo term: (p(b), p(c))
Ergo term: (p(aa), (p(bb), p(cc)))
Ergo term: (${p(b)@foobar}, ${p(c)@foobar})
Ergo term: flora_read_error
Ergo term: (${Mary[father->Bill]@foobar}, ${Mary[child->Bob]@foobar})
Ergo term: ${Bob[age->22]@foo}
Ergo term: aaa(bbb)(ccc)
Ergo term: flora_read_error
