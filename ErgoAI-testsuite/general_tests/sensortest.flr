:- setsemantics{tabling=reactive}.

?- ['prolog/sensorfoo'],
	[sensortest_declarations>>sensorsmod].


:- usesensor{sens1@sensorfoo/2,
             sens2/2,
	     "http://example.com/2008/flora#avg"^^\iri/2
            }.

:- symbol_context{sens2(?,?)@?}.
:- symbol_context{sensor sens2(?,?)}.

// this is just for warning checking (sensor/predicate dual use)
sens2(c,b) :- \false.

%test1 :- write('test1: ')@\plg, sens1(bbbb,?_Y).
%test2 :- write('test2: ')@\plg, sens2(?_X,aaaa).
%test3 :- write('test3: ')@\plg, sens1(?X,?Y), ?X=123, ?Y=aaaaa.
%test4 :- write('test4: ')@\plg, sens2(?X,?Y), ?Y=345, ?X=bbbbb.
%test5 :- write('test5: ')@\plg,
	  "http://example.com/2008/flora#avg"^^\iri(?_X,?_Y),
	  writeln(success)@\plg.
%test6 :- write('test6: ')@\plg,
	  \"http://example.com/2008/flora#avg"(a,a),
	  writeln(success)@\plg.

// this is just for warning checking (sensor/predicate dual use)
sens2(a,b) :- \false.

/*
  // All these are supposed to trigger compiler errors
//sens2(?,?,?,dddd[bbbb]) :- !.

:- defsensor{ sens3(?Y,?X),(ground(?X),ground(?Y))}.

?- insert{
      sens3(?F,?L,?X,?Y) :-
	(
	    write('in file '), write(?F),
	    write(' on line '), write(?L),
	    write(': '), writeln(sensor3=?X+?Y)
	)@\plg,
	\if \+ground(?X) \then writeln('Instantiation error in sens3: ?X')@\plg,
	\if \+ground(?Y) \then writeln('Instantiation error in sens3: ?Y')@\plg
   }.

//?- insert{sens3(?,?,?,ffff[eeee->?]) :- !}.
*/



%pretest :- %test1, %test2, %test3, %test4, %test5, %test6, uritst@sensorsmod.

%test :- tell(temp)@\plg(),
        Method[mustDefine(on)]@\sys,
        %pretest,
        Method[mustDefine(off)]@\sys,
        %pretest,
        told@\plg().

