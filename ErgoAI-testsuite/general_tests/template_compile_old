
++Error[Ergo]> [template2.ergotxt] <Parser> near line(5)/char(6) `:-'
                ErgoText templates must have the form
		   template( Type, \( ErgoText Template \), ( Ergo formula ) )
++Error[Ergo]> [template2.ergo] <Parser> errors found while compiling the template file

++Error[Ergo]> [template2.ergo] <Parser> near line(4)/char(5) `\('
                cannot compile ErgoText template due to prior errors
++Error[Ergo]> [template2.ergo] <Parser> near line(5)/char(4) `\('
                cannot compile ErgoText template due to prior errors
++Error[Ergo]> [template2.ergo] <Parser> near line(6)/char(2) `\('
                cannot compile ErgoText template due to prior errors
++Error[Ergo]> [template2.ergo] <Parser> near line(8)/char(2) `\('
                cannot compile ErgoText template due to prior errors
++Error[Ergo]> [template2.ergo] <Parser> near line(14)/char(1) `\('
                cannot compile ErgoText template due to prior errors
++Error[Ergo]> [template2.ergo] <Parser> near line(15)/char(1) `\('
                cannot compile ErgoText template due to prior errors
++Error[Ergo]> [template2.ergo] <Parser> near line(16)/char(1) `\('
                cannot compile ErgoText template due to prior errors
++Error[Ergo]> [template2.ergo] <Parser> near line(18)/char(11) `\('
                cannot compile ErgoText template due to prior errors

++10 errors

++compilation aborted


++Warning[Ergo]> [template2.ergotxt] <Parser> near line(2)/char(60) `?OO'
                  singleton variable: use ?_Var instead of ?Var, if not an error

++Warning[Ergo]> [template2.ergotxt] <Parser> near line(4)/char(67) `?OO'
                  singleton variable: use ?_Var instead of ?Var, if not an error


++Warning[Ergo]> [template2.ergo] <Compiler> near line(12)/char(4) `a12345'
                  @tag or :- default_is_defeasible is given but document has no :- use_argumentation_theory directive


++3 warnings

