test1 = explanation(true(${query2(Fred)@main},it is a top query,ruleid(12,justifier2_ergo.ergo,main)),[explanation(true((\naf (worm(?A)@main, eat(Fred,?A)@main)),null,ruleid(null,null,null)),[explanation(false(${eat(Fred,\#X2(Sam))@main},null,ruleid(null,null,null)),[])]), explanation(true(${Fred:animal@main},null,ruleid(null,null,main)),[explanation(true(${Fred:bird@main},null,ruleid(null,null,main)),[explanation(true(${Fred:penguin@main},it is a base fact,ruleid(null,null,null)),[]), explanation(true(${penguin::bird@main},it is a base fact,ruleid(null,null,null)),[])]), explanation(true(${bird::animal@main},it is a base fact,ruleid(null,null,null)),[])])])
test2 = explanation(true(${query2(Fred)@main},it is a top query,query2(Fred),ruleinfo(ruleid(12,justifier2_ergo.ergo,main),no text given for the relevant rule)),[explanation(false((${worm(?A)@main}, ${eat(Fred,?A)@main}),null,(worm(?A)) and (eat(Fred,?A)),ruleinfo(ruleid(null,null,null),derived via a builtin axiom (negation, defeasibility, composite goal, etc.))),[explanation(false(${eat(Fred,\#X2(Sam))@main},null,eat(Fred,\#X2(Sam)),ruleinfo(ruleid(null,null,null),this is a base fact or a builtin)),[])]), explanation(true(${Fred:animal@main},null,Fred is a animal,ruleinfo(ruleid(null,null,main),axiom|transitivity of class member)),[explanation(true(${Fred:bird@main},null,Fred is a bird,ruleinfo(ruleid(null,null,main),axiom|transitivity of class member)),[explanation(true(${Fred:penguin@main},it is a base fact,Fred is a penguin,ruleinfo(ruleid(null,null,null),this is a base fact or a builtin)),[]), explanation(true(${penguin::bird@main},it is a base fact,penguin is a subclass of bird,ruleinfo(ruleid(null,null,null),this is a base fact or a builtin)),[])]), explanation(true(${bird::animal@main},it is a base fact,bird is a subclass of animal,ruleinfo(ruleid(null,null,null),this is a base fact or a builtin)),[])])])
test3 = Trade_2
test3 = explanation(true(${Trade_2:trade@main},'it is a top query',ruleid(null,null,null)),[explanation(true(${Trade_2:trade@main},'it is a base fact',ruleid(null,null,null)),[])])
