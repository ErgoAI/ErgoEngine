Terminyzer: the log is loaded; analyzing ...

Terminyzer: building the graph of incomplete subgoals ...

Terminyzer: finished building the graph of incomplete subgoals ...

--- Unfinished calls analysis summary

Unfinished subgoal format: 
    unfinished_subgoal(SubgoalId)[subgoal->Subgoal,ruleid->RuleId]

  unfinished_subgoal(1)[subgoal->null, ruleid->null]
  unfinished_subgoal(2)[subgoal->${r(?A)@main}, ruleid->4]
  unfinished_subgoal(3)[subgoal->${r(?A)@main}, ruleid->rule1]
  unfinished_subgoal(4)[subgoal->${p(?A)@main}, ruleid->rule4]
  unfinished_subgoal(5)[subgoal->${q(?A)@main}, ruleid->rule2]
  unfinished_subgoal(6)[subgoal->${p(?A)@main}, ruleid->rule3]

The number of unfinished subgoals: 6

Unfinished call relationship format:
    unfinished_call(CallId)[parent->ParentId,child->ChildId,ruleid->RuleId]

  unfinished_call(1)[parent->1, child->2, ruleid->4]
  unfinished_call(2)[parent->2, child->3, ruleid->rule1]
  unfinished_call(3)[parent->3, child->3, ruleid->rule1]
  unfinished_call(4)[parent->3, child->4, ruleid->rule4]
  unfinished_call(5)[parent->4, child->5, ruleid->rule2]
  unfinished_call(6)[parent->5, child->6, ruleid->rule3]
  unfinished_call(7)[parent->6, child->5, ruleid->rule2]

The number of unfinished calls: 7


Terminyzer: computing call-loop pattern ...


Terminyzer: building the graph of incomplete subgoals ...

Terminyzer: finished building the graph for answer flow analysis ...

--- Answer-flow analysis summary: possibly infinite answer-producing patterns found

Answer-flow format:
   answerflow[subgoals->SubgoalIds,calls->CallIds,loop->LoopIds]
Subgoals & calls here are the relevant unfinished subgoal/call ids

  answerflow[subgoals->[5,6], calls->[6,7], loop->[6,5,6]]

The number of answerflow subgoals: 2
The number of answerflow calls: 2
The size of answerflow loop: 3

Terminyzer analysis summary is saved in: terminyzer_summary.flr

Terminyzer: the log is loaded; analyzing ...

Terminyzer: building the graph of incomplete subgoals ...

Terminyzer: finished building the graph of incomplete subgoals ...

--- Unfinished calls analysis summary

Unfinished subgoal format: 
    unfinished_subgoal(SubgoalId)[subgoal->Subgoal,ruleid->RuleId]

  unfinished_subgoal(1)[subgoal->null, ruleid->null]
  unfinished_subgoal(2)[subgoal->${r(?A)@main}, ruleid->4]
  unfinished_subgoal(3)[subgoal->${r(?A)@main}, ruleid->rule1]
  unfinished_subgoal(4)[subgoal->${p(?A)@main}, ruleid->rule4]
  unfinished_subgoal(5)[subgoal->${q(?A)@main}, ruleid->rule2]
  unfinished_subgoal(6)[subgoal->${p(?A)@main}, ruleid->rule3]

The number of unfinished subgoals: 6

Unfinished call relationship format:
    unfinished_call(CallId)[parent->ParentId,child->ChildId,ruleid->RuleId]

  unfinished_call(1)[parent->1, child->2, ruleid->4]
  unfinished_call(2)[parent->2, child->3, ruleid->rule1]
  unfinished_call(3)[parent->3, child->3, ruleid->rule1]
  unfinished_call(4)[parent->3, child->4, ruleid->rule4]
  unfinished_call(5)[parent->4, child->5, ruleid->rule2]
  unfinished_call(6)[parent->5, child->6, ruleid->rule3]
  unfinished_call(7)[parent->6, child->5, ruleid->rule2]

The number of unfinished calls: 7


Terminyzer: computing call-loop pattern ...


Terminyzer: building the graph of incomplete subgoals ...

Terminyzer: finished building the graph for answer flow analysis ...

--- Answer-flow analysis summary: possibly infinite answer-producing patterns found

Answer-flow format:
   answerflow[subgoals->SubgoalIds,calls->CallIds,loop->LoopIds]
Subgoals & calls here are the relevant unfinished subgoal/call ids

  answerflow[subgoals->[5,6], calls->[6,7], loop->[6,5,6]]

The number of answerflow subgoals: 2
The number of answerflow calls: 2
The size of answerflow loop: 3

Terminyzer analysis summary is saved in: terminyzer_summary.flr

/* logforest trace filename */
logfile('terminyzer1_xsblog').


// Unfinished calls analysis summary

// Unfinished subgoal format: 
//   unfinished_subgoal(SubgoalId)[subgoal->Subgoal,ruleid->RuleId]

unfinished_subgoal(1)[subgoal->null,ruleid->null].
unfinished_subgoal(2)[subgoal->${r(?A)@main},ruleid->4].
unfinished_subgoal(3)[subgoal->${r(?A)@main},ruleid->rule1].
unfinished_subgoal(4)[subgoal->${p(?A)@main},ruleid->rule4].
unfinished_subgoal(5)[subgoal->${q(?A)@main},ruleid->rule2].
unfinished_subgoal(6)[subgoal->${p(?A)@main},ruleid->rule3].

// The number of unfinished subgoals
number_of_subgoals(unfinished,6).

// Unfinished call relationship format:
//   unfinished_call(CallId)[parent->ParentId,child->ChildId,ruleid->RuleId]

unfinished_call(1)[parent->1,child->2,ruleid->4].
unfinished_call(2)[parent->2,child->3,ruleid->rule1].
unfinished_call(3)[parent->3,child->3,ruleid->rule1].
unfinished_call(4)[parent->3,child->4,ruleid->rule4].
unfinished_call(5)[parent->4,child->5,ruleid->rule2].
unfinished_call(6)[parent->5,child->6,ruleid->rule3].
unfinished_call(7)[parent->6,child->5,ruleid->rule2].

/* The number of unfinished calls */
number_of_calls(unfinished,7).


/* Call-loop analysis summary: no infinite call-loops found */
'_$_$terminyzer''call_loop'(subgoals([])).


/* Answer-flow analysis summary */

// Answer-flow format:
//   answerflow[subgoals->SubgoalIds, calls->CallIds, loop->LoopIds]
// Subgoals & calls here are the relevant unfinished subgoal/call ids

answerflow[subgoals->[5,6], calls->[6,7], loop->[6,5,6]].

// The number of answerflow subgoals
number_of_subgoals(answerflow,2).
// The number of answerflow calls
number_of_calls(answerflow,2).
// The size of answerflow loop
number_of_subgoals(answerflowloop,3).

