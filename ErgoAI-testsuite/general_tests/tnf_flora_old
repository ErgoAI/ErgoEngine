
Parse error
Parse error
[test(Fact3), \neg aaaaa, \neg obj[ppp], \neg obj[?X], \neg obj[?Y], \neg pppppp]
Parse error
Parse error
Parse error
Parse error
Parse error
Parse error
Parse error
Parse error
Parse error
Parse error
Parse error
[test(Fact16), \neg pp, \neg p, \neg qq, \neg q, r, rr]
Parse error

[?- (test(LT1), ((\neg aaaaa; \naf exists(?X,?Y)^(\naf \neg obj[(ppp, (?X, ?Y))])), exists(?X)^(\neg pppppp(?X))))]
[?- (test(LT2), ((\neg aaaaa; \neg obj[(ppp, (?X, ?Y))]), \neg pppppp))]
[?- (test(LT3), (\neg aaaaa, (\neg obj[(ppp; (?X; ?Y))], \neg pppppp)))]
[?- (test(LT4), ((aaaaa, exists(?X,?Y)^(obj[(ppp, (?X, ?Y))])); \naf exists(?X)^(\naf pppppp(?X))))]
[?- (test(LT5), ((\neg aaaaa, exists(?X,?Y)^(\neg obj[(ppp, (?X, ?Y))])); \naf exists(?X)^(\naf pppppp(?X))))]
[?- (test(LT6), ((\neg aaaaa; \naf exists(?X,?Y)^(\naf \neg obj[(ppp, (?X, ?Y))])), exists(?X)^(\neg pppppp(?X))))]
[?- (test(LT7), ((\neg aaaaa; \naf exists(?X,?Y)^(\naf \neg obj[(ppp, (?X, ?Y))])), \naf exists(?X)^(\naf pppppp(?X))))]
[?- (test(LT8), ((\neg aaaaa; \naf exists(?X,?Y)^(\naf obj[(ppp, (?X, ?Y))])), \naf exists(?X)^(\naf pppppp(?X))))]
[?- (test(LT9), \naf exists(?X,?Y)^(\naf \neg obj(ppp, ?X, ?Y)))]
[?- (test(LT10), exists(?X,?Y)^(\neg obj[p]))]
[?- (test(LT12), exists(?X,?Y)^(\neg obj[((p, q->{kkk}); r)]))]
[?- (test(LT13), exists(?X,?Y)^(\neg obj[((p, \neg q->{kkk}); r)]))]
[?- (test(LT14), \neg obj[((p->{kkk}, q); r)])]
[?- (test(LT15), ((\neg pp; \neg p), ((\neg qq; \neg q); (r; rr))))]
[?- (test(LT16), ((\neg pp, \neg p), ((\neg qq, \neg q), (r, rr))))]
[?- (test(LT17), ((pp, p); ((qq, q), (\neg r, \neg rr))))]



Parse error
Parse error
[?- (test(insert3), insert{insertrule_z{(\neg obj(p), \neg obj(r) :- \true)}})]
[?- (test(insert4), insertrule{(\neg obj(p), \neg obj(r) :- \true)})]
Parse error
Parse error
[?- (test(insert7), insert{\neg a[p], \neg a[q]})]
[?- (test(insert8), insert{a[p], a[q]})]
Parse error
Parse error
Parse error
[?- (test(insert12), insertrule{(\neg obj[p->{kkk}], \neg obj[q], \neg obj[r] :- \true)})]
[?- (test(insert13), insert{insertrule_z{(\neg obj[p->{kkk}], \neg obj[q], \neg obj[r] :- \true)}})]
Parse error
Parse error
Parse error
Parse error
Parse error
Parse error
Parse error
Parse error
Parse error
[?- (test(insert23), insertrule{(p123[ac->{1}], p123[bc->{1}] :- abc)})]
[?- (test(insert24), insert{p234(ac), p234(bc)})]
Parse error

[test(Rule1)]
Parse error
[test(Rule2)]
Parse error
[test(Rule3)]
[\neg aaaaa, \neg pppppp :- \true]
[test(Rule4)]
[\neg obj[ppp], \neg obj[?X], \neg obj[?Y], \neg pppppp :- \true]
[test(Rule5)]
Parse error
[test(Rule6)]
Parse error
[test(Rule7)]
Parse error
[test(Rule8)]
Parse error
[test(Rule9)]
Parse error
[test(Rule10)]
Parse error
[test(Rule11)]
Parse error
[test(Rule12)]
Parse error
[test(Rule13)]
Parse error
[test(Rule14)]
[obj[p->{kkk}], obj[q], \neg obj[r] :- \true]
[test(Rule15)]
Parse error
[test(Rule16)]
Parse error

Parse error
Parse error
Parse error
Parse error
Parse error
Parse error
Parse error
Parse error
Parse error
Parse error
[test(NestedFrame_fact11), a[|b{0..*}=>x|], b : dd, a[|b{0..*}=>y|], b : dd]
Parse error

Parse error
Parse error
Parse error
Parse error
Parse error

Parse error
Parse error
Parse error
Parse error
[?- (test(NestedFrame_LT1), \neg a[(b; c->{u[(d; e)]})])]
[?- (test(NestedFrame_LT2), \neg a[(b; c->{u[(d, e)]})])]



++Error[Flora-2]> [tnf_data.flr] <Parser> near line(81)/char(7) `exist'
                no quantifiers are allowed in rule head
++Error[Flora-2]> [tnf_data.flr] <Parser> near line(83)/char(7) `exist'
                no quantifiers are allowed in rule head
++Error[Flora-2]> [tnf_data.flr] <Parser> near line(85)/char(7) `exist'
                no quantifiers are allowed in rule head
++Error[Flora-2]> [tnf_data.flr] <Parser> near line(87)/char(6) `exist'
                no quantifiers are allowed in rule head
++Error[Flora-2]> [tnf_data.flr] <Parser> near line(89)/char(6) `forall'
                no quantifiers are allowed in rule head
++Error[Flora-2]> [tnf_data.flr] <Parser> near line(91)/char(6) `forall'
                no quantifiers are allowed in rule head
++Error[Flora-2]> [tnf_data.flr] <Parser> near line(93)/char(1) `\neg'
                only conjunctions of literals are allowed in rule heads & facts:
		\or, ==>, and even more general forms are supported
		by the Ergo reasoner
++Error[Flora-2]> [tnf_data.flr] <Parser> near line(97)/char(1) `\neg'
                only conjunctions of literals are allowed in rule heads & facts:
		\or, ==>, and even more general forms are supported
		by the Ergo reasoner
++Error[Flora-2]> [tnf_data.flr] <Parser> near line(99)/char(1) `\neg'
                only conjunctions of literals are allowed in rule heads & facts:
		\or, ==>, and even more general forms are supported
		by the Ergo reasoner
++Error[Flora-2]> [tnf_data.flr] <Parser> near line(102)/char(26) `\neg'
                only conjunctions of literals are allowed in rule heads & facts:
		\or, ==>, and even more general forms are supported
		by the Ergo reasoner
++Error[Flora-2]> [tnf_data.flr] <Parser> near line(103)/char(26) `\neg'
                only conjunctions of literals are allowed in rule heads & facts:
		\or, ==>, and even more general forms are supported
		by the Ergo reasoner
++Error[Flora-2]> [tnf_data.flr] <Parser> near line(104)/char(26) `\neg'
                only conjunctions of literals are allowed in rule heads & facts:
		\or, ==>, and even more general forms are supported
		by the Ergo reasoner
++Error[Flora-2]> [tnf_data.flr] <Parser> near line(105)/char(26) `\neg'
                only conjunctions of literals are allowed in rule heads & facts:
		\or, ==>, and even more general forms are supported
		by the Ergo reasoner
++Error[Flora-2]> [tnf_data.flr] <Parser> near line(106)/char(26) `\neg'
                only conjunctions of literals are allowed in rule heads & facts:
		\or, ==>, and even more general forms are supported
		by the Ergo reasoner
++Error[Flora-2]> [tnf_data.flr] <Parser> near line(107)/char(26) `\neg'
                only conjunctions of literals are allowed in rule heads & facts:
		\or, ==>, and even more general forms are supported
		by the Ergo reasoner
++Error[Flora-2]> [tnf_data.flr] <Parser> near line(108)/char(26) `\neg'
                only conjunctions of literals are allowed in rule heads & facts:
		\or, ==>, and even more general forms are supported
		by the Ergo reasoner
++Error[Flora-2]> [tnf_data.flr] <Parser> near line(109)/char(26) `\neg'
                only conjunctions of literals are allowed in rule heads & facts:
		\or, ==>, and even more general forms are supported
		by the Ergo reasoner
++Error[Flora-2]> [tnf_data.flr] <Parser> near line(110)/char(26) `\neg'
                only conjunctions of literals are allowed in rule heads & facts:
		\or, ==>, and even more general forms are supported
		by the Ergo reasoner
++Error[Flora-2]> [tnf_data.flr] <Parser> near line(111)/char(27) `\neg'
                only conjunctions of literals are allowed in rule heads & facts:
		\or, ==>, and even more general forms are supported
		by the Ergo reasoner
++Error[Flora-2]> [tnf_data.flr] <Parser> near line(114)/char(27) `\neg'
                only conjunctions of literals are allowed in rule heads & facts:
		\or, ==>, and even more general forms are supported
		by the Ergo reasoner
++Error[Flora-2]> [tnf_data.flr] <Parser> near line(116)/char(29) `%bb'
                unexpected transactional symbol
++Error[Flora-2]> [tnf_data.flr] <Parser> near line(117)/char(29) `%bb'
                unexpected transactional symbol
++Error[Flora-2]> [tnf_data.flr] <Parser> near line(118)/char(42) `[|'
                invalid boolean signature
++Error[Flora-2]> [tnf_data.flr] <Parser> near line(119)/char(27) `\neg'
                only conjunctions of literals are allowed in rule heads & facts:
		\or, ==>, and even more general forms are supported
		by the Ergo reasoner
++Error[Flora-2]> [tnf_data.flr] <Parser> near line(120)/char(27) `\neg'
                only conjunctions of literals are allowed in rule heads & facts:
		\or, ==>, and even more general forms are supported
		by the Ergo reasoner
++Error[Flora-2]> [tnf_data.flr] <Parser> near line(122)/char(38) `\neg'
                only conjunctions of literals are allowed in rule heads & facts:
		\or, ==>, and even more general forms are supported
		by the Ergo reasoner
++Error[Flora-2]> [tnf_data.flr] <Parser> near line(123)/char(38) `\neg'
                only conjunctions of literals are allowed in rule heads & facts:
		\or, ==>, and even more general forms are supported
		by the Ergo reasoner
++Error[Flora-2]> [tnf_data.flr] <Parser> near line(124)/char(42) `\neg'
                only conjunctions of literals are allowed in rule heads & facts:
		\or, ==>, and even more general forms are supported
		by the Ergo reasoner
++Error[Flora-2]> [tnf_data.flr] <Parser> near line(125)/char(42) `\neg'
                only conjunctions of literals are allowed in rule heads & facts:
		\or, ==>, and even more general forms are supported
		by the Ergo reasoner

++29 errors

++compilation aborted

