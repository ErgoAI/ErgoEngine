in=test(Fact1)
<cranial>
test(Fact1) :- null
</cranial>
in=forall(?_X,?_Y)^((\neg aaaaa; (\neg obj[ppp]; (\neg obj[?_X]; \neg obj[?_Y]))))
<cranial>
\neg aaaaa :- (obj[ppp], (obj[?_newomnivar1], obj[?_newomnivar2]))
\neg obj[ppp] :- ((obj[?_newomnivar1], obj[?_newomnivar2]), aaaaa)
\neg obj[?_newomnivar1] :- (obj[?_newomnivar2], (obj[ppp], aaaaa))
\neg obj[?_newomnivar2] :- (obj[?_newomnivar1], (obj[ppp], aaaaa))
</cranial>
in=exists(?_X)^(\neg ppppp(?_X))
<cranial>
\neg ppppp(\#) :- null
</cranial>
in=test(Fact2)
<cranial>
test(Fact2) :- null
</cranial>
in=(\neg aaaaa; (\neg obj[ppp]; (\neg obj[?_X]; \neg obj[?_Y])))
<cranial>
\neg aaaaa :- (obj[ppp], (obj[?_X], obj[?_Y]))
\neg obj[ppp] :- ((obj[?_X], obj[?_Y]), aaaaa)
\neg obj[?_X] :- (obj[?_Y], (obj[ppp], aaaaa))
\neg obj[?_Y] :- (obj[?_X], (obj[ppp], aaaaa))
</cranial>
in=\neg pppppp
<cranial>
\neg pppppp :- null
</cranial>
in=test(Fact3)
<cranial>
test(Fact3) :- null
</cranial>
in=\neg aaaaa
<cranial>
\neg aaaaa :- null
</cranial>
in=\neg obj[ppp]
<cranial>
\neg obj[ppp] :- null
</cranial>
in=\neg obj[?_X]
<cranial>
\neg obj[?_X] :- null
</cranial>
in=\neg obj[?_Y]
<cranial>
\neg obj[?_Y] :- null
</cranial>
in=\neg pppppp
<cranial>
\neg pppppp :- null
</cranial>
in=test(Fact4)
<cranial>
test(Fact4) :- null
</cranial>
in=(exists(?_X,?_Y)^((aaaaa, (obj[ppp], (obj[?_X], obj[?_Y])))); forall(?_X)^(ppppppqqq(?_X)))
<cranial>
aaaaa :- exists(?_X)^(\neg ppppppqqq(?_X))
obj[ppp] :- exists(?_X)^(\neg ppppppqqq(?_X))
obj[\#] :- exists(?_X)^(\neg ppppppqqq(?_X))
obj[\#] :- exists(?_X)^(\neg ppppppqqq(?_X))
ppppppqqq(?_newomnivar1) :- (\neg aaaaa; (\neg obj[ppp]; (\naf exists(?_X)^(\naf \neg obj[?_X]); \naf exists(?_Y)^(\naf \neg obj[?_Y]))))
</cranial>
in=test(Fact5)
<cranial>
test(Fact5) :- null
</cranial>
in=(exists(?_X,?_Y)^((\neg aaaaa, (\neg obj[ppp]; (\neg obj[?_X]; \neg obj[?_Y])))); forall(?_X)^(ppppp123(?_X)))
<cranial>
\neg aaaaa :- exists(?_X)^(\neg ppppp123(?_X))
\neg obj[ppp] :- ((obj[\#], obj[\#]), exists(?_X)^(\neg ppppp123(?_X)))
\neg obj[\#] :- (obj[\#], (obj[ppp], exists(?_X)^(\neg ppppp123(?_X))))
\neg obj[\#] :- (obj[\#], (obj[ppp], exists(?_X)^(\neg ppppp123(?_X))))
ppppp123(?_newomnivar1) :- (aaaaa; (obj[ppp], (\naf exists(?_X)^(\naf obj[?_X]), \naf exists(?_Y)^(\naf obj[?_Y]))))
</cranial>
in=test(Fact6)
<cranial>
test(Fact6) :- null
</cranial>
in=forall(?_X,?_Y)^((\neg aaaaa; (\neg obj[ppp]; (\neg obj[?_X]; \neg obj[?_Y]))))
<cranial>
\neg aaaaa :- (obj[ppp], (obj[?_newomnivar1], obj[?_newomnivar2]))
\neg obj[ppp] :- ((obj[?_newomnivar1], obj[?_newomnivar2]), aaaaa)
\neg obj[?_newomnivar1] :- (obj[?_newomnivar2], (obj[ppp], aaaaa))
\neg obj[?_newomnivar2] :- (obj[?_newomnivar1], (obj[ppp], aaaaa))
</cranial>
in=exists(?_X)^(\neg ppppppq(?_X))
<cranial>
\neg ppppppq(\#) :- null
</cranial>
in=test(Fact7)
<cranial>
test(Fact7) :- null
</cranial>
in=forall(?_X,?_Y)^((\neg aaaaa; (\neg obj[ppp]; (\neg obj[?_X]; \neg obj[?_Y]))))
<cranial>
\neg aaaaa :- (obj[ppp], (obj[?_newomnivar1], obj[?_newomnivar2]))
\neg obj[ppp] :- ((obj[?_newomnivar1], obj[?_newomnivar2]), aaaaa)
\neg obj[?_newomnivar1] :- (obj[?_newomnivar2], (obj[ppp], aaaaa))
\neg obj[?_newomnivar2] :- (obj[?_newomnivar1], (obj[ppp], aaaaa))
</cranial>
in=forall(?_X)^(ppppppww(?_X))
<cranial>
ppppppww(?_newomnivar3) :- null
</cranial>
in=test(Fact8)
<cranial>
test(Fact8) :- null
</cranial>
in=forall(?_X,?_Y)^((\neg aaaaa; (obj[ppp], (obj[?_X], obj[?_Y]))))
<cranial>
\neg aaaaa :- (\neg obj[ppp]; (\neg obj[?_newomnivar1]; \neg obj[?_newomnivar2]))
obj[ppp] :- aaaaa
obj[?_newomnivar1] :- aaaaa
obj[?_newomnivar2] :- aaaaa
</cranial>
in=forall(?_X)^(ppppppww(?_X))
<cranial>
ppppppww(?_newomnivar3) :- null
</cranial>
in=test(Fact9)
<cranial>
test(Fact9) :- null
</cranial>
in=forall(?_X,?_Y)^(\neg obj(ppp, ?_X, ?_Y))
<cranial>
\neg obj(ppp, ?_newomnivar1, ?_newomnivar2) :- null
</cranial>
in=test(Fact10)
<cranial>
test(Fact10) :- null
</cranial>
in=exists(?_X,?_Y)^(\neg obj[p(?_X, ?_Y)])
<cranial>
\neg obj[p(\#, \#)] :- null
</cranial>
in=test(Fact12)
<cranial>
test(Fact12) :- null
</cranial>
in=exists(?_X,?_Y)^(((\neg obj[p3]; \neg obj[q->{kkk(?_X)}]), \neg obj[r(?_Y)]))
<cranial>
\neg obj[p3] :- obj[q->{kkk(\#)}]
\neg obj[q->{kkk(\#)}] :- obj[p3]
\neg obj[r(\#)] :- null
</cranial>
in=test(Fact13)
<cranial>
test(Fact13) :- null
</cranial>
in=exists(?_X,?_Y)^(((\neg obj[p4(?_X)]; obj[q(?_Y)->{kkkkk}]), \neg obj[rr]))
<cranial>
\neg obj[p4(\#)] :- \neg obj[q(\#)->{kkkkk}]
obj[q(\#)->{kkkkk}] :- obj[p4(\#)]
\neg obj[rr] :- null
</cranial>
in=test(Fact14)
<cranial>
test(Fact14) :- null
</cranial>
in=(\neg obj[p->{kkkkk}]; \neg obj[q])
<cranial>
\neg obj[p->{kkkkk}] :- obj[q]
\neg obj[q] :- obj[p->{kkkkk}]
</cranial>
in=\neg obj[rr]
<cranial>
\neg obj[rr] :- null
</cranial>
in=test(Fact15)
<cranial>
test(Fact15) :- null
</cranial>
in=(\neg pp; \neg p1)
<cranial>
\neg pp :- p1
\neg p1 :- pp
</cranial>
in=((\neg qq; \neg q1); (r1; rr1))
<cranial>
\neg qq :- (q1, (\neg r1, \neg rr1))
\neg q1 :- (qq, (\neg r1, \neg rr1))
r1 :- (\neg rr1, (qq, q1))
rr1 :- (\neg r1, (qq, q1))
</cranial>
in=test(Fact16)
<cranial>
test(Fact16) :- null
</cranial>
in=\neg pp
<cranial>
\neg pp :- null
</cranial>
in=\neg p1
<cranial>
\neg p1 :- null
</cranial>
in=\neg qq
<cranial>
\neg qq :- null
</cranial>
in=\neg q1
<cranial>
\neg q1 :- null
</cranial>
in=r2
<cranial>
r2 :- null
</cranial>
in=rr1
<cranial>
rr1 :- null
</cranial>
in=test(Fact17)
<cranial>
test(Fact17) :- null
</cranial>
in=((pp, p1); ((qq, q1), (\neg r2, \neg rr1)))
<cranial>
pp :- ((\neg qq; \neg q1); (r2; rr1))
p1 :- ((\neg qq; \neg q1); (r2; rr1))
qq :- (\neg pp; \neg p1)
q1 :- (\neg pp; \neg p1)
\neg r2 :- (\neg pp; \neg p1)
\neg rr1 :- (\neg pp; \neg p1)
</cranial>
in=test(insert1)
<cranial>
test(insert1) :- null
</cranial>
in=(obj1(p); obj1(r12))
<cranial>
obj1(p) :- \neg obj1(r12)
obj1(r12) :- \neg obj1(p)
</cranial>
in=test(insert2)
<cranial>
test(insert2) :- null
</cranial>
in=(obj1(p); obj1(r22))
<cranial>
obj1(p) :- \neg obj1(r22)
obj1(r22) :- \neg obj1(p)
</cranial>
in=test(insert3)
<cranial>
test(insert3) :- null
</cranial>
in=\neg obj1(p)
<cranial>
\neg obj1(p) :- null
</cranial>
in=\neg obj1(r22)
<cranial>
\neg obj1(r22) :- null
</cranial>
in=test(insert4)
<cranial>
test(insert4) :- null
</cranial>
in=\neg obj1(p)
<cranial>
\neg obj1(p) :- null
</cranial>
in=\neg obj1(r22)
<cranial>
\neg obj1(r22) :- null
</cranial>
in=test(insert5)
<cranial>
test(insert5) :- null
</cranial>
in=(\neg obj1(p); \neg obj1(r22))
<cranial>
\neg obj1(p) :- obj1(r22)
\neg obj1(r22) :- obj1(p)
</cranial>
in=test(insert6)
<cranial>
test(insert6) :- null
</cranial>
in=(\neg a[p]; \neg a[q])
<cranial>
\neg a[p] :- a[q]
\neg a[q] :- a[p]
</cranial>
in=test(insert7)
<cranial>
test(insert7) :- null
</cranial>
in=test(insert8)
<cranial>
test(insert8) :- null
</cranial>
in=test(insert9)
<cranial>
test(insert9) :- null
</cranial>
in=((\neg obj[p->{kkkkk}]; \neg obj[q]), \neg obj[r22])
<cranial>
\neg obj[p->{kkkkk}] :- obj[q]
\neg obj[q] :- obj[p->{kkkkk}]
\neg obj[r22] :- null
</cranial>
in=test(insert10)
<cranial>
test(insert10) :- null
</cranial>
in=(\neg obj[p->{kkkkk}]; \neg obj[q])
<cranial>
\neg obj[p->{kkkkk}] :- obj[q]
\neg obj[q] :- obj[p->{kkkkk}]
</cranial>
in=\neg obj[r22]
<cranial>
\neg obj[r22] :- null
</cranial>
in=test(insert11)
<cranial>
test(insert11) :- null
</cranial>
in=(\neg obj[p->{kkkkk}]; (\neg obj[q]; \neg obj[r22]))
<cranial>
\neg obj[p->{kkkkk}] :- (obj[q], obj[r22])
\neg obj[q] :- (obj[r22], obj[p->{kkkkk}])
\neg obj[r22] :- (obj[q], obj[p->{kkkkk}])
</cranial>
in=test(insert12)
<cranial>
test(insert12) :- null
</cranial>
in=\neg obj[p->{kkkkk}]
<cranial>
\neg obj[p->{kkkkk}] :- null
</cranial>
in=\neg obj[q]
<cranial>
\neg obj[q] :- null
</cranial>
in=\neg obj[r22]
<cranial>
\neg obj[r22] :- null
</cranial>
in=test(insert13)
<cranial>
test(insert13) :- null
</cranial>
in=\neg obj[p->{kkkkk}]
<cranial>
\neg obj[p->{kkkkk}] :- null
</cranial>
in=\neg obj[q]
<cranial>
\neg obj[q] :- null
</cranial>
in=\neg obj[r22]
<cranial>
\neg obj[r22] :- null
</cranial>
in=test(insert14)
<cranial>
test(insert14) :- null
</cranial>
in=((obj[p->{kkkkk}], obj[q]); obj[r22])
<cranial>
obj[p->{kkkkk}] :- \neg obj[r22]
obj[q] :- \neg obj[r22]
obj[r22] :- (\neg obj[p->{kkkkk}]; \neg obj[q])
</cranial>
in=test(insert15)
<cranial>
test(insert15) :- null
</cranial>
in=exists(?_X,?_Y)^(((\neg obj[p11(?_X)]; \neg obj[q->{kkk(?_Y)}]), \neg obj[r22]))
<cranial>
\neg obj[p11(\#)] :- obj[q->{kkk(\#)}]
\neg obj[q->{kkk(\#)}] :- obj[p11(\#)]
\neg obj[r22] :- null
</cranial>
in=test(insert16)
<cranial>
test(insert16) :- null
</cranial>
in=exists(?_X,?_Y)^(((\neg obj[p]; \neg obj[q->{kkk(?_Y)}]), \neg obj[r(?_X)]))
<cranial>
\neg obj[p] :- obj[q->{kkk(\#)}]
\neg obj[q->{kkk(\#)}] :- obj[p]
\neg obj[r(\#)] :- null
</cranial>
in=test(insert17)
<cranial>
test(insert17) :- null
</cranial>
in=(forall(?_X,?_Y)^((\neg aaaaa; (\neg obj[ppp]; (\neg obj[?_X]; \neg obj[?_Y])))); exists(?_X)^(\neg pppppp(?_X)))
<cranial>
\neg aaaaa :- ((obj[ppp], (obj[?_newomnivar1], obj[?_newomnivar2])), \naf exists(?_X)^(\naf pppppp(?_X)))
\neg obj[ppp] :- ((obj[?_newomnivar1], obj[?_newomnivar2]), (aaaaa, \naf exists(?_X)^(\naf pppppp(?_X))))
\neg obj[?_newomnivar1] :- (obj[?_newomnivar2], (obj[ppp], (aaaaa, \naf exists(?_X)^(\naf pppppp(?_X)))))
\neg obj[?_newomnivar2] :- (obj[?_newomnivar1], (obj[ppp], (aaaaa, \naf exists(?_X)^(\naf pppppp(?_X)))))
\neg pppppp(\#) :- (aaaaa, (obj[ppp], (exists(?_X)^(obj[?_X]), exists(?_Y)^(obj[?_Y]))))
</cranial>
in=test(insert18)
<cranial>
test(insert18) :- null
</cranial>
in=(forall(?_X,?_Y)^((\neg aaaaa; (\neg obj[ppp]; (\neg obj[?_X]; \neg obj[?_Y])))), forall(?_X)^(pppppp(?_X)))
<cranial>
\neg aaaaa :- (obj[ppp], (obj[?_newomnivar1], obj[?_newomnivar2]))
\neg obj[ppp] :- ((obj[?_newomnivar1], obj[?_newomnivar2]), aaaaa)
\neg obj[?_newomnivar1] :- (obj[?_newomnivar2], (obj[ppp], aaaaa))
\neg obj[?_newomnivar2] :- (obj[?_newomnivar1], (obj[ppp], aaaaa))
pppppp(?_newomnivar3) :- null
</cranial>
in=test(insert19)
<cranial>
test(insert19) :- null
</cranial>
in=forall(?_X,?_Y)^((\neg aaaaa; (\neg obj[ppp]; (\neg obj[?_X]; \neg obj[?_Y]))))
<cranial>
\neg aaaaa :- (obj[ppp], (obj[?_newomnivar1], obj[?_newomnivar2]))
\neg obj[ppp] :- ((obj[?_newomnivar1], obj[?_newomnivar2]), aaaaa)
\neg obj[?_newomnivar1] :- (obj[?_newomnivar2], (obj[ppp], aaaaa))
\neg obj[?_newomnivar2] :- (obj[?_newomnivar1], (obj[ppp], aaaaa))
</cranial>
in=forall(?_X)^(pppppp(?_X))
<cranial>
pppppp(?_newomnivar3) :- null
</cranial>
in=test(insert20)
<cranial>
test(insert20) :- null
</cranial>
in=(\neg a1; \neg b)
<cranial>
\neg a1 :- b
\neg b :- a1
</cranial>
in=test(insert21)
<cranial>
test(insert21) :- null
</cranial>
in=(\neg p(ac); \neg p(bc))
<cranial>
\neg p(ac) :- p(bc)
\neg p(bc) :- p(ac)
</cranial>
in=test(insert22)
<cranial>
test(insert22) :- null
</cranial>
in=(\neg p234(ac); \neg p234(bc))
<cranial>
\neg p234(ac) :- p234(bc)
\neg p234(bc) :- p234(ac)
</cranial>
in=test(insert23)
<cranial>
test(insert23) :- null
</cranial>
in=p567[ac->{1}]
<cranial>
p567[ac->{1}] :- null
</cranial>
in=p567[bc->{1}]
<cranial>
p567[bc->{1}] :- null
</cranial>
in=test(insert24)
<cranial>
test(insert24) :- null
</cranial>
in=test(insert25)
<cranial>
test(insert25) :- null
</cranial>
in=(\neg p567[ac->{1}]; \neg p567[bc->{1}])
<cranial>
\neg p567[ac->{1}] :- p567[bc->{1}]
\neg p567[bc->{1}] :- p567[ac->{1}]
</cranial>
in=test(Rule1)
<cranial>
test(Rule1) :- null
</cranial>
in=forall(?_X,?_Y)^((\neg aaaaa; (\neg obj[ppp]; (\neg obj[?_X]; \neg obj[?_Y]))))
<cranial>
\neg aaaaa :- (obj[ppp], (obj[?_newomnivar1], obj[?_newomnivar2]))
\neg obj[ppp] :- ((obj[?_newomnivar1], obj[?_newomnivar2]), aaaaa)
\neg obj[?_newomnivar1] :- (obj[?_newomnivar2], (obj[ppp], aaaaa))
\neg obj[?_newomnivar2] :- (obj[?_newomnivar1], (obj[ppp], aaaaa))
</cranial>
in=exists(?_X)^(\neg ppppppww(?_X))
<cranial>
\neg ppppppww(\#) :- null
</cranial>
in=test(Rule2)
<cranial>
test(Rule2) :- null
</cranial>
in=(\neg aaaaa; (\neg obj[ppp]; (\neg obj[?_X]; \neg obj[?_Y])))
<cranial>
\neg aaaaa :- (obj[ppp], (obj[?_X], obj[?_Y]))
\neg obj[ppp] :- ((obj[?_X], obj[?_Y]), aaaaa)
\neg obj[?_X] :- (obj[?_Y], (obj[ppp], aaaaa))
\neg obj[?_Y] :- (obj[?_X], (obj[ppp], aaaaa))
</cranial>
in=\neg pppppp
<cranial>
\neg pppppp :- null
</cranial>
in=test(Rule3)
<cranial>
test(Rule3) :- null
</cranial>
in=\neg aaaaa
<cranial>
\neg aaaaa :- null
</cranial>
in=\neg pppppp
<cranial>
\neg pppppp :- null
</cranial>
in=test(Rule4)
<cranial>
test(Rule4) :- null
</cranial>
in=\neg obj[ppp]
<cranial>
\neg obj[ppp] :- null
</cranial>
in=\neg obj[?_X]
<cranial>
\neg obj[?_X] :- null
</cranial>
in=\neg obj[?_Y]
<cranial>
\neg obj[?_Y] :- null
</cranial>
in=\neg pppppp
<cranial>
\neg pppppp :- null
</cranial>
in=test(Rule5)
<cranial>
test(Rule5) :- null
</cranial>
in=(exists(?_X,?_Y)^((aaaaa, (obj[ppp], (obj[?_X], obj[?_Y])))); forall(?_X)^(pppppp(?_X)))
<cranial>
aaaaa :- exists(?_X)^(\neg pppppp(?_X))
obj[ppp] :- exists(?_X)^(\neg pppppp(?_X))
obj[\#] :- exists(?_X)^(\neg pppppp(?_X))
obj[\#] :- exists(?_X)^(\neg pppppp(?_X))
pppppp(?_newomnivar1) :- (\neg aaaaa; (\neg obj[ppp]; (\naf exists(?_X)^(\naf \neg obj[?_X]); \naf exists(?_Y)^(\naf \neg obj[?_Y]))))
</cranial>
in=test(Rule6)
<cranial>
test(Rule6) :- null
</cranial>
in=(exists(?_X,?_Y)^((\neg aaaaa, (\neg obj[ppp]; (\neg obj[?_X]; \neg obj[?_Y])))); forall(?_X)^(pppppp(?_X)))
<cranial>
\neg aaaaa :- exists(?_X)^(\neg pppppp(?_X))
\neg obj[ppp] :- ((obj[\#], obj[\#]), exists(?_X)^(\neg pppppp(?_X)))
\neg obj[\#] :- (obj[\#], (obj[ppp], exists(?_X)^(\neg pppppp(?_X))))
\neg obj[\#] :- (obj[\#], (obj[ppp], exists(?_X)^(\neg pppppp(?_X))))
pppppp(?_newomnivar1) :- (aaaaa; (obj[ppp], (\naf exists(?_X)^(\naf obj[?_X]), \naf exists(?_Y)^(\naf obj[?_Y]))))
</cranial>
in=test(Rule7)
<cranial>
test(Rule7) :- null
</cranial>
in=forall(?_X,?_Y)^((\neg aaaaa; (\neg obj[ppp]; (\neg obj[?_X]; \neg obj[?_Y]))))
<cranial>
\neg aaaaa :- (obj[ppp], (obj[?_newomnivar1], obj[?_newomnivar2]))
\neg obj[ppp] :- ((obj[?_newomnivar1], obj[?_newomnivar2]), aaaaa)
\neg obj[?_newomnivar1] :- (obj[?_newomnivar2], (obj[ppp], aaaaa))
\neg obj[?_newomnivar2] :- (obj[?_newomnivar1], (obj[ppp], aaaaa))
</cranial>
in=exists(?_X)^(\neg pppppp(?_X))
<cranial>
\neg pppppp(\#) :- null
</cranial>
in=test(Rule8)
<cranial>
test(Rule8) :- null
</cranial>
in=forall(?_X,?_Y)^((\neg aaaaa; (\neg obj[ppp]; (\neg obj[?_X]; \neg obj[?_Y]))))
<cranial>
\neg aaaaa :- (obj[ppp], (obj[?_newomnivar1], obj[?_newomnivar2]))
\neg obj[ppp] :- ((obj[?_newomnivar1], obj[?_newomnivar2]), aaaaa)
\neg obj[?_newomnivar1] :- (obj[?_newomnivar2], (obj[ppp], aaaaa))
\neg obj[?_newomnivar2] :- (obj[?_newomnivar1], (obj[ppp], aaaaa))
</cranial>
in=forall(?_X)^(pppppp(?_X))
<cranial>
pppppp(?_newomnivar3) :- null
</cranial>
in=test(Rule9)
<cranial>
test(Rule9) :- null
</cranial>
in=forall(?_X,?_Y)^((\neg aaaaa; (obj[ppp], (obj[?_X], obj[?_Y]))))
<cranial>
\neg aaaaa :- (\neg obj[ppp]; (\neg obj[?_newomnivar1]; \neg obj[?_newomnivar2]))
obj[ppp] :- aaaaa
obj[?_newomnivar1] :- aaaaa
obj[?_newomnivar2] :- aaaaa
</cranial>
in=forall(?_X)^(pppppp(?_X))
<cranial>
pppppp(?_newomnivar3) :- null
</cranial>
in=test(Rule10)
<cranial>
test(Rule10) :- null
</cranial>
in=forall(?_X,?_Y)^(\neg obj(ppp, ?_X, ?_Y))
<cranial>
\neg obj(ppp, ?_newomnivar1, ?_newomnivar2) :- null
</cranial>
in=test(Rule11)
<cranial>
test(Rule11) :- null
</cranial>
in=exists(?_X)^(\neg obj[p123(?_X)])
<cranial>
\neg obj[p123(\#)] :- null
</cranial>
in=test(Rule12)
<cranial>
test(Rule12) :- null
</cranial>
in=exists(?_X,?_Y)^(((\neg obj[p123(?_X)]; \neg obj[q->{kkk(?_Y)}]), \neg obj[r22]))
<cranial>
\neg obj[p123(\#)] :- obj[q->{kkk(\#)}]
\neg obj[q->{kkk(\#)}] :- obj[p123(\#)]
\neg obj[r22] :- null
</cranial>
in=test(Rule13)
<cranial>
test(Rule13) :- null
</cranial>
in=(\neg obj[p->{kkkkk}]; \neg obj[q])
<cranial>
\neg obj[p->{kkkkk}] :- obj[q]
\neg obj[q] :- obj[p->{kkkkk}]
</cranial>
in=\neg obj[r22]
<cranial>
\neg obj[r22] :- null
</cranial>
in=test(Rule14)
<cranial>
test(Rule14) :- null
</cranial>
in=obj[p->{kkkkk}]
<cranial>
obj[p->{kkkkk}] :- null
</cranial>
in=obj[q]
<cranial>
obj[q] :- null
</cranial>
in=\neg obj[r22]
<cranial>
\neg obj[r22] :- null
</cranial>
in=test(Rule15)
<cranial>
test(Rule15) :- null
</cranial>
in=(\neg pp; \neg p22)
<cranial>
\neg pp :- p22
\neg p22 :- pp
</cranial>
in=((\neg qq; \neg q22); (r222; rr222))
<cranial>
\neg qq :- (q22, (\neg r222, \neg rr222))
\neg q22 :- (qq, (\neg r222, \neg rr222))
r222 :- (\neg rr222, (qq, q22))
rr222 :- (\neg r222, (qq, q22))
</cranial>
in=test(Rule16)
<cranial>
test(Rule16) :- null
</cranial>
in=((pp, p22); ((qq, q22), (\neg r222, \neg rr222)))
<cranial>
pp :- ((\neg qq; \neg q22); (r222; rr222))
p22 :- ((\neg qq; \neg q22); (r222; rr222))
qq :- (\neg pp; \neg p22)
q22 :- (\neg pp; \neg p22)
\neg r222 :- (\neg pp; \neg p22)
\neg rr222 :- (\neg pp; \neg p22)
</cranial>
in=test(NestedFrame_fact1)
<cranial>
test(NestedFrame_fact1) :- null
</cranial>
in=\neg a[bs]
<cranial>
\neg a[bs] :- null
</cranial>
in=(\neg a[c->{u}]; (\neg u[d->{dd}], \neg u[e]))
<cranial>
\neg a[c->{u}] :- (u[d->{dd}]; u[e])
\neg u[d->{dd}] :- a[c->{u}]
\neg u[e] :- a[c->{u}]
</cranial>
in=test(NestedFrame_fact2)
<cranial>
test(NestedFrame_fact2) :- null
</cranial>
in=\neg a[bs]
<cranial>
\neg a[bs] :- null
</cranial>
in=(\neg a[c->{\#}]; (\neg \#[|d->{dd}|]; \neg \#[|e{0..*}=>ee|]))
<cranial>
\neg a[c->{\#}] :- (\#[|d->{dd}|], \#[|e{0..*}=>ee|])
\neg \#[|d->{dd}|] :- (\#[|e{0..*}=>ee|], a[c->{\#}])
\neg \#[|e{0..*}=>ee|] :- (\#[|d->{dd}|], a[c->{\#}])
</cranial>
in=test(NestedFrame_fact3)
<cranial>
test(NestedFrame_fact3) :- null
</cranial>
in=\neg a[bs]
<cranial>
\neg a[bs] :- null
</cranial>
in=(\neg a[c->{u}]; (\neg u[|d|], \neg u[|e->{ee}|]))
<cranial>
\neg a[c->{u}] :- (u[|d|]; u[|e->{ee}|])
\neg u[|d|] :- a[c->{u}]
\neg u[|e->{ee}|] :- a[c->{u}]
</cranial>
in=test(NestedFrame_fact4)
<cranial>
test(NestedFrame_fact4) :- null
</cranial>
in=\neg a[bs]
<cranial>
\neg a[bs] :- null
</cranial>
in=(\neg a[c->{u}]; (\neg u[|d{0..*}=>dd|]; \neg u[|e|]))
<cranial>
\neg a[c->{u}] :- (u[|d{0..*}=>dd|], u[|e|])
\neg u[|d{0..*}=>dd|] :- (u[|e|], a[c->{u}])
\neg u[|e|] :- (u[|d{0..*}=>dd|], a[c->{u}])
</cranial>
in=test(NestedFrame_fact5)
<cranial>
test(NestedFrame_fact5) :- null
</cranial>
in=(((\neg a[u->{p}]; \neg u[d->{y}]); \neg a[mm]); (\neg a[ppp->{\#}]; \neg a : bb))
<cranial>
\neg a[u->{p}] :- (u[d->{y}], (a[mm], (a[ppp->{\#}], a : bb)))
\neg u[d->{y}] :- (a[u->{p}], (a[mm], (a[ppp->{\#}], a : bb)))
\neg a[mm] :- ((a[u->{p}], u[d->{y}]), (a[ppp->{\#}], a : bb))
\neg a[ppp->{\#}] :- (a : bb, ((a[u->{p}], u[d->{y}]), a[mm]))
\neg a : bb :- (a[ppp->{\#}], ((a[u->{p}], u[d->{y}]), a[mm]))
</cranial>
in=test(NestedFrame_fact6)
<cranial>
test(NestedFrame_fact6) :- null
</cranial>
in=((((\neg a[u->{p}]; \neg p :: pp5); (\neg u[d->{y}]; \neg d : dd)); (\neg a[mm]; (\neg a[\#]; \neg \# :: nnnn))); (\neg a[ppp->{\#}]; \neg a : bb))
<cranial>
\neg a[u->{p}] :- (p :: pp5, ((u[d->{y}], d : dd), ((a[mm], (a[\#], \# :: nnnn)), (a[ppp->{\#}], a : bb))))
\neg p :: pp5 :- (a[u->{p}], ((u[d->{y}], d : dd), ((a[mm], (a[\#], \# :: nnnn)), (a[ppp->{\#}], a : bb))))
\neg u[d->{y}] :- (d : dd, ((a[u->{p}], p :: pp5), ((a[mm], (a[\#], \# :: nnnn)), (a[ppp->{\#}], a : bb))))
\neg d : dd :- (u[d->{y}], ((a[u->{p}], p :: pp5), ((a[mm], (a[\#], \# :: nnnn)), (a[ppp->{\#}], a : bb))))
\neg a[mm] :- ((a[\#], \# :: nnnn), (((a[u->{p}], p :: pp5), (u[d->{y}], d : dd)), (a[ppp->{\#}], a : bb)))
\neg a[\#] :- (\# :: nnnn, (a[mm], (((a[u->{p}], p :: pp5), (u[d->{y}], d : dd)), (a[ppp->{\#}], a : bb))))
\neg \# :: nnnn :- (a[\#], (a[mm], (((a[u->{p}], p :: pp5), (u[d->{y}], d : dd)), (a[ppp->{\#}], a : bb))))
\neg a[ppp->{\#}] :- (a : bb, (((a[u->{p}], p :: pp5), (u[d->{y}], d : dd)), (a[mm], (a[\#], \# :: nnnn))))
\neg a : bb :- (a[ppp->{\#}], (((a[u->{p}], p :: pp5), (u[d->{y}], d : dd)), (a[mm], (a[\#], \# :: nnnn))))
</cranial>
in=test(NestedFrame_fact7)
<cranial>
test(NestedFrame_fact7) :- null
</cranial>
in=((\neg a[u]; \neg u[d->{y}]); \neg u[f->{k}])
<cranial>
\neg a[u] :- (u[d->{y}], u[f->{k}])
\neg u[d->{y}] :- (a[u], u[f->{k}])
\neg u[f->{k}] :- (a[u], u[d->{y}])
</cranial>
in=test(NestedFrame_fact8)
<cranial>
test(NestedFrame_fact8) :- null
</cranial>
in=((((\neg a[u->{p}]; \neg p :: pp5); (\neg u[d{0..*}=>y]; \neg d : dd)); (\neg a[mm]; (\neg a[nnn]; \neg nnn :: nnnn))); (\neg a[ppp{0..*}=>kkkk]; \neg a : bb))
<cranial>
\neg a[u->{p}] :- (p :: pp5, ((u[d{0..*}=>y], d : dd), ((a[mm], (a[nnn], nnn :: nnnn)), (a[ppp{0..*}=>kkkk], a : bb))))
\neg p :: pp5 :- (a[u->{p}], ((u[d{0..*}=>y], d : dd), ((a[mm], (a[nnn], nnn :: nnnn)), (a[ppp{0..*}=>kkkk], a : bb))))
\neg u[d{0..*}=>y] :- (d : dd, ((a[u->{p}], p :: pp5), ((a[mm], (a[nnn], nnn :: nnnn)), (a[ppp{0..*}=>kkkk], a : bb))))
\neg d : dd :- (u[d{0..*}=>y], ((a[u->{p}], p :: pp5), ((a[mm], (a[nnn], nnn :: nnnn)), (a[ppp{0..*}=>kkkk], a : bb))))
\neg a[mm] :- ((a[nnn], nnn :: nnnn), (((a[u->{p}], p :: pp5), (u[d{0..*}=>y], d : dd)), (a[ppp{0..*}=>kkkk], a : bb)))
\neg a[nnn] :- (nnn :: nnnn, (a[mm], (((a[u->{p}], p :: pp5), (u[d{0..*}=>y], d : dd)), (a[ppp{0..*}=>kkkk], a : bb))))
\neg nnn :: nnnn :- (a[nnn], (a[mm], (((a[u->{p}], p :: pp5), (u[d{0..*}=>y], d : dd)), (a[ppp{0..*}=>kkkk], a : bb))))
\neg a[ppp{0..*}=>kkkk] :- (a : bb, (((a[u->{p}], p :: pp5), (u[d{0..*}=>y], d : dd)), (a[mm], (a[nnn], nnn :: nnnn))))
\neg a : bb :- (a[ppp{0..*}=>kkkk], (((a[u->{p}], p :: pp5), (u[d{0..*}=>y], d : dd)), (a[mm], (a[nnn], nnn :: nnnn))))
</cranial>
in=test(NestedFrame_fact9)
<cranial>
test(NestedFrame_fact9) :- null
</cranial>
in=((\neg a[u]; \neg u[d{0..*}=>y]); \neg u[f{0..*}=>k])
<cranial>
\neg a[u] :- (u[d{0..*}=>y], u[f{0..*}=>k])
\neg u[d{0..*}=>y] :- (a[u], u[f{0..*}=>k])
\neg u[f{0..*}=>k] :- (a[u], u[d{0..*}=>y])
</cranial>
in=test(NestedFrame_fact10)
<cranial>
test(NestedFrame_fact10) :- null
</cranial>
in=((\neg a[c->{u}]; (\neg u[|d->{y}|], \neg u[|e{0..*}=>x|])); (\neg c[pp5]; \neg pp5 : ppp))
<cranial>
\neg a[c->{u}] :- ((u[|d->{y}|]; u[|e{0..*}=>x|]), (c[pp5], pp5 : ppp))
\neg u[|d->{y}|] :- (a[c->{u}], (c[pp5], pp5 : ppp))
\neg u[|e{0..*}=>x|] :- (a[c->{u}], (c[pp5], pp5 : ppp))
\neg c[pp5] :- (pp5 : ppp, (a[c->{u}], (u[|d->{y}|]; u[|e{0..*}=>x|])))
\neg pp5 : ppp :- (c[pp5], (a[c->{u}], (u[|d->{y}|]; u[|e{0..*}=>x|])))
</cranial>
in=test(NestedFrame_fact11)
<cranial>
test(NestedFrame_fact11) :- null
</cranial>
in=a[|b{0..*}=>x|]
<cranial>
a[|b{0..*}=>x|] :- null
</cranial>
in=b : dd
<cranial>
b : dd :- null
</cranial>
in=a[|b{0..*}=>y|]
<cranial>
a[|b{0..*}=>y|] :- null
</cranial>
in=b : dd
<cranial>
b : dd :- null
</cranial>
in=test(NestedFrame_fact12)
<cranial>
test(NestedFrame_fact12) :- null
</cranial>
in=((\neg a[|b{0..*}=>x|]; \neg b : dd); (\neg a[|b{0..*}=>y|]; \neg b : dd))
<cranial>
\neg a[|b{0..*}=>x|] :- (b : dd, (a[|b{0..*}=>y|], b : dd))
\neg b : dd :- (a[|b{0..*}=>x|], (a[|b{0..*}=>y|], b : dd))
\neg a[|b{0..*}=>y|] :- (b : dd, (a[|b{0..*}=>x|], b : dd))
\neg b : dd :- (a[|b{0..*}=>y|], (a[|b{0..*}=>x|], b : dd))
</cranial>
in=test(NestedFrame_fact16)
<cranial>
test(NestedFrame_fact16) :- null
</cranial>
in=((\neg a[|=>bb|]; \neg bb[=>cc]); \neg bb : dd)
<cranial>
\neg a[|=>bb|] :- (bb[=>cc], bb : dd)
\neg bb[=>cc] :- (a[|=>bb|], bb : dd)
\neg bb : dd :- (a[|=>bb|], bb[=>cc])
</cranial>
in=test(NestedFrame_fact17)
<cranial>
test(NestedFrame_fact17) :- null
</cranial>
in=((\neg a[=>bb]; \neg bb[|=>cc|]); \neg bb : dd)
<cranial>
\neg a[=>bb] :- (bb[|=>cc|], bb : dd)
\neg bb[|=>cc|] :- (a[=>bb], bb : dd)
\neg bb : dd :- (a[=>bb], bb[|=>cc|])
</cranial>
in=test(NestedFrame_insert1)
<cranial>
test(NestedFrame_insert1) :- null
</cranial>
in=(\neg a[b], (\neg a[c->{u}]; (\neg u[|d=>(dd)|], \neg u[|e->{ee}|])))
<cranial>
\neg a[b] :- null
\neg a[c->{u}] :- (u[|d=>(dd)|]; u[|e->{ee}|])
\neg u[|d=>(dd)|] :- a[c->{u}]
\neg u[|e->{ee}|] :- a[c->{u}]
</cranial>
in=test(NestedFrame_insert2)
<cranial>
test(NestedFrame_insert2) :- null
</cranial>
in=(\neg a[b], (\neg a[c->{u}]; (\neg u[d]; \neg u[e])))
<cranial>
\neg a[b] :- null
\neg a[c->{u}] :- (u[d], u[e])
\neg u[d] :- (u[e], a[c->{u}])
\neg u[e] :- (u[d], a[c->{u}])
</cranial>
in=test(NestedFrame_insert3)
<cranial>
test(NestedFrame_insert3) :- null
</cranial>
in=\neg a[b]
<cranial>
\neg a[b] :- null
</cranial>
in=(\neg a[c->{u}]; (\neg u[d], (\neg u[e->{\#}]; (\neg \#[ww]; \neg \#[bb{0..*}=>nn]))))
<cranial>
\neg a[c->{u}] :- (u[d]; (u[e->{\#}], (\#[ww], \#[bb{0..*}=>nn])))
\neg u[d] :- a[c->{u}]
\neg u[e->{\#}] :- ((\#[ww], \#[bb{0..*}=>nn]), a[c->{u}])
\neg \#[ww] :- (\#[bb{0..*}=>nn], (u[e->{\#}], a[c->{u}]))
\neg \#[bb{0..*}=>nn] :- (\#[ww], (u[e->{\#}], a[c->{u}]))
</cranial>
in=test(NestedFrame_insert4)
<cranial>
test(NestedFrame_insert4) :- null
</cranial>
in=\neg a[b]
<cranial>
\neg a[b] :- null
</cranial>
in=(\neg a[c->{u}]; (\neg u[d]; \neg u[e]))
<cranial>
\neg a[c->{u}] :- (u[d], u[e])
\neg u[d] :- (u[e], a[c->{u}])
\neg u[e] :- (u[d], a[c->{u}])
</cranial>

++Warning[Ergo]> [cranial_data.flr] <Compiler> near line(15)/char(53) `q'
                  HiLog function symbol was also used with a different number of arguments on line 14 in the same file 
		  If this is not an error, use the :- symbol_context directive to suppress this warning

++Warning[Ergo]> [cranial_data.flr] <Compiler> near line(16)/char(24) `p'
                  HiLog function symbol was also used with a different number of arguments on line 13 in the same file 
		  If this is not an error, use the :- symbol_context directive to suppress this warning

++Warning[Ergo]> [cranial_data.flr] <Compiler> near line(118)/char(30) `b'
                  HiLog function symbol was also used as a predicate symbol on line 60 in the same file 
		  If this is not an error, use the :- symbol_context directive to suppress this warning


++3 warnings

