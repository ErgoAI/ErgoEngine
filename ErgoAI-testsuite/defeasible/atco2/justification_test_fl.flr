:- use_argumentation_theory{AT} .
:- symbol_context{rif#instRule(?,?,?)@?}.
:- iriprefix{swrlb = "http://www.w3.org/2003/11/swrlb#"}.
:- iriprefix{rif = "http://vulcan.com/2008/rif-builtins#"}.
:- iriprefix{dc = "http://purl.org/dc/elements/1.1/"}.
?- [atco2>>AT] .
output[rif#type->xsd#decimal] .
input1[rif#type->xsd#decimal] .
swrlb#add[rif#arg->input1] .
swrlb#add[rif#arg->input2] .
swrlb#add[rif#binding->addbp] .
swrlb#add[rif#arg->output] .
addbp[rif#javaClass->("org.daml.swrl.jena.builtins.numerical.Add"^^\string)] .
input2[rif#type->xsd#decimal] .
swrlb#add : rif#ExternalPredicate .
addbp[rif#in->input1] .
addbp[rif#in->input2] .
addbp[rif#out->output] .
swrlb#abs[rif#arg->input1] .
output[rif#type->xsd#decimal] .
input1[rif#type->xsd#decimal] .
swrlb#abs[rif#arg->output] .
absbp[rif#out->output] .
swrlb#abs[rif#binding->absbp] .
swrlb#abs : rif#ExternalPredicate .
absbp[rif#javaClass->("org.daml.swrl.jena.builtins.numerical.Abs"^^\string)] .
absbp[rif#in->input1] .
output[rif#type->xsd#decimal] .
ceilingbp[rif#javaClass->("org.daml.swrl.jena.builtins.numerical.Ceiling"^^\string)] .
input1[rif#type->xsd#decimal] .
ceilingbp[rif#in->input1] .
swrlb#ceiling[rif#arg->output] .
ceilingbp[rif#out->output] .
swrlb#ceiling : rif#ExternalPredicate .
swrlb#ceiling[rif#binding->ceilingbp] .
swrlb#ceiling[rif#arg->input1] .
output[rif#type->xsd#decimal] .
input1[rif#type->xsd#decimal] .
cosbp[rif#out->output] .
swrlb#cos[rif#binding->cosbp] .
cosbp[rif#in->input1] .
swrlb#cos[rif#arg->input1] .
cosbp[rif#javaClass->("org.daml.swrl.jena.builtins.numerical.Cos"^^\string)] .
swrlb#cos[rif#arg->output] .
swrlb#cos : rif#ExternalPredicate .
dividebp[rif#in->input2] .
dividebp[rif#in->input1] .
output[rif#type->xsd#decimal] .
input1[rif#type->xsd#decimal] .
swrlb#divide[rif#arg->input2] .
input2[rif#type->xsd#decimal] .
swrlb#divide[rif#arg->input1] .
swrlb#divide[rif#binding->dividebp] .
dividebp[rif#out->output] .
dividebp[rif#javaClass->("org.daml.swrl.jena.builtins.numerical.Divide"^^\string)] .
swrlb#divide : rif#ExternalPredicate .
swrlb#divide[rif#arg->output] .
output[rif#type->xsd#decimal] .
input1[rif#type->xsd#decimal] .
floorbp[rif#out->output] .
swrlb#floor[rif#binding->floorbp] .
swrlb#floor[rif#arg->output] .
swrlb#floor[rif#arg->input1] .
floorbp[rif#javaClass->("org.daml.swrl.jena.builtins.numerical.Floor"^^\string)] .
floorbp[rif#in->input1] .
swrlb#floor : rif#ExternalPredicate .
intDivbp[rif#javaClass->("org.daml.swrl.jena.builtins.numerical.IntegerDivide"^^\string)] .
swrlb#integerDivide[rif#binding->intDivbp] .
input2[rif#type->xsd#integer] .
swrlb#integerDivide : rif#ExternalPredicate .
intDivbp[rif#out->output] .
intDivbp[rif#in->input2] .
swrlb#integerDivide[rif#arg->output] .
swrlb#integerDivide[rif#arg->input2] .
swrlb#integerDivide[rif#arg->input1] .
output[rif#type->xsd#integer] .
intDivbp[rif#in->input1] .
input1[rif#type->xsd#integer] .
input2[rif#type->xsd#integer] .
modbp[rif#in->input1] .
modbp[rif#in->input2] .
output[rif#type->xsd#integer] .
swrlb#mod[rif#arg->output] .
modbp[rif#out->output] .
swrlb#mod[rif#arg->input2] .
modbp[rif#javaClass->("org.daml.swrl.jena.builtins.numerical.Mod"^^\string)] .
swrlb#mod : rif#ExternalPredicate .
swrlb#mod[rif#binding->modbp] .
input1[rif#type->xsd#integer] .
swrlb#mod[rif#arg->input1] .
output[rif#type->xsd#decimal] .
multiplybp[rif#javaClass->("org.daml.swrl.jena.builtins.numerical.Multiply"^^\string)] .
multiplybp[rif#in->input1] .
input1[rif#type->xsd#decimal] .
swrlb#multiply[rif#arg->input2] .
swrlb#multiply[rif#arg->input1] .
input2[rif#type->xsd#decimal] .
multiplybp[rif#in->input2] .
swrlb#multiply[rif#binding->multiplybp] .
swrlb#multiply[rif#arg->output] .
swrlb#multiply : rif#ExternalPredicate .
multiplybp[rif#out->output] .
output[rif#type->xsd#decimal] .
swrlb#pow[rif#arg->output] .
input1[rif#type->xsd#decimal] .
powbp[rif#in->input2] .
swrlb#pow : rif#ExternalPredicate .
input2[rif#type->xsd#decimal] .
powbp[rif#javaClass->("org.daml.swrl.jena.builtins.numerical.Pow"^^\string)] .
powbp[rif#out->output] .
powbp[rif#in->input1] .
swrlb#pow[rif#binding->powbp] .
swrlb#pow[rif#arg->input2] .
swrlb#pow[rif#arg->input1] .
output[rif#type->xsd#decimal] .
input1[rif#type->xsd#decimal] .
roundbp[rif#javaClass->("org.daml.swrl.jena.builtins.numerical.Round"^^\string)] .
swrlb#round : rif#ExternalPredicate .
swrlb#round[rif#binding->roundbp] .
swrlb#round[rif#arg->output] .
roundbp[rif#out->output] .
roundbp[rif#in->input1] .
swrlb#round[rif#arg->input1] .
roundhalftoevenbp[rif#javaClass->("org.daml.swrl.jena.builtins.numerical.RoundHalfToEven"^^\string)] .
output[rif#type->xsd#decimal] .
input1[rif#type->xsd#decimal] .
roundhalftoevenbp[rif#in->input1] .
swrlb#roundHalfToEven : rif#ExternalPredicate .
roundhalftoevenbp[rif#out->output] .
swrlb#roundHalfToEven[rif#binding->roundhalftoevenbp] .
swrlb#roundHalfToEven[rif#arg->input1] .
swrlb#roundHalfToEven[rif#arg->output] .
output[rif#type->xsd#decimal] .
swrlb#sin[rif#binding->sinbp] .
input1[rif#type->xsd#decimal] .
swrlb#sin : rif#ExternalPredicate .
sinbp[rif#out->output] .
swrlb#sin[rif#arg->input1] .
swrlb#sin[rif#arg->output] .
sinbp[rif#in->input1] .
sinbp[rif#javaClass->("org.daml.swrl.jena.builtins.numerical.Sin"^^\string)] .
swrlb#subtract[rif#binding->subtractbp] .
output[rif#type->xsd#decimal] .
swrlb#subtract[rif#arg->input1] .
swrlb#subtract[rif#arg->input2] .
input1[rif#type->xsd#decimal] .
subtractbp[rif#out->output] .
swrlb#subtract[rif#arg->output] .
subtractbp[rif#javaClass->("org.daml.swrl.jena.builtins.numerical.Subtract"^^\string)] .
input2[rif#type->xsd#decimal] .
subtractbp[rif#in->input2] .
subtractbp[rif#in->input1] .
swrlb#subtract : rif#ExternalPredicate .
tanbp[rif#out->output] .
output[rif#type->xsd#decimal] .
input1[rif#type->xsd#decimal] .
swrlb#tan : rif#ExternalPredicate .
tanbp[rif#in->input1] .
tanbp[rif#javaClass->("org.daml.swrl.jena.builtins.numerical.Tan"^^\string)] .
swrlb#tan[rif#binding->tanbp] .
swrlb#tan[rif#arg->input1] .
swrlb#tan[rif#arg->output] .
unaryMinusbp[rif#out->output] .
output[rif#type->xsd#decimal] .
input1[rif#type->xsd#decimal] .
unaryMinusbp[rif#javaClass->("org.daml.swrl.jena.builtins.numerical.UnaryMinus"^^\string)] .
unaryMinusbp[rif#in->input1] .
swrlb#unaryMinus[rif#binding->unaryMinusbp] .
swrlb#unaryMinus[rif#arg->output] .
swrlb#unaryMinus[rif#arg->input1] .
swrlb#unaryMinus : rif#ExternalPredicate .
output[rif#type->xsd#decimal] .
unaryPlusbp[rif#in->input1] .
input1[rif#type->xsd#decimal] .
unaryPlusbp[rif#javaClass->("org.daml.swrl.jena.builtins.numerical.UnaryPlus"^^\string)] .
unaryPlusbp[rif#out->output] .
swrlb#unaryPlus : rif#ExternalPredicate .
swrlb#unaryPlus[rif#binding->unaryPlusbp] .
swrlb#unaryPlus[rif#arg->output] .
swrlb#unaryPlus[rif#arg->input1] .
input2[rif#type->xsd#duration] .
input1[rif#type->xsd#duration] .
output[rif#type->xsd#duration] .
swrlb#addDayTimeDurations[rif#arg->input1] .
addDayTimeDurationsbp[rif#out->output] .
swrlb#addDayTimeDurations[rif#arg->output] .
swrlb#addDayTimeDurations : rif#ExternalPredicate .
addDayTimeDurationsbp[rif#javaClass->("org.daml.swrl.jena.builtins.date.AddDayTimeDurations"^^\string)] .
swrlb#addDayTimeDurations[rif#binding->addDayTimeDurationsbp] .
swrlb#addDayTimeDurations[rif#arg->input2] .
addDayTimeDurationsbp[rif#in->input1] .
addDayTimeDurationsbp[rif#in->input2] .
input2[rif#type->xsd#duration] .
swrlb#addDayTimeDurationToDate[rif#arg->output] .
addDayTimeDurationToDateBp[rif#out->output] .
addDayTimeDurationToDateBp[rif#javaClass->("org.daml.swrl.jena.builtins.date.AddDayTimeDurationToDate"^^\string)] .
addDayTimeDurationToDateBp[rif#in->input1] .
input1[rif#type->xsd#date] .
swrlb#addDayTimeDurationToDate[rif#arg->input1] .
swrlb#addDayTimeDurationToDate : rif#ExternalPredicate .
swrlb#addDayTimeDurationToDate[rif#binding->addDayTimeDurationToDateBp] .
addDayTimeDurationToDateBp[rif#in->input2] .
swrlb#addDayTimeDurationToDate[rif#arg->input2] .
output[rif#type->xsd#dateTime] .
swrlb#addDayTimeDurationToDateTime : rif#ExternalPredicate .
input2[rif#type->xsd#duration] .
addDayTimeDurationToDateTimeBp[rif#in->input2] .
addDayTimeDurationToDateTimeBp[rif#in->input1] .
swrlb#addDayTimeDurationToDateTime[rif#arg->output] .
addDayTimeDurationToDateTimeBp[rif#out->output] .
addDayTimeDurationToDateTimeBp[rif#javaClass->("org.daml.swrl.jena.builtins.date.AddDayTimeDurationToDateTime"^^\string)] .
swrlb#addDayTimeDurationToDateTime[rif#binding->addDayTimeDurationToDateTimeBp] .
swrlb#addDayTimeDurationToDateTime[rif#arg->input2] .
swrlb#addDayTimeDurationToDateTime[rif#arg->input1] .
output[rif#type->xsd#dateTime] .
input1[rif#type->xsd#dateTime] .
addDayTimeDurationToTimeBp[rif#in->input2] .
swrlb#addDayTimeDurationToTime[rif#arg->output] .
input2[rif#type->xsd#duration] .
swrlb#addDayTimeDurationToTime : rif#ExternalPredicate .
addDayTimeDurationToTimeBp[rif#out->output] .
addDayTimeDurationToTimeBp[rif#javaClass->("org.daml.swrl.jena.builtins.date.AddDayTimeDurationToTime"^^\string)] .
addDayTimeDurationToTimeBp[rif#in->input1] .
input1[rif#type->xsd#time] .
swrlb#addDayTimeDurationToTime[rif#arg->input1] .
swrlb#addDayTimeDurationToTime[rif#arg->input2] .
swrlb#addDayTimeDurationToTime[rif#binding->addDayTimeDurationToTimeBp] .
output[rif#type->xsd#dateTime] .
addYearMonthDurationsBp[rif#javaClass->("org.daml.swrl.jena.builtins.date.AddYearMonthDurations"^^\string)] .
input2[rif#type->xsd#duration] .
input1[rif#type->xsd#duration] .
addYearMonthDurationsBp[rif#in->input1] .
swrlb#addYearMonthDurations[rif#binding->addYearMonthDurationsBp] .
output[rif#type->xsd#duration] .
swrlb#addYearMonthDurations[rif#arg->input2] .
swrlb#addYearMonthDurations[rif#arg->input1] .
addYearMonthDurationsBp[rif#out->output] .
addYearMonthDurationsBp[rif#in->input2] .
swrlb#addYearMonthDurations[rif#arg->output] .
swrlb#addYearMonthDurations : rif#ExternalPredicate .
swrlb#addYearMonthDurationToDate[rif#binding->addYearMonthDurationToDateBp] .
input2[rif#type->xsd#duration] .
addYearMonthDurationToDateBp[rif#in->input1] .
input1[rif#type->xsd#date] .
addYearMonthDurationToDateBp[rif#in->input2] .
swrlb#addYearMonthDurationToDate[rif#arg->input2] .
addYearMonthDurationToDateBp[rif#javaClass->("org.daml.swrl.jena.builtins.date.AddYearMonthDurationToDate"^^\string)] .
swrlb#addYearMonthDurationToDate[rif#arg->output] .
output[rif#type->xsd#dateTime] .
addYearMonthDurationToDateBp[rif#out->output] .
swrlb#addYearMonthDurationToDate[rif#arg->input1] .
swrlb#addYearMonthDurationToDate : rif#ExternalPredicate .
swrlb#addYearMonthDurationToDateTime[rif#arg->input2] .
input2[rif#type->xsd#duration] .
swrlb#addYearMonthDurationToDateTime[rif#arg->input1] .
addYearMonthDurationToDateTimeBp[rif#javaClass->("org.daml.swrl.jena.builtins.date.AddYearMonthDurationToDateTime"^^\string)] .
addYearMonthDurationToDateTimeBp[rif#in->input1] .
swrlb#addYearMonthDurationToDateTime : rif#ExternalPredicate .
swrlb#addYearMonthDurationToDateTime[rif#arg->output] .
addYearMonthDurationToDateTimeBp[rif#out->output] .
addYearMonthDurationToDateTimeBp[rif#in->input2] .
output[rif#type->xsd#dateTime] .
swrlb#addYearMonthDurationToDateTime[rif#binding->addYearMonthDurationToDateTimeBp] .
input1[rif#type->xsd#dateTime] .
month[rif#type->xsd#integer] .
swrlb#date : rif#ExternalPredicate .
year[rif#type->xsd#integer] .
day[rif#type->xsd#integer] .
output[rif#type->xsd#date] .
swrlb#date[rif#arg->month] .
dateBp[rif#in->month] .
dateBp[rif#in->timeZone] .
swrlb#date[rif#arg->year] .
dateBp[rif#in->year] .
timeZone[rif#type->xsd#string] .
dateBp[rif#in->day] .
dateBp[rif#out->output] .
swrlb#date[rif#arg->day] .
swrlb#date[rif#arg->timeZone] .
swrlb#date[rif#binding->dateBp] .
swrlb#date[rif#arg->output] .
dateBp[rif#javaClass->("org.daml.swrl.jena.builtins.date.Date"^^\string)] .
swrlb#dateTime[rif#arg->timeZone] .
dateTimebp[rif#in->seconds] .
dateTimebp[rif#in->hours] .
year[rif#type->xsd#integer] .
dateTimebp[rif#in->minutes] .
swrlb#dateTime[rif#arg->minutes] .
swrlb#dateTime[rif#arg->output] .
swrlb#dateTime[rif#arg->hours] .
hours[rif#type->xsd#integer] .
dateTimebp[rif#javaClass->("org.daml.swrl.jena.builtins.date.DateTime"^^\string)] .
seconds[rif#type->xsd#integer] .
output[rif#type->xsd#dateTime] .
swrlb#dateTime : rif#ExternalPredicate .
month[rif#type->xsd#integer] .
swrlb#dateTime[rif#arg->year] .
swrlb#dateTime[rif#arg->seconds] .
day[rif#type->xsd#integer] .
dateTimebp[rif#in->year] .
timeZone[rif#type->xsd#string] .
dateTimebp[rif#in->month] .
dateTimebp[rif#in->timeZone] .
dateTimebp[rif#in->day] .
swrlb#dateTime[rif#arg->month] .
swrlb#dateTime[rif#arg->day] .
dateTimebp[rif#out->output] .
minutes[rif#type->xsd#integer] .
swrlb#dateTime[rif#binding->dateTimebp] .
dayTimeDurationBp[rif#in->minutes] .
swrlb#dayTimeDuration[rif#arg->days] .
swrlb#dayTimeDuration[rif#arg->seconds] .
swrlb#dayTimeDuration[rif#arg->minutes] .
dayTimeDurationBp[rif#javaClass->("org.daml.swrl.jena.builtins.date.DayTimeDuration"^^\string)] .
swrlb#dayTimeDuration[rif#binding->dayTimeDurationBp] .
dayTimeDurationBp[rif#in->hours] .
dayTimeDurationBp[rif#out->output] .
swrlb#dayTimeDuration[rif#arg->output] .
output[rif#type->xsd#duration] .
dayTimeDurationBp[rif#in->days] .
swrlb#dayTimeDuration : rif#ExternalPredicate .
days[rif#type->xsd#integer] .
swrlb#dayTimeDuration[rif#arg->hours] .
dayTimeDurationBp[rif#in->seconds] .
hours[rif#type->xsd#integer] .
minutes[rif#type->xsd#integer] .
seconds[rif#type->xsd#integer] .
input2[rif#type->xsd#duration] .
input1[rif#type->xsd#duration] .
swrlb#divideDayTimeDuration[rif#arg->output] .
divideDayTimeDurationBp[rif#in->input2] .
output[rif#type->xsd#duration] .
swrlb#divideDayTimeDuration : rif#ExternalPredicate .
divideDayTimeDurationBp[rif#javaClass->("org.daml.swrl.jena.builtins.date.DivideDayTimeDuration"^^\string)] .
divideDayTimeDurationBp[rif#in->input1] .
swrlb#divideDayTimeDuration[rif#arg->input2] .
swrlb#divideDayTimeDuration[rif#binding->divideDayTimeDurationBp] .
swrlb#divideDayTimeDuration[rif#arg->input1] .
divideDayTimeDurationBp[rif#out->output] .
swrlb#divideYearMonthDuration[rif#arg->input1] .
input2[rif#type->xsd#duration] .
input1[rif#type->xsd#duration] .
output[rif#type->xsd#duration] .
swrlb#divideYearMonthDuration[rif#arg->input2] .
divideyearMonthDurationbp[rif#in->input1] .
swrlb#divideYearMonthDuration : rif#ExternalPredicate .
divideyearMonthDurationbp[rif#in->input2] .
divideyearMonthDurationbp[rif#out->output] .
swrlb#divideYearMonthDuration[rif#binding->divideyearMonthDurationbp] .
divideyearMonthDurationbp[rif#javaClass->("org.daml.swrl.jena.builtins.date.DivideYearMonthDuration"^^\string)] .
swrlb#divideYearMonthDuration[rif#arg->output] .
input2[rif#type->xsd#duration] .
input1[rif#type->xsd#duration] .
swrlb#multiplyDayTimeDuration : rif#ExternalPredicate .
output[rif#type->xsd#duration] .
swrlb#multiplyDayTimeDuration[rif#arg->output] .
swrlb#multiplyDayTimeDuration[rif#binding->multiplyDayTimeDurationBp] .
multiplyDayTimeDurationBp[rif#out->output] .
swrlb#multiplyDayTimeDuration[rif#arg->input1] .
multiplyDayTimeDurationBp[rif#javaClass->("org.daml.swrl.jena.builtins.date.MultiplyDayTimeDuration"^^\string)] .
multiplyDayTimeDurationBp[rif#in->input1] .
multiplyDayTimeDurationBp[rif#in->input2] .
swrlb#multiplyDayTimeDuration[rif#arg->input2] .
multiplyYearMonthDurationBp[rif#in->input2] .
swrlb#multiplyYearMonthDuration : rif#ExternalPredicate .
input2[rif#type->xsd#duration] .
input1[rif#type->xsd#duration] .
output[rif#type->xsd#duration] .
swrlb#multiplyYearMonthDuration[rif#arg->output] .
multiplyYearMonthDurationBp[rif#in->input1] .
swrlb#multiplyYearMonthDuration[rif#arg->input2] .
multiplyYearMonthDurationBp[rif#out->output] .
swrlb#multiplyYearMonthDuration[rif#binding->multiplyYearMonthDurationBp] .
swrlb#multiplyYearMonthDuration[rif#arg->input1] .
multiplyYearMonthDurationBp[rif#javaClass->("org.daml.swrl.jena.builtins.date.MultiplyYearMonthDuration"^^\string)] .
swrlb#subtractDates[rif#binding->subtractDatesbp] .
swrlb#subtractDates[rif#arg->input2] .
swrlb#subtractDates : rif#ExternalPredicate .
output[rif#type->xsd#duration] .
subtractDatesbp[rif#javaClass->("org.daml.swrl.jena.builtins.date.SubtractDates"^^\string)] .
input1[rif#type->xsd#date] .
subtractDatesbp[rif#out->output] .
swrlb#subtractDates[rif#arg->input1] .
input2[rif#type->xsd#date] .
swrlb#subtractDates[rif#arg->output] .
subtractDatesbp[rif#in->input2] .
subtractDatesbp[rif#in->input1] .
output[rif#type->xsd#duration] .
swrlb#subtractDateTimesYieldingDayTimeDuration[rif#arg->output] .
swrlb#subtractDateTimesYieldingDayTimeDuration[rif#binding->subtractDateTimesYeildingDayTimeDurationBp] .
swrlb#subtractDateTimesYieldingDayTimeDuration[rif#arg->input1] .
swrlb#subtractDateTimesYieldingDayTimeDuration[rif#arg->input2] .
subtractDateTimesYeildingDayTimeDurationBp[rif#javaClass->("org.daml.swrl.jena.builtins.date.SubtractDateTimesYieldingDayTimeDuration"^^\string)] .
input2[rif#type->xsd#dateTime] .
subtractDateTimesYeildingDayTimeDurationBp[rif#in->input1] .
subtractDateTimesYeildingDayTimeDurationBp[rif#out->output] .
swrlb#subtractDateTimesYieldingDayTimeDuration : rif#ExternalPredicate .
subtractDateTimesYeildingDayTimeDurationBp[rif#in->input2] .
input1[rif#type->xsd#dateTime] .
swrlb#subtractDateTimesYieldingYearMonthDuration : rif#ExternalPredicate .
output[rif#type->xsd#duration] .
subtractDateTimesYieldingYearMonthDurationBp[rif#out->output] .
subtractDateTimesYieldingYearMonthDurationBp[rif#in->input1] .
input2[rif#type->xsd#dateTime] .
subtractDateTimesYieldingYearMonthDurationBp[rif#in->input2] .
subtractDateTimesYieldingYearMonthDurationBp[rif#javaClass->("org.daml.swrl.jena.builtins.date.SubtractDateTimesYieldingYearMonthDuration"^^\string)] .
swrlb#subtractDateTimesYieldingYearMonthDuration[rif#binding->subtractDateTimesYieldingYearMonthDurationBp] .
swrlb#subtractDateTimesYieldingYearMonthDuration[rif#arg->input2] .
input1[rif#type->xsd#dateTime] .
swrlb#subtractDateTimesYieldingYearMonthDuration[rif#arg->input1] .
swrlb#subtractDateTimesYieldingYearMonthDuration[rif#arg->output] .
subtractDayTimeDurationFromDateBp[rif#in->input2] .
input2[rif#type->xsd#duration] .
subtractDayTimeDurationFromDateBp[rif#javaClass->("org.daml.swrl.jena.builtins.date.SubtractDayTimeDurationFromDate"^^\string)] .
subtractDayTimeDurationFromDateBp[rif#in->input1] .
swrlb#subtractDayTimeDurationFromDate[rif#arg->input1] .
swrlb#subtractDayTimeDurationFromDate[rif#arg->input2] .
input1[rif#type->xsd#date] .
output[rif#type->xsd#date] .
swrlb#subtractDayTimeDurationFromDate[rif#binding->subtractDayTimeDurationFromDateBp] .
subtractDayTimeDurationFromDateBp[rif#out->output] .
swrlb#subtractDayTimeDurationFromDate : rif#ExternalPredicate .
swrlb#subtractDayTimeDurationFromDate[rif#arg->output] .
swrlb#subtractDayTimeDurationFromDateTime[rif#binding->subtractDayTimeDurationFromDateTimeBp] .
input2[rif#type->xsd#duration] .
swrlb#subtractDayTimeDurationFromDateTime[rif#arg->input1] .
swrlb#subtractDayTimeDurationFromDateTime[rif#arg->input2] .
subtractDayTimeDurationFromDateTimeBp[rif#javaClass->("org.daml.swrl.jena.builtins.date.SubtractDayTimeDurationFromDateTime"^^\string)] .
subtractDayTimeDurationFromDateTimeBp[rif#in->input2] .
swrlb#subtractDayTimeDurationFromDateTime[rif#arg->output] .
swrlb#subtractDayTimeDurationFromDateTime : rif#ExternalPredicate .
subtractDayTimeDurationFromDateTimeBp[rif#out->output] .
output[rif#type->xsd#dateTime] .
input1[rif#type->xsd#dateTime] .
subtractDayTimeDurationFromDateTimeBp[rif#in->input1] .
input2[rif#type->xsd#duration] .
subtractDayTimeDurationFromDTimeBp[rif#in->input2] .
subtractDayTimeDurationFromDTimeBp[rif#in->input1] .
input1[rif#type->xsd#time] .
swrlb#subtractDayTimeDurationFromTime[rif#arg->output] .
output[rif#type->xsd#time] .
subtractDayTimeDurationFromDTimeBp[rif#out->output] .
swrlb#subtractDayTimeDurationFromTime[rif#arg->input2] .
subtractDayTimeDurationFromDTimeBp[rif#javaClass->("org.daml.swrl.jena.builtins.date.SubtractDayTimeDurationFromTime"^^\string)] .
swrlb#subtractDayTimeDurationFromTime[rif#arg->input1] .
swrlb#subtractDayTimeDurationFromTime[rif#binding->subtractDayTimeDurationFromDTimeBp] .
swrlb#subtractDayTimeDurationFromTime : rif#ExternalPredicate .
input2[rif#type->xsd#duration] .
input1[rif#type->xsd#duration] .
output[rif#type->xsd#duration] .
swrlb#subtractDayTimeDurations[rif#arg->output] .
subtractDayTimeDurationsBp[rif#out->output] .
swrlb#subtractDayTimeDurations[rif#arg->input1] .
swrlb#subtractDayTimeDurations[rif#binding->subtractDayTimeDurationsBp] .
subtractDayTimeDurationsBp[rif#in->input1] .
swrlb#subtractDayTimeDurations[rif#arg->input2] .
subtractDayTimeDurationsBp[rif#in->input2] .
swrlb#subtractDayTimeDurations : rif#ExternalPredicate .
subtractDayTimeDurationsBp[rif#javaClass->("org.daml.swrl.jena.builtins.date.SubtractDayTimeDurations"^^\string)] .
subtractTimesBp[rif#in->input1] .
output[rif#type->xsd#duration] .
swrlb#subtractTimes[rif#binding->subtractTimesBp] .
subtractTimesBp[rif#out->output] .
input1[rif#type->xsd#time] .
input2[rif#type->xsd#time] .
swrlb#subtractTimes[rif#arg->output] .
subtractTimesBp[rif#in->input2] .
swrlb#subtractTimes[rif#arg->input1] .
subtractTimesBp[rif#javaClass->("org.daml.swrl.jena.builtins.date.SubtractTimes"^^\string)] .
swrlb#subtractTimes[rif#arg->input2] .
swrlb#subtractTimes : rif#ExternalPredicate .
input2[rif#type->xsd#duration] .
swrlb#subtractYearMonthDurationFromDate[rif#binding->subtractYearMonthDurationFromDateBp] .
swrlb#subtractYearMonthDurationFromDate[rif#arg->input1] .
subtractYearMonthDurationFromDateBp[rif#in->input1] .
swrlb#subtractYearMonthDurationFromDate[rif#arg->output] .
subtractYearMonthDurationFromDateBp[rif#in->input2] .
input1[rif#type->xsd#date] .
output[rif#type->xsd#date] .
subtractYearMonthDurationFromDateBp[rif#javaClass->("org.daml.swrl.jena.builtins.date.SubtractYearMonthDurationFromDate"^^\string)] .
subtractYearMonthDurationFromDateBp[rif#out->output] .
swrlb#subtractYearMonthDurationFromDate[rif#arg->input2] .
swrlb#subtractYearMonthDurationFromDate : rif#ExternalPredicate .
input2[rif#type->xsd#duration] .
subtractYearMonthDurationFromDateTimeBp[rif#in->input1] .
swrlb#subtractYearMonthDurationFromDateTime[rif#arg->output] .
swrlb#subtractYearMonthDurationFromDateTime : rif#ExternalPredicate .
swrlb#subtractYearMonthDurationFromDateTime[rif#binding->subtractYearMonthDurationFromDateTimeBp] .
subtractYearMonthDurationFromDateTimeBp[rif#in->input2] .
swrlb#subtractYearMonthDurationFromDateTime[rif#arg->input1] .
output[rif#type->xsd#dateTime] .
subtractYearMonthDurationFromDateTimeBp[rif#out->output] .
input1[rif#type->xsd#dateTime] .
subtractYearMonthDurationFromDateTimeBp[rif#javaClass->("org.daml.swrl.jena.builtins.date.SubtractYearMonthDurationFromDateTime"^^\string)] .
swrlb#subtractYearMonthDurationFromDateTime[rif#arg->input2] .
subtractYearMonthDurationsBp[rif#out->output] .
input2[rif#type->xsd#duration] .
input1[rif#type->xsd#duration] .
output[rif#type->xsd#duration] .
subtractYearMonthDurationsBp[rif#javaClass->("org.daml.swrl.jena.builtins.date.SubtractYearMonthDurations"^^\string)] .
subtractYearMonthDurationsBp[rif#in->input1] .
swrlb#subtractYearMonthDurations : rif#ExternalPredicate .
subtractYearMonthDurationsBp[rif#in->input2] .
swrlb#subtractYearMonthDurations[rif#arg->output] .
swrlb#subtractYearMonthDurations[rif#arg->input1] .
swrlb#subtractYearMonthDurations[rif#arg->input2] .
swrlb#subtractYearMonthDurations[rif#binding->subtractYearMonthDurationsBp] .
swrlb#time[rif#arg->timeZone] .
swrlb#time[rif#arg->seconds] .
timeBp[rif#javaClass->("org.daml.swrl.jena.builtins.date.Time"^^\string)] .
swrlb#time[rif#arg->output] .
swrlb#time[rif#arg->hours] .
timeZone[rif#type->xsd#string] .
swrlb#time : rif#ExternalPredicate .
timeBp[rif#in->seconds] .
timeBp[rif#in->timeZone] .
timeBp[rif#in->minutes] .
timeBp[rif#out->output] .
swrlb#time[rif#arg->minutes] .
swrlb#time[rif#binding->timeBp] .
output[rif#type->xsd#time] .
hours[rif#type->xsd#integer] .
timeBp[rif#in->hours] .
minutes[rif#type->xsd#integer] .
seconds[rif#type->xsd#integer] .
years[rif#type->xsd#integer] .
yearMonthDurationBp[rif#in->years] .
output[rif#type->xsd#duration] .
swrlb#yearMonthDuration[rif#arg->years] .
swrlb#yearMonthDuration[rif#binding->yearMonthDurationBp] .
swrlb#yearMonthDuration : rif#ExternalPredicate .
months[rif#type->xsd#integer] .
swrlb#yearMonthDuration[rif#arg->months] .
yearMonthDurationBp[rif#javaClass->("org.daml.swrl.jena.builtins.date.YearMonthDuration"^^\string)] .
swrlb#yearMonthDuration[rif#arg->output] .
yearMonthDurationBp[rif#out->output] .
yearMonthDurationBp[rif#in->months] .
equalBp[rif#in->input2] .
equalBp[rif#javaClass->("org.daml.swrl.jena.builtins.genericcomparison.Equal"^^\string)] .
equalBp[rif#in->input1] .
swrlb#equal[rif#arg->input2] .
swrlb#equal[rif#binding->equalBp] .
swrlb#equal[rif#arg->input1] .
swrlb#equal : rif#ExternalPredicate .
input1[rif#type->xsd#string] .
input2[rif#type->xsd#string] .
greaterThan[rif#in->input1] .
swrlb#greaterThan[rif#arg->input2] .
greaterThan[rif#in->input2] .
swrlb#greaterThan[rif#binding->greaterThan] .
swrlb#greaterThan[rif#arg->input1] .
input1[rif#type->xsd#string] .
swrlb#greaterThan : rif#ExternalPredicate .
input2[rif#type->xsd#string] .
greaterThan[rif#javaClass->("org.daml.swrl.jena.builtins.genericcomparison.GreaterThan"^^\string)] .
greaterThanOrEqualBp[rif#in->input1] .
greaterThanOrEqualBp[rif#in->input2] .
swrlb#greaterThanOrEqual[rif#arg->input1] .
swrlb#greaterThanOrEqual[rif#arg->input2] .
swrlb#greaterThanOrEqual : rif#ExternalPredicate .
swrlb#greaterThanOrEqual[rif#binding->greaterThanOrEqualBp] .
greaterThanOrEqualBp[rif#javaClass->("org.daml.swrl.jena.builtins.genericcomparison.GreaterThanOrEqual"^^\string)] .
input1[rif#type->xsd#string] .
input2[rif#type->xsd#string] .
swrlb#lessThan[rif#binding->lessThanBp] .
lessThanBp[rif#javaClass->("org.daml.swrl.jena.builtins.genericcomparison.LessThan"^^\string)] .
swrlb#lessThan : rif#ExternalPredicate .
swrlb#lessThan[rif#arg->input2] .
lessThanBp[rif#in->input2] .
input1[rif#type->xsd#string] .
swrlb#lessThan[rif#arg->input1] .
input2[rif#type->xsd#string] .
lessThanBp[rif#in->input1] .
lessThanOrEqualBp[rif#javaClass->("org.daml.swrl.jena.builtins.genericcomparison.LessThanOrEqual"^^\string)] .
swrlb#lessThanOrEqual[rif#arg->input1] .
swrlb#lessThanOrEqual[rif#binding->lessThanOrEqualBp] .
input1[rif#type->xsd#string] .
swrlb#lessThanOrEqual : rif#ExternalPredicate .
lessThanOrEqualBp[rif#in->input2] .
lessThanOrEqualBp[rif#in->input1] .
input2[rif#type->xsd#string] .
swrlb#lessThanOrEqual[rif#arg->input2] .
equalBp[rif#in->input2] .
equalBp[rif#javaClass->("org.daml.swrl.jena.builtins.genericcomparison.NotEqual"^^\string)] .
equalBp[rif#in->input1] .
swrlb#notEqual[rif#arg->input1] .
swrlb#notEqual[rif#binding->equalBp] .
swrlb#notEqual[rif#arg->input2] .
input1[rif#type->xsd#string] .
input2[rif#type->xsd#string] .
swrlb#notEqual : rif#ExternalPredicate .
protocol[rif#type->xsd#string] .
swrlb#anyURI[rif#arg->fragment] .
anyURIBp1[rif#in->part2] .
swrlb#anyURI[rif#arg->port] .
anyURIBp2[rif#out->port] .
swrlb#anyURI[rif#arg->part1] .
swrlb#anyURI[rif#arg->uri] .
swrlb#anyURI[rif#arg->protocol] .
part1[rif#type->xsd#string] .
anyURIBp2[rif#javaClass->("org.daml.swrl.jena.builtins.uri.AnyURI"^^\string)] .
anyURIBp2[rif#out->protocol] .
swrlb#anyURI : rif#ExternalPredicate .
part2[rif#type->xsd#string] .
anyURIBp2[rif#out->part1] .
swrlb#anyURI[rif#binding->anyURIBp1] .
anyURIBp1[rif#in->fragment] .
port[rif#type->xsd#string] .
anyURIBp2[rif#out->fragment] .
swrlb#anyURI[rif#arg->part2] .
anyURIBp2[rif#out->domain] .
fragment[rif#type->xsd#string] .
anyURIBp1[rif#in->port] .
domain[rif#type->xsd#string] .
anyURIBp1[rif#in->domain] .
uri[rif#type->xsd#string] .
anyURIBp2[rif#out->part2] .
anyURIBp1[rif#out->uri] .
swrlb#anyURI[rif#arg->domain] .
anyURIBp1[rif#in->protocol] .
swrlb#anyURI[rif#binding->anyURIBp2] .
anyURIBp1[rif#in->part1] .
anyURIBp2[rif#in->uri] .
anyURIBp1[rif#javaClass->("org.daml.swrl.jena.builtins.uri.AnyURI"^^\string)] .
swrlb#resolveURI[rif#arg->input2] .
output[rif#type->xsd#string] .
swrlb#resolveURI[rif#arg->input1] .
resolveURIBp[rif#out->output] .
resolveURIBp[rif#in->input1] .
swrlb#resolveURI[rif#binding->resolveURIBp] .
resolveURIBp[rif#javaClass->("org.daml.swrl.jena.builtins.uri.ResolveURI"^^\string)] .
resolveURIBp[rif#in->input2] .
input1[rif#type->xsd#string] .
swrlb#resolveURI : rif#ExternalPredicate .
input2[rif#type->xsd#string] .
swrlb#resolveURI[rif#arg->output] .
containsBp[rif#in->input2] .
containsBp[rif#in->input1] .
swrlb#contains[rif#arg->input2] .
input1[rif#type->xsd#string] .
swrlb#contains[rif#arg->input1] .
swrlb#contains : rif#ExternalPredicate .
swrlb#contains[rif#binding->containsBp] .
input2[rif#type->xsd#string] .
containsBp[rif#javaClass->("org.daml.swrl.jena.builtins.string.Contains"^^\string)] .
swrlb#containsIgnoreCase : rif#ExternalPredicate .
containsIgnoreCaseBp[rif#in->input2] .
containsIgnoreCaseBp[rif#javaClass->("org.daml.swrl.jena.builtins.string.ContainsIgnoreCase"^^\string)] .
containsIgnoreCaseBp[rif#in->input1] .
swrlb#containsIgnoreCase[rif#binding->containsIgnoreCaseBp] .
swrlb#containsIgnoreCase[rif#arg->input1] .
swrlb#containsIgnoreCase[rif#arg->input2] .
input1[rif#type->xsd#string] .
input2[rif#type->xsd#string] .
endsWithBp[rif#in->input1] .
swrlb#endsWith : rif#ExternalPredicate .
endsWithBp[rif#in->input2] .
endsWithBp[rif#javaClass->("org.daml.swrl.jena.builtins.string.EndsWith"^^\string)] .
swrlb#endsWith[rif#binding->endsWithBp] .
input1[rif#type->xsd#string] .
swrlb#endsWith[rif#arg->input1] .
input2[rif#type->xsd#string] .
swrlb#endsWith[rif#arg->input2] .
output[rif#type->xsd#string] .
swrlb#lowerCase : rif#ExternalPredicate .
swrlb#lowerCase[rif#arg->input] .
swrlb#lowerCase[rif#arg->output] .
input[rif#type->xsd#string] .
lowerCaseBp[rif#out->output] .
lowerCaseBp[rif#in->input] .
swrlb#lowerCase[rif#binding->lowerCaseBp] .
lowerCaseBp[rif#javaClass->("org.daml.swrl.jena.builtins.string.LowerCase"^^\string)] .
matchesBp[rif#in->input2] .
swrlb#matches : rif#ExternalPredicate .
matchesBp[rif#in->input1] .
swrlb#matches[rif#binding->matchesBp] .
matchesBp[rif#javaClass->("org.daml.swrl.jena.builtins.string.Matches"^^\string)] .
input1[rif#type->xsd#string] .
input2[rif#type->xsd#string] .
swrlb#matches[rif#arg->input2] .
swrlb#matches[rif#arg->input1] .
normalizeSpaceBp[rif#in->input] .
output[rif#type->xsd#string] .
swrlb#normalizeSpace : rif#ExternalPredicate .
swrlb#normalizeSpace[rif#arg->input] .
swrlb#normalizeSpace[rif#arg->output] .
swrlb#normalizeSpace[rif#binding->normalizeSpaceBp] .
input[rif#type->xsd#string] .
normalizeSpaceBp[rif#out->output] .
normalizeSpaceBp[rif#javaClass->("org.daml.swrl.jena.builtins.string.NormalizeSpace"^^\string)] .
swrlb#replace[rif#arg->input] .
swrlb#replace : rif#ExternalPredicate .
swrlb#replace[rif#binding->replaceBp] .
replaceBp[rif#in->regex] .
swrlb#replace[rif#arg->regex] .
swrlb#replace[rif#arg->output] .
replaceBp[rif#in->input] .
replacement[rif#type->xsd#string] .
regex[rif#type->xsd#string] .
swrlb#replace[rif#arg->replacement] .
output[rif#type->xsd#string] .
replaceBp[rif#javaClass->("org.daml.swrl.jena.builtins.string.Replace"^^\string)] .
replaceBp[rif#out->output] .
input[rif#type->xsd#string] .
replaceBp[rif#in->replacement] .
swrlb#startsWith[rif#arg->input2] .
startsWithBp[rif#javaClass->("org.daml.swrl.jena.builtins.string.StartsWith"^^\string)] .
startsWithBp[rif#in->input1] .
swrlb#startsWith[rif#arg->input1] .
startsWithBp[rif#in->input2] .
input1[rif#type->xsd#string] .
swrlb#startsWith : rif#ExternalPredicate .
input2[rif#type->xsd#string] .
swrlb#startsWith[rif#binding->startsWithBp] .
stringConcatBp[rif#in->input2] .
output[rif#type->xsd#string] .
stringConcatBp[rif#out->output] .
stringConcatBp[rif#javaClass->("org.daml.swrl.jena.builtins.string.StringConcat"^^\string)] .
swrlb#stringConcat[rif#arg->input1] .
swrlb#stringConcat[rif#arg->output] .
stringConcatBp[rif#in->input1] .
swrlb#stringConcat : rif#ExternalPredicate .
swrlb#stringConcat[rif#arg->input2] .
input1[rif#type->xsd#string] .
input2[rif#type->xsd#string] .
swrlb#stringConcat[rif#binding->stringConcatBp] .
swrlb#stringEqualIgnoreCase[rif#arg->input2] .
stringEqualIgnoreCaseBp[rif#javaClass->("org.daml.swrl.jena.builtins.string.StringEqualIgnoreCase"^^\string)] .
swrlb#stringEqualIgnoreCase[rif#arg->input1] .
swrlb#stringEqualIgnoreCase : rif#ExternalPredicate .
swrlb#stringEqualIgnoreCase[rif#binding->stringEqualIgnoreCaseBp] .
input1[rif#type->xsd#string] .
stringEqualIgnoreCaseBp[rif#in->input1] .
input2[rif#type->xsd#string] .
stringEqualIgnoreCaseBp[rif#in->input2] .
swrlb#stringLength[rif#arg->input] .
swrlb#stringLength : rif#ExternalPredicate .
stringLengthBp[rif#out->output] .
swrlb#stringLength[rif#arg->output] .
input[rif#type->xsd#string] .
output[rif#type->xsd#integer] .
stringLengthBp[rif#in->input] .
stringLengthBp[rif#javaClass->("org.daml.swrl.jena.builtins.string.StringLength"^^\string)] .
swrlb#stringLength[rif#binding->stringLengthBp] .
substringBp[rif#javaClass->("org.daml.swrl.jena.builtins.string.Substring"^^\string)] .
swrlb#substring[rif#binding->substringBp] .
substringBp[rif#in->input] .
substringBp[rif#in->length] .
substringBp[rif#in->start] .
swrlb#substring : rif#ExternalPredicate .
start[rif#type->xsd#integer] .
output[rif#type->xsd#string] .
swrlb#substring[rif#arg->output] .
swrlb#substring[rif#arg->length] .
swrlb#substring[rif#arg->start] .
swrlb#substring[rif#arg->input] .
length[rif#type->xsd#integer] .
input[rif#type->xsd#string] .
substringBp[rif#out->output] .
start[rif#type->xsd#integer] .
output[rif#type->xsd#string] .
substringAfterBp[rif#in->input] .
swrlb#substringAfter : rif#ExternalPredicate .
substringAfterBp[rif#in->start] .
swrlb#substringAfter[rif#binding->substringAfterBp] .
input[rif#type->xsd#string] .
swrlb#substringAfter[rif#arg->input] .
substringAfterBp[rif#javaClass->("org.daml.swrl.jena.builtins.string.SubstringAfter"^^\string)] .
substringAfterBp[rif#out->output] .
swrlb#substringAfter[rif#arg->output] .
swrlb#substringAfter[rif#arg->start] .
swrlb#substringBefore[rif#arg->end] .
output[rif#type->xsd#string] .
substringBeforeBp[rif#in->input] .
substringBeforeBp[rif#javaClass->("org.daml.swrl.jena.builtins.string.SubstringBefore"^^\string)] .
end[rif#type->xsd#integer] .
substringBeforeBp[rif#in->end] .
swrlb#substringBefore[rif#binding->substringBeforeBp] .
swrlb#substringBefore : rif#ExternalPredicate .
input[rif#type->xsd#string] .
swrlb#substringBefore[rif#arg->input] .
swrlb#substringBefore[rif#arg->output] .
substringBeforeBp[rif#out->output] .
translateBp[rif#javaClass->("org.daml.swrl.jena.builtins.string.Translate"^^\string)] .
translateBp[rif#in->input] .
replacement[rif#type->xsd#string] .
swrlb#translate[rif#binding->translateBp] .
translateBp[rif#out->output] .
output[rif#type->xsd#string] .
swrlb#translate[rif#arg->replace] .
replace[rif#type->xsd#string] .
swrlb#translate[rif#arg->replacement] .
input[rif#type->xsd#string] .
swrlb#translate : rif#ExternalPredicate .
translateBp[rif#in->replacement] .
swrlb#translate[rif#arg->input] .
translateBp[rif#in->replace] .
swrlb#translate[rif#arg->output] .
upperCaseBp[rif#out->output] .
output[rif#type->xsd#string] .
upperCaseBp[rif#javaClass->("org.daml.swrl.jena.builtins.string.UpperCase"^^\string)] .
swrlb#upperCase : rif#ExternalPredicate .
swrlb#upperCase[rif#arg->input] .
swrlb#upperCase[rif#binding->upperCaseBp] .
input[rif#type->xsd#string] .
upperCaseBp[rif#in->input] .
swrlb#upperCase[rif#arg->output] .
sparqlQueryBP[rif#out->outputs] .
sparqlQueryBP[rif#in->template] .
rif#sparqlQuery : rif#ExternalPredicate .
rif#sparqlQuery[rif#arg->inputs] .
rif#sparqlQuery[rif#arg->uri] .
sparqlQueryBP[rif#in->uri] .
outputs[rif#type->rif#list] .
sparqlQueryBP[rif#in->inputs] .
rif#sparqlQuery[rif#binding->sparqlQueryBP] .
template[rif#type->xsd#string] .
inputs[rif#type->rif#list] .
rif#sparqlQuery[rif#arg->template] .
rif#sparqlQuery[rif#arg->outputs] .
uri[rif#type->xsd#anyURI] .
sparqlQueryBP[rif#javaClass->("org.semwebcentral.rif.externalpredicates.predicates.SPARQLQueryPredicate"^^\string)] .
sparqlQueryBP[rif#in->template] .
rif#sparqlConstruct[rif#arg->template] .
rif#sparqlConstruct : rif#ExternalPredicate .
sparqlQueryBP[rif#out->filename] .
sparqlQueryBP[rif#in->uri] .
rif#sparqlConstruct[rif#arg->filename] .
rif#sparqlConstruct[rif#arg->inputs] .
sparqlQueryBP[rif#in->inputs] .
filename[rif#type->xsd#string] .
rif#sparqlConstruct[rif#arg->uri] .
template[rif#type->xsd#string] .
inputs[rif#type->rif#list] .
sparqlQueryBP[rif#javaClass->("org.semwebcentral.rif.externalpredicates.predicates.SPARQLConstructPredicate"^^\string)] .
rif#sparqlConstruct[rif#binding->sparqlQueryBP] .
uri[rif#type->xsd#anyURI] .
rif#restWebService[rif#binding->sparqlQueryBP] .
sparqlQueryBP[rif#out->outputs] .
rif#restWebService[rif#arg->outputs] .
rif#restWebService[rif#arg->uri] .
rif#restWebService[rif#arg->inputs] .
rif#restWebService : rif#ExternalPredicate .
sparqlQueryBP[rif#in->uri] .
outputs[rif#type->rif#list] .
sparqlQueryBP[rif#in->inputs] .
sparqlQueryBP[rif#javaClass->("org.semwebcentral.rif.externalpredicates.predicates.RESTWebServicePredicate"^^\string)] .
inputs[rif#type->rif#list] .
rif#restWebService[rif#arg->xpath] .
xpath[rif#type->xsd#string] .
sparqlQueryBP[rif#in->xpath] .
uri[rif#type->xsd#anyURI] .
to[rif#type->xsd#string] .
rif#sendEmail[rif#arg->from] .
sendEmailBP[rif#in->from] .
sendEmailBP[rif#in->smtpServer] .
sendEmailBP[rif#in->text] .
from[rif#type->xsd#string] .
text[rif#type->xsd#string] .
rif#sendEmail[rif#arg->text] .
rif#sendEmail[rif#arg->to] .
sendEmailBP[rif#in->to] .
rif#sendEmail : rif#ExternalPredicate .
rif#sendEmail[rif#arg->subject] .
rif#sendEmail[rif#arg->smtpServer] .
subject[rif#type->xsd#string] .
rif#sendEmail[rif#binding->sendEmailBP] .
smtpServer[rif#type->xsd#string] .
sendEmailBP[rif#javaClass->("org.semwebcentral.rif.externalpredicates.predicates.EmailPredicate"^^\string)] .
sendEmailBP[rif#in->subject] .
writeBP[rif#in->input] .
rif#write[rif#arg->input] .
writeBP[rif#javaClass->("org.semwebcentral.rif.externalpredicates.predicates.WritePredicate"^^\string)] .
rif#write : rif#ExternalPredicate .
input[rif#type->xsd#anyType] .
rif#write[rif#binding->writeBP] .
rif#writeLn[rif#binding->writeLnBP] .
writeLnBP[rif#javaClass->("org.semwebcentral.rif.externalpredicates.predicates.WriteLinePredicate"^^\string)] .
rif#writeLn[rif#arg->input] .
writeLnBP[rif#in->input] .
input[rif#type->xsd#anyType] .
rif#writeLn : rif#ExternalPredicate .
addbp[rif#in->url] .
addbp[rif#javaClass->("org.semwebcentral.rif.externalpredicates.predicates.SilkQueryPredicate"^^\string)] .
rif#querySilkInstance[rif#arg->url] .
rif#querySilkInstance[rif#arg->inputs] .
outputsBindingOrder[rif#type->rif#list] .
url[rif#type->xsd#string] .
outputs[rif#type->rif#list] .
rif#querySilkInstance : rif#ExternalPredicate .
rif#querySilkInstance[rif#binding->addbp] .
addbp[rif#in->template] .
template[rif#type->xsd#string] .
inputs[rif#type->rif#list] .
addbp[rif#out->outputs] .
addbp[rif#in->inputs] .
rif#querySilkInstance[rif#arg->outputsBindingOrder] .
rif#querySilkInstance[rif#arg->outputs] .
addbp[rif#in->outputsBindingOrder] .
rif#querySilkInstance[rif#arg->template] .
rif#fatal[rif#binding->fatalBP] .
rif#fatal[rif#arg->loggerName] .
loggerName[rif#type->xsd#string] .
fatalBP[rif#in->message] .
fatalBP[rif#in->loggerName] .
rif#fatal[rif#arg->message] .
message[rif#type->xsd#string] .
fatalBP[rif#javaClass->("org.semwebcentral.rif.externalpredicates.predicates.log4j.FatalPredicate"^^\string)] .
rif#fatal : rif#ExternalPredicate .
loggerName[rif#type->xsd#string] .
errorBP[rif#in->loggerName] .
rif#error[rif#arg->message] .
rif#error[rif#arg->loggerName] .
errorBP[rif#in->message] .
rif#error : rif#ExternalPredicate .
errorBP[rif#javaClass->("org.semwebcentral.rif.externalpredicates.predicates.log4j.ErrorPredicate"^^\string)] .
message[rif#type->xsd#string] .
rif#error[rif#binding->errorBP] .
rif#warn[rif#arg->message] .
loggerName[rif#type->xsd#string] .
rif#warn[rif#binding->warnBP] .
warnBP[rif#javaClass->("org.semwebcentral.rif.externalpredicates.predicates.log4j.WarnPredicate"^^\string)] .
rif#warn[rif#arg->loggerName] .
warnBP[rif#in->loggerName] .
message[rif#type->xsd#string] .
warnBP[rif#in->message] .
rif#warn : rif#ExternalPredicate .
loggerName[rif#type->xsd#string] .
rif#info[rif#binding->infoBP] .
infoBP[rif#in->loggerName] .
rif#info[rif#arg->loggerName] .
infoBP[rif#javaClass->("org.semwebcentral.rif.externalpredicates.predicates.log4j.InfoPredicate"^^\string)] .
message[rif#type->xsd#string] .
rif#info : rif#ExternalPredicate .
infoBP[rif#in->message] .
rif#info[rif#arg->message] .
debugBP[rif#in->loggerName] .
debugBP[rif#javaClass->("org.semwebcentral.rif.externalpredicates.predicates.log4j.DebugPredicate"^^\string)] .
loggerName[rif#type->xsd#string] .
rif#debug[rif#arg->message] .
rif#debug[rif#arg->loggerName] .
debugBP[rif#in->message] .
rif#debug[rif#binding->debugBP] .
message[rif#type->xsd#string] .
rif#debug : rif#ExternalPredicate .
loggerName[rif#type->xsd#string] .
traceBP[rif#in->loggerName] .
traceBP[rif#in->message] .
rif#trace[rif#arg->message] .
traceBP[rif#javaClass->("org.semwebcentral.rif.externalpredicates.predicates.log4j.TracePredicate"^^\string)] .
rif#trace[rif#arg->loggerName] .
message[rif#type->xsd#string] .
rif#trace : rif#ExternalPredicate .
rif#trace[rif#binding->traceBP] .
rif#cycEvaluate : rif#ExternalPredicate .
cycEvaluateBP[rif#out->output] .
arg2[rif#type->xsd#string] .
output[rif#type->xsd#string] .
rif#cycEvaluate[rif#arg->arg1] .
arg1[rif#type->xsd#string] .
rif#cycEvaluate[rif#arg->arg2] .
predicate[rif#type->xsd#string] .
rif#cycEvaluate[rif#arg->output] .
cycEvaluateBP[rif#javaClass->("org.semwebcentral.rif.externalpredicates.predicates.cyc.CycEvaluatePredicate"^^\string)] .
cycEvaluateBP[rif#in->predicate] .
rif#cycEvaluate[rif#binding->cycEvaluateBP] .
cycEvaluateBP[rif#in->arg2] .
rif#cycEvaluate[rif#arg->predicate] .
cycEvaluateBP[rif#in->arg1] .
cycEvaluateBP[rif#javaClass->("org.semwebcentral.rif.externalpredicates.predicates.cyc.CycQueryPredicate"^^\string)] .
rif#cycQuery : rif#ExternalPredicate .
rif#cycQuery[rif#arg->query] .
cycEvaluateBP[rif#in->query] .
OutputBindings[rif#type->xsd#string] .
rif#cycQuery[rif#arg->OutputBindings] .
cycEvaluateBP[rif#out->OutputBindings] .
rif#cycQuery[rif#binding->cycEvaluateBP] .
query[rif#type->xsd#string] .
currentTime[rif#type->xsd#dateTime] .
rif#currentTime[rif#binding->cycEvaluateBP] .
rif#currentTime[rif#arg->currentTime] .
cycEvaluateBP[rif#javaClass->("org.semwebcentral.rif.externalpredicates.predicates.CurrentTimePredicate"^^\string)] .
cycEvaluateBP[rif#out->currentTime] .
rif#currentTime : rif#ExternalPredicate .
rif#returnNResults[rif#arg->OutputBindings] .
rif#returnNResults[rif#arg->n] .
rif#returnNResults[rif#binding->returnNResultsBP] .
OutputBindings[rif#type->xsd#string] .
returnNResultsBP[rif#javaClass->("org.semwebcentral.rif.externalpredicates.predicates.ReturnNResultsPredicate"^^\string)] .
returnNResultsBP[rif#out->OutputBindings] .
returnNResultsBP[rif#in->n] .
rif#returnNResults : rif#ExternalPredicate .
n[rif#type->xsd#int] .
rif#identity[rif#binding->identityBP] .
rif#identity[rif#arg->output] .
identityBP[rif#in->input] .
input[rif#type->xsd#anyType] .
output[rif#type->xsd#anyType] .
identityBP[rif#out->output] .
rif#identity[rif#arg->input] .
identityBP[rif#javaClass->("org.semwebcentral.rif.externalpredicates.predicates.IdentityPredicate"^^\string)] .
rif#identity : rif#ExternalPredicate .
?- set_prolog_flag(exception_pre_action,print_incomplete_tables)@\prolog.
?- setsemantics{equality=basic}.
?- setsemantics{tabling=reactive}.
:- compiler_options{production=on}.
:- symbol_context{rif#instRule(?,?,?)@?}.

