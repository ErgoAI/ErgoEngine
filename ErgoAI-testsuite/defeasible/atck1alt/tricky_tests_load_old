test1: [(t1 / \neg A1, notBeaterFor(binaryExclusion(${\neg A1@main},${B1@main})))]
test2: [(tt1 / B1, notBeaterFor(binaryExclusion(${B1@main},${\neg A1@main})))]
test3: success
test5: [(c2 / C2, notBeaterFor(binaryExclusion(${C2@main},${A2@main}))), (c2n / C2, notBeaterFor(binaryExclusion(${C2@main},${A2@main})))]
test6: success
test7: success
test8: [(r4 / A4, notBeaterFor(binaryExclusion(${A4@main},${\neg A4@main})))]
test9: [(s4 / A4, candidate), (s4 / A4, beats(${A4@main})), (s4 / A4, competes(${A4@main})), (s4 / A4, competes(${B4@main})), (s4 / A4, dominates(${A4@main})), (s4 / A4, rebuts(${A4@main})), (s4 / A4, rebuts(${B4@main})), (s4 / A4, refutes(r4,${A4@main}))]
test1: [(t1 / \neg A1, notBeaterFor(binaryExclusion(${\neg A1@main},${B1@main})))]
test2: [(tt1 / B1, notBeaterFor(binaryExclusion(${B1@main},${\neg A1@main})))]
test3: success
test5: [(c2 / C2, notBeaterFor(binaryExclusion(${C2@main},${A2@main}))), (c2n / C2, notBeaterFor(binaryExclusion(${C2@main},${A2@main})))]
test6: success
test7: success
test8: [(r4 / A4, notBeaterFor(binaryExclusion(${A4@main},${\neg A4@main})))]
test9: [(s4 / A4, candidate), (s4 / A4, beats(${A4@main})), (s4 / A4, competes(${A4@main})), (s4 / A4, competes(${B4@main})), (s4 / A4, dominates(${A4@main})), (s4 / A4, rebuts(${A4@main})), (s4 / A4, rebuts(${B4@main})), (s4 / A4, refutes(r4,${A4@main}))]
