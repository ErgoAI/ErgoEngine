test1 = explanation(false('it is false that exist [?B, ?A] such that ''bd(?B,?A)''','it is a top query'),[explanation(true('bd(b,b)','no text given for the relevant rule'),[explanation(true('arg b is a thingie of arg 3','this is a base fact or a builtin'),[])])])
test2 = explanation(true('q(3)','test rule q()'),[explanation(true('b \in [a, b]','this is a base fact or a builtin'),[]), explanation(true('3 is the number of unique ?A''s such that (''(arg ?B is a thingie of arg ?A) and ((?C eqs ?C) and (arg b is a thingie of arg ?A))'')','axiom|computed via an aggregate function'),[explanation(true('(arg b is a thingie of arg 2) and ((?A eqs ?A) and (arg b is a thingie of arg 2))','derived via a builtin axiom (negation, defeasibility, composite goal, etc.)'),[explanation(true('arg b is a thingie of arg 2','this is a base fact or a builtin'),[])]), explanation(true('(arg b is a thingie of arg 3) and ((?A eqs ?A) and (arg b is a thingie of arg 3))','derived via a builtin axiom (negation, defeasibility, composite goal, etc.)'),[explanation(true('arg b is a thingie of arg 3','this is a base fact or a builtin'),[])]), explanation(true('(arg b is a thingie of arg 5) and ((?A eqs ?A) and (arg b is a thingie of arg 5))','derived via a builtin axiom (negation, defeasibility, composite goal, etc.)'),[explanation(true('arg b is a thingie of arg 5','this is a base fact or a builtin'),[])])])])
test3 = explanation(true('q(3)','test rule q()'),[explanation(true('b \in [a, b]','this is a base fact or a builtin'),[]), explanation(true('3 is the number of unique ?A''s such that (''(arg ?B is a thingie of arg ?A) and ((?C eqs ?C) and (arg b is a thingie of arg ?A))'')','axiom|computed via an aggregate function'),[explanation(true('(arg b is a thingie of arg 2) and ((?A eqs ?A) and (arg b is a thingie of arg 2))','derived via a builtin axiom (negation, defeasibility, composite goal, etc.)'),[explanation(true('arg b is a thingie of arg 2','this is a base fact or a builtin'),[])]), explanation(true('(arg b is a thingie of arg 3) and ((?A eqs ?A) and (arg b is a thingie of arg 3))','derived via a builtin axiom (negation, defeasibility, composite goal, etc.)'),[explanation(true('arg b is a thingie of arg 3','this is a base fact or a builtin'),[])]), explanation(true('(arg b is a thingie of arg 5) and ((?A eqs ?A) and (arg b is a thingie of arg 5))','derived via a builtin axiom (negation, defeasibility, composite goal, etc.)'),[explanation(true('arg b is a thingie of arg 5','this is a base fact or a builtin'),[])])])])
test4 = explanation(false(r,'no text given for the relevant rule'),[explanation(false('either (''arg ?A is a thingie of arg ?B'') and (''?A eqs ?B'') or not (''arg ?A is a thingie of arg ?B''), but (''arg ?B is a thingie of arg ?A'')','derived via a builtin axiom (negation, defeasibility, composite goal, etc.)'),[explanation(undefined('it is false that ''arg ?A is a thingie of arg ?B''','this is a base fact or a builtin'),[])]), explanation(false('either (''arg ?A is a thingie of arg ?B'') and (''?A eqs ?B'') or not (''arg ?A is a thingie of arg ?B''), but (''arg ?B is a thingie of arg ?A'')','derived via a builtin axiom (negation, defeasibility, composite goal, etc.)'),[explanation(undefined('it is false that ''arg ?A is a thingie of arg ?B''','this is a base fact or a builtin'),[])]), explanation(false('either (''arg ?A is a thingie of arg ?B'') and (''?A eqs ?B'') or not (''arg ?A is a thingie of arg ?B''), but (''arg ?B is a thingie of arg ?A'')','derived via a builtin axiom (negation, defeasibility, composite goal, etc.)'),[explanation(undefined('it is false that ''arg ?A is a thingie of arg ?B''','this is a base fact or a builtin'),[])])])
test5 = explanation(true('qq(3)','no text given for the relevant rule'),[explanation(true('b \in [a, b]','this is a base fact or a builtin'),[]), explanation(true('3 is the number of ?A''s, parameterized by [?B], such that (''(arg ?B is a thingie of arg ?A) and ((?C eqs ?C) and (arg b is a thingie of arg ?A))'')','axiom|computed via an aggregate function'),[explanation(true('(arg b is a thingie of arg 2) and ((?A eqs ?A) and (arg b is a thingie of arg 2))','derived via a builtin axiom (negation, defeasibility, composite goal, etc.)'),[explanation(true('arg b is a thingie of arg 2','this is a base fact or a builtin'),[])]), explanation(true('(arg b is a thingie of arg 3) and ((?A eqs ?A) and (arg b is a thingie of arg 3))','derived via a builtin axiom (negation, defeasibility, composite goal, etc.)'),[explanation(true('arg b is a thingie of arg 3','this is a base fact or a builtin'),[])]), explanation(true('(arg b is a thingie of arg 5) and ((?A eqs ?A) and (arg b is a thingie of arg 5))','derived via a builtin axiom (negation, defeasibility, composite goal, etc.)'),[explanation(true('arg b is a thingie of arg 5','this is a base fact or a builtin'),[])])])])
test6 = explanation(true('qqq(3)','no text given for the relevant rule'),[explanation(true('b \in [a, b]','this is a base fact or a builtin'),[]), explanation(true('3 is the number of ?A''s such that (''(arg ?B is a thingie of arg ?A) and ((?C eqs ?C) and (arg b is a thingie of arg ?A))'')','axiom|computed via an aggregate function'),[explanation(true('(arg b is a thingie of arg 2) and ((?A eqs ?A) and (arg b is a thingie of arg 2))','derived via a builtin axiom (negation, defeasibility, composite goal, etc.)'),[explanation(true('arg b is a thingie of arg 2','this is a base fact or a builtin'),[])]), explanation(true('(arg b is a thingie of arg 3) and ((?A eqs ?A) and (arg b is a thingie of arg 3))','derived via a builtin axiom (negation, defeasibility, composite goal, etc.)'),[explanation(true('arg b is a thingie of arg 3','this is a base fact or a builtin'),[])]), explanation(true('(arg b is a thingie of arg 5) and ((?A eqs ?A) and (arg b is a thingie of arg 5))','derived via a builtin axiom (negation, defeasibility, composite goal, etc.)'),[explanation(true('arg b is a thingie of arg 5','this is a base fact or a builtin'),[])])])])
test7 = explanation(true('rr(10)','no text given for the relevant rule'),[explanation(true('b \in [a, b]','this is a base fact or a builtin'),[]), explanation(true('10 is the sum of ?A''s such that (''(arg ?B is a thingie of arg ?A) and ((?C eqs ?C) and (arg b is a thingie of arg ?A))'')','axiom|computed via an aggregate function'),[explanation(true('(arg b is a thingie of arg 2) and ((?A eqs ?A) and (arg b is a thingie of arg 2))','derived via a builtin axiom (negation, defeasibility, composite goal, etc.)'),[explanation(true('arg b is a thingie of arg 2','this is a base fact or a builtin'),[])]), explanation(true('(arg b is a thingie of arg 3) and ((?A eqs ?A) and (arg b is a thingie of arg 3))','derived via a builtin axiom (negation, defeasibility, composite goal, etc.)'),[explanation(true('arg b is a thingie of arg 3','this is a base fact or a builtin'),[])]), explanation(true('(arg b is a thingie of arg 5) and ((?A eqs ?A) and (arg b is a thingie of arg 5))','derived via a builtin axiom (negation, defeasibility, composite goal, etc.)'),[explanation(true('arg b is a thingie of arg 5','this is a base fact or a builtin'),[])])])])
test8 = explanation(false(ppp,'no text given for the relevant rule'),[explanation(true('arg a is a thingie of arg 1','this is a base fact or a builtin'),[]), explanation(true('arg a is a thingie of arg 1','this is a base fact or a builtin'),[]), explanation(true('arg a is a thingie of arg 1','this is a base fact or a builtin'),[])])
test9 = explanation(undefined(pp2,'no text given for the relevant rule'),[explanation(undefined('it is false that ''arg ?A is a thingie of arg ?B''','no text given for the relevant rule'),[explanation(true('arg ?A is a thingie of arg ?B','this is a base fact or a builtin'),[])])])
test10 = explanation(true('mq(1,2)','no text given for the relevant rule'),[explanation(true('mp(1,a)','this is a base fact or a builtin'),[]), explanation(true('mp(2,a)','this is a base fact or a builtin'),[]), explanation(true('1 != 2','this is a base fact or a builtin'),[])])
test11 = explanation(true('it is false that ''mq(5,5)''','it is a top query'),[explanation(false('mq(5,5)','no text given for the relevant rule'),[explanation(false('mp(5,?A)','this is a base fact or a builtin'),[]), explanation(false('mp(5,?A)','this is a base fact or a builtin'),[]), explanation(false('mp(5,?A)','this is a base fact or a builtin'),[])])])
test12 = explanation(false('it is false that ''mq(1,2)''','it is a top query'),[explanation(true('mq(1,2)','no text given for the relevant rule'),[explanation(true('mp(1,a)','this is a base fact or a builtin'),[]), explanation(true('mp(2,a)','this is a base fact or a builtin'),[]), explanation(true('1 != 2','this is a base fact or a builtin'),[])])])
