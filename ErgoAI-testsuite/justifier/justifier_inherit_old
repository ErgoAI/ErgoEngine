test1 = explanation(true(${bonus(Bob,10)@main},it is a top query,bonus(Bob,10),ruleinfo(ruleid(8,justifier_inherit.ergo,main),no text given for the relevant rule)),[explanation(true(${Bob[bonus->10]@main},null,Bob[bonus->10],ruleinfo(ruleid(null,null,main),axiom|inherited from superclass)),[explanation(true(${Bob:employee@main},it is a base fact,Bob:employee,ruleinfo(ruleid(null,null,null),this is a base fact or a builtin)),[]), explanation(true(${employee[|bonus->10|]@main},null,employee[|bonus->10|],ruleinfo(ruleid(4,justifier_inherit.ergo,main),no text given for the relevant rule)),[explanation(true(${status(1)@main},it is a base fact,status(1),ruleinfo(ruleid(null,null,null),this is a base fact or a builtin)),[])])])])
test2 = explanation(true(${vac(Bob,20)@main},it is a top query,vac(Bob,20),ruleinfo(ruleid(6,justifier_inherit.ergo,main),no text given for the relevant rule)),[explanation(true(${Bob[vacationdays->20]@main},null,Bob[vacationdays->20],ruleinfo(ruleid(null,null,main),axiom|inherited from superclass)),[explanation(true(${Bob:employee@main},it is a base fact,Bob:employee,ruleinfo(ruleid(null,null,null),this is a base fact or a builtin)),[]), explanation(true(${employee[|vacationdays->20|]@main},it is a base fact,employee[|vacationdays->20|],ruleinfo(ruleid(null,null,null),this is a base fact or a builtin)),[])])])
