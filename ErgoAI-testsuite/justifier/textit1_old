test1 = explanation(true('trade aaa except D2D, for account acct, quantity quantity @ price 567','it is a top query'),[explanation(false('trade 123 is D2D','derived via a builtin axiom (negation, defeasibility, composite goal, etc.)'),[explanation(false('trade 123 is D2D','this is a base fact or a builtin'),[])]), explanation(true('123:trade@data','this is a base fact or a builtin'),[]), explanation(true('123[Acct__->acct]@data','this is a base fact or a builtin'),[]), explanation(true('123[Price->567]@data','this is a base fact or a builtin'),[]), explanation(true('123[Trade_ID->aaa]@data','this is a base fact or a builtin'),[]), explanation(true('\neg 123[Quantity->quantity]@data','this is a base fact or a builtin'),[])])
test2 = explanation(true('(it is false that ((trade 123 is D2D) and (123:trade@data) )) and (((123[Trade_ID->aaa]@data) and ((123[Acct__->acct]@data) and ((\\neg 123[Quantity->quantity]@data) and (123[Price->567]@data)))) and (123:trade@data))','it is a top query'),[explanation(false('(trade 123 is D2D) and (123:trade@data)','derived via a builtin axiom (negation, defeasibility, composite goal, etc.)'),[explanation(false('trade 123 is D2D','this is a base fact or a builtin'),[])]), explanation(true('123:trade@data','this is a base fact or a builtin'),[]), explanation(true('123[Acct__->acct]@data','this is a base fact or a builtin'),[]), explanation(true('123[Price->567]@data','this is a base fact or a builtin'),[]), explanation(true('123[Trade_ID->aaa]@data','this is a base fact or a builtin'),[]), explanation(true('\neg 123[Quantity->quantity]@data','this is a base fact or a builtin'),[])])
test3 = explanation(true('pppp(111)@QRE','pppp/1 rule used'),[explanation(true('qqqq(111)@QRE','this is a base fact or a builtin'),[])])
