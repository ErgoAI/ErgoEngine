:- use_argumentation_theory{ogcle} .
?- [ogclpe>>ogcle] .
:- setsemantics{tabling(incremental)}.
?-Method[%mustDefine(on)]@\sys.

\overrides(?X,?Y) :- silk#overrides(?X,?Y) .
\overrides(?X,?Y,?Z,?W) :- silk#overrides(?X,?Y,?Z,?W) .
?- \optimize(class_expressions, main) .


?- [+'../aux_files/silk-predicates'],
   [+'../aux_files/silk-predicates_at_builtin'>>builtin],
	
	[+'core_files/core-pragmatics'],
	[+'core_files/core-rules'],
	[+'core_files/latest-tiny-kb'],
	[+'core_files/rmt-removal-lookup-pos-1'].

//?- ?query : silk#PersistentQuery[query-> ?text].
//?- \tracelow('/tmp/trace.out.biology-kb-v240-v2-with-definitions').
// KBQ: ( : $OpenSubqueryKBCTestFn  : $CPTTest-HowManyChromatidsInADuplicatedChromosome) (query 0)

// Implicit Background Facts
istAsserted(UniversalVocabularyMt, isa(temporallySubsumes, ReflexiveBinaryPredicate)).
istAsserted(UniversalVocabularyMt, isa('temporallySubsumes-TypeType', ReflexiveBinaryPredicate)).
istAsserted(UniversalVocabularyMt, isa(genlMt, TransitiveBinaryPredicate)).
istAsserted(UniversalVocabularyMt, isa(genlMt, ReflexiveBinaryPredicate)).
istAsserted(UniversalVocabularyMt, genlMt(MicrobiologicalChemistryMt, MicrobiologyMt)).
istAsserted(UniversalVocabularyMt, genlMt(MolecularBiologyMt, MolecularBiologyVocabularyMt)).
istAsserted(UniversalVocabularyMt, genlMt(CycAgencyTheoryMt, UniversalVocabularyMt)).
istAsserted(UniversalVocabularyMt, genlMt(BaseKB, CycAgencyTheoryMt)).
istAsserted(UniversalVocabularyMt, genlMt(MolecularBiologyVocabularyMt, MicrobiologicalChemistryMt)).
istAsserted(UniversalVocabularyMt, genlMt(ReasoningToCausesFromObservationsMt, BaseKB)).
istAsserted(UniversalVocabularyMt, genlMt(CytologicalProcessesQueryMt, MolecularBiologyMt)).
istAsserted(UniversalVocabularyMt, genlMt(CytologicalProcessesQueryMt, ReasoningToCausesFromObservationsMt)).

// Explicit Background Facts
istAsserted(MicrobiologyMt, relationAllExistsCount(chromatids, DuplicatedChromosome, Chromatid, 2)).

// Explicit Background Rules
backwardSentence(relationInstanceExistsCount(?RELATION, ?INSTANCE, ?TYPE2, ?NUM)) :- mtVisible(BaseKB), naf backchainForbidden(relationInstanceExistsCount), relationAllExistsCount(?RELATION, ?TYPE1, ?TYPE2, ?NUM), isa(?INSTANCE, ?TYPE1).
backwardSentence(not(isa(?INSTANCE, ?TYPE1))) :- mtVisible(BaseKB), naf backchainForbidden(isa), relationAllExistsCount(?RELATION, ?TYPE1, ?TYPE2, ?NUM), not(relationInstanceExistsCount(?RELATION, ?INSTANCE, ?TYPE2, ?NUM)).
backwardSentence(not(relationAllExistsCount(?RELATION, ?TYPE1, ?TYPE2, ?NUM))) :- mtVisible(BaseKB), naf backchainForbidden(relationAllExistsCount), isa(?INSTANCE, ?TYPE1), not(relationInstanceExistsCount(?RELATION, ?INSTANCE, ?TYPE2, ?NUM)).

// Hypothesized Premises
istAsserted(UniversalVocabularyMt, isa('Hypothesis-HypotheticalContext-260122', HypotheticalContext)).
istAsserted(UniversalVocabularyMt, genlMt('Hypothesis-HypotheticalContext-260122', CytologicalProcessesQueryMt)).
istAsserted(UniversalVocabularyMt, isa('HYP-DuplicatedChromosome-260123', Individual)).
istAsserted(MtSpace('Hypothesis-HypotheticalContext-260122', MtTimeDimFn(Now)), isa('HYP-DuplicatedChromosome-260123', DuplicatedChromosome)).

// Query
queryMt(MtSpace(MtTimeDimFn(Now), 'Hypothesis-HypotheticalContext-260122')).
//REMOVED TITLE('KBQ ( : $OpenSubqueryKBCTestFn  : $CPTTest-HowManyChromatidsInADuplicatedChromosome) 0').
%pretest :- relationInstanceExistsCount(chromatids, 'HYP-DuplicatedChromosome-260123', Chromatid, ?N), %write_results('SUCCESS ( : $OpenSubqueryKBCTestFn  : $CPTTest-HowManyChromatidsInADuplicatedChromosome) 0').

// Debugging
proof(4302, 0) :- relationAllExistsCount(chromatids, DuplicatedChromosome, Chromatid, 2).
proof(4302, 1) :- relationAllExistsCount(chromatids, DuplicatedChromosome, Chromatid, 2).
proof(4302, 2) :- isa('HYP-DuplicatedChromosome-260123', DuplicatedChromosome).
proof(4302, 3) :- isa('HYP-DuplicatedChromosome-260123', DuplicatedChromosome).
proof(4302, 4) :- isa('HYP-DuplicatedChromosome-260123', DuplicatedChromosome), relationAllExistsCount(chromatids, DuplicatedChromosome, Chromatid, 2).
proof(4302, 5) :- relationInstanceExistsCount(chromatids, 'HYP-DuplicatedChromosome-260123', Chromatid, 2).

proof(4302, 1000) :- genlMt(MolecularBiologyMt, MolecularBiologyVocabularyMt).
proof(4302, 1001) :- genlMt(MolecularBiologyVocabularyMt, MicrobiologicalChemistryMt).
proof(4302, 1002) :- genlMt(ReasoningToCausesFromObservationsMt, BaseKB).

proof(4302, 2000) :- admittedArgument('Hypothesis-HypotheticalContext-260122', 1, genlMt).
proof(4302, 2001) :- admittedArgument('Hypothesis-HypotheticalContext-260122', 2, genlMt).
proof(4302, 2002) :- admittedArgument(SecondFn(10, MinuteFn(32, HourFn(18, DayFn(26, MonthFn(April, YearFn(2011)))))), 1, temporallySubsumes).
proof(4302, 2003) :- admittedArgument(SecondFn(10, MinuteFn(32, HourFn(18, DayFn(26, MonthFn(April, YearFn(2011)))))), 2, temporallySubsumes).
proof(4302, 2004) :- genlMt(MtSpace(MtTimeDimFn(Now), 'Hypothesis-HypotheticalContext-260122'), UniversalVocabularyMt).
proof(4302, 2005) :- genlMt(MtSpace(MtTimeDimFn(Now), 'Hypothesis-HypotheticalContext-260122'), BaseKB).
proof(4302, 2006) :- genlMt(MtSpace(MtTimeDimFn(Now), 'Hypothesis-HypotheticalContext-260122'), MicrobiologyMt).
proof(4302, 2007) :- genlMt(MtSpace(MtTimeDimFn(Now), 'Hypothesis-HypotheticalContext-260122'), MtSpace('Hypothesis-HypotheticalContext-260122', MtTimeDimFn(Now))).
proof(4302, 2008) :- isa('HYP-DuplicatedChromosome-260123', DuplicatedChromosome). 
checkingGround(?R) :- ground(?R).
%write_results(?R) :- %writeln(?R)@\io.

%pretest :- true.

%test :- tell(temp)@\plg(), 
	Method[%mustDefine(on)]@\sys,
	%pretest,
	Method[%mustDefine(off)]@\sys,
	%pretest,
	told@\plg().

