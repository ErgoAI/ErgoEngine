:- use_argumentation_theory{ogcle} .
?- [ogclpe>>ogcle] .
:- setsemantics{tabling(incremental)}.
?-Method[%mustDefine(on)]@\sys.

\overrides(?X,?Y) :- silk#overrides(?X,?Y) .
\overrides(?X,?Y,?Z,?W) :- silk#overrides(?X,?Y,?Z,?W) .
?- \optimize(class_expressions, main) .


?- [+'../aux_files/silk-predicates'],
   [+'../aux_files/silk-predicates_at_builtin'>>builtin],
	
	[+'core_files/core-pragmatics'],
	[+'core_files/core-rules'],
	[+'core_files/latest-tiny-kb'],
	[+'core_files/rmt-removal-lookup-pos-1'].

//?- ?query : silk#PersistentQuery[query-> ?text].
//?- \tracelow('/tmp/trace.out.biology-kb-v240-v2-with-definitions').
// KBQ:  : $CPTTest-SubEventsOfSPhase (query 1)
// http://silk.bbn.com/index.php/Categorized_Candidate_Questions_for_Halo_Bio_Question_Answering : Example:_.28derived_from.29_Kaplan_Practice_Test_1.2C_question_77_.28p._250.29

// Implicit Background Facts
istAsserted(UniversalVocabularyMt, isa(temporallySubsumes, ReflexiveBinaryPredicate)).
istAsserted(UniversalVocabularyMt, isa(genlPreds, TransitiveBinaryPredicate)).
istAsserted(UniversalVocabularyMt, isa(genls, TransitiveBinaryPredicate)).
istAsserted(UniversalVocabularyMt, isa(genls, ReflexiveBinaryPredicate)).
istAsserted(UniversalVocabularyMt, isa('temporallySubsumes-TypeType', ReflexiveBinaryPredicate)).
istAsserted(UniversalVocabularyMt, isa(genlMt, TransitiveBinaryPredicate)).
istAsserted(UniversalVocabularyMt, isa(genlMt, ReflexiveBinaryPredicate)).
istAsserted(UniversalVocabularyMt, isa(subEvents, ReflexiveBinaryPredicate)).
istAsserted(UniversalVocabularyMt, genlMt(MicrobiologicalChemistryMt, MicrobiologyMt)).
istAsserted(UniversalVocabularyMt, genlMt(MicrobiologyMt, MicrobiologyVocabularyMt)).
istAsserted(UniversalVocabularyMt, genlMt(MolecularBiologyMt, MolecularBiologyVocabularyMt)).
istAsserted(UniversalVocabularyMt, transitiveViaArg(relationAllExists, genlPreds, 1)).
istAsserted(UniversalVocabularyMt, genlPreds(typedGenlPreds, genlPreds)).
istAsserted(UniversalVocabularyMt, isa(predicateIntersection, PartiallyCommutativePredicate)).
istAsserted(UniversalVocabularyMt, genlMt(CycAgencyTheoryMt, UniversalVocabularyMt)).
istAsserted(UniversalVocabularyMt, genlMt(BaseKB, CycAgencyTheoryMt)).
istAsserted(UniversalVocabularyMt, genlPreds(properSubEvents, subEvents)).
istAsserted(UniversalVocabularyMt, typedGenlPreds(lastSubEvents, lastProperSubSituations)).
istAsserted(UniversalVocabularyMt, genlPreds(lastProperSubSituations, properSubSituations)).
istAsserted(UniversalVocabularyMt, typedGenlPreds(firstSubEvents, firstProperSubSituations)).
istAsserted(UniversalVocabularyMt, genlPreds(firstProperSubSituations, properSubSituations)).
istAsserted(UniversalVocabularyMt, genlMt(MolecularBiologyVocabularyMt, MicrobiologicalChemistryMt)).
istAsserted(UniversalVocabularyMt, genlMt(MicrobiologyVocabularyMt, BiologyVocabularyMt)).
istAsserted(BaseKB, typedGenlPreds(properSubSituations, properSubEvents)).
istAsserted(UniversalVocabularyMt, genlMt(ProprietaryMtFn(BiologyMt), BiologyMt)).
istAsserted(UniversalVocabularyMt, genlMt(BiologyVocabularyMt, ProprietaryMtFn(BiologyMt))).
istAsserted(UniversalVocabularyMt, 'functionCorrespondingPredicate-Canonical'(TotalityOfSubEventsOfTypeFn, iterativeSubEventTypesTotality, 3)).
istAsserted(UniversalVocabularyMt, genlPreds(iterativeSubEventTypesTotality, startTogetherInSituationType)).
istAsserted(UniversalVocabularyMt, predicateIntersection(uniqueProperSubEventTypes, uniqueProperSubSituationTypes, properSubEventTypes)).
istAsserted(UniversalVocabularyMt, genls(ChromosomalDuplication, 'BiologicalProcess-CellularLevel')).
istAsserted(BiologyMt, firstProperSubEventTypes(SPhase, TotalityOfSubEventsOfTypeFn(InterphaseOfEukaryoticCellCycle, 'Replication-DNA'))).
istAsserted(BiologyMt, relationAllExists(firstSubEvents, SPhase, TotalityOfSubEventsOfTypeFn(InterphaseOfEukaryoticCellCycle, 'Replication-DNA'))).
istAsserted(BaseKB, termOfUnit(TotalityOfSubEventsOfTypeFn(SPhase, IncreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinA, amountPresentAt))), TotalityOfSubEventsOfTypeFn(SPhase, IncreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinA, amountPresentAt))))).
istAsserted(BaseKB, termOfUnit(TotalityOfSubEventsOfTypeFn(SPhase, DecreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinE, amountPresentAt))), TotalityOfSubEventsOfTypeFn(SPhase, DecreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinE, amountPresentAt))))).
istAsserted(BaseKB, termOfUnit(TotalityOfSubEventsOfTypeFn(SPhase, IncreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinB, amountPresentAt))), TotalityOfSubEventsOfTypeFn(SPhase, IncreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinB, amountPresentAt))))).
istAsserted(UniversalVocabularyMt, genls('BiologicalProcess-CellularLevel-LocalizedToSingleCell', 'BiologicalProcess-CellularLevel')).
istAsserted(UniversalVocabularyMt, genls('Replication-DNA', 'BiologicalProcess-CellularLevel-LocalizedToSingleCell')).
istAsserted(UniversalVocabularyMt, genls(CellEnlargementEvent, 'BiologicalProcess-CellularLevel-LocalizedToSingleCell')).
istAsserted(UniversalVocabularyMt, genls(TotalityOfSubEventsOfTypeFn(InterphaseOfEukaryoticCellCycle, 'Replication-DNA'), 'BiologicalProcess-CellularLevel-LocalizedToSingleCell')).
istAsserted(UniversalVocabularyMt, genls(TotalityOfSubEventsOfTypeFn(SPhase, IncreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinA, amountPresentAt))), 'BiologicalProcess-CellularLevel-LocalizedToSingleCell')).
istAsserted(UniversalVocabularyMt, genls(TotalityOfSubEventsOfTypeFn(SPhase, DecreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinE, amountPresentAt))), 'BiologicalProcess-CellularLevel-LocalizedToSingleCell')).
istAsserted(UniversalVocabularyMt, genls(TotalityOfSubEventsOfTypeFn(SPhase, IncreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinB, amountPresentAt))), 'BiologicalProcess-CellularLevel-LocalizedToSingleCell')).
istAsserted(UniversalVocabularyMt, genlMt(ReasoningToCausesFromObservationsMt, BaseKB)).
istAsserted(BaseKB, relationAllExists(lastSubEvents, SPhase, ChromosomalDuplication)).
istAsserted(UniversalVocabularyMt, genlMt(CytologicalProcessesQueryMt, MolecularBiologyMt)).
istAsserted(UniversalVocabularyMt, genlMt(CytologicalProcessesQueryMt, ReasoningToCausesFromObservationsMt)).
istAsserted(BiologyMt, iterativeSubEventTypesTotality(SPhase, 'Replication-DNA', TotalityOfSubEventsOfTypeFn(InterphaseOfEukaryoticCellCycle, 'Replication-DNA'))).
istAsserted(UniversalVocabularyMt, genlMt(CytologicalProcessesQueryMt, ContextOfPCWFn(NthEditionOfWorkFn('Biology-TheTextbook', 6)))).
istAsserted(ContextOfPCWFn(TextualPCWSubSectionOfTypeWithIDFn(TextualPCWSubSectionOfTypeWithIDFn('ChapterOfWork-OrdinalFn'(NthEditionOfWorkFn('Biology-TheTextbook', 6), 12), 'Section-PCW', 'The Mitotic Cell Cycle'), 'Section-PCW', 'The mitotic phase alternates with interphase in the cell cycle: an overview')), genls(SPhase, CellEnlargementEvent)).
istAsserted(UniversalVocabularyMt, genlMt(ContextOfPCWFn(TextualPCWSubSectionOfTypeWithIDFn(TextualPCWSubSectionOfTypeWithIDFn('ChapterOfWork-OrdinalFn'(NthEditionOfWorkFn('Biology-TheTextbook', 6), 12), 'Section-PCW', 'The Mitotic Cell Cycle'), 'Section-PCW', 'The mitotic spindle distributes chromosomes to daughter cells: a closer look')), ContextOfPCWFn(TextualPCWSubSectionOfTypeWithIDFn(TextualPCWSubSectionOfTypeWithIDFn('ChapterOfWork-OrdinalFn'(NthEditionOfWorkFn('Biology-TheTextbook', 6), 12), 'Section-PCW', 'The Mitotic Cell Cycle'), 'Section-PCW', 'The mitotic phase alternates with interphase in the cell cycle: an overview')))).
istAsserted(UniversalVocabularyMt, genlMt(ContextOfPCWFn(TextualPCWSubSectionOfTypeWithIDFn(TextualPCWSubSectionOfTypeWithIDFn('ChapterOfWork-OrdinalFn'(NthEditionOfWorkFn('Biology-TheTextbook', 6), 12), 'Section-PCW', 'The Mitotic Cell Cycle'), 'Section-PCW', 'Cytokinesis divides the cytoplasm: a closer look')), ContextOfPCWFn(TextualPCWSubSectionOfTypeWithIDFn(TextualPCWSubSectionOfTypeWithIDFn('ChapterOfWork-OrdinalFn'(NthEditionOfWorkFn('Biology-TheTextbook', 6), 12), 'Section-PCW', 'The Mitotic Cell Cycle'), 'Section-PCW', 'The mitotic spindle distributes chromosomes to daughter cells: a closer look')))).
istAsserted(UniversalVocabularyMt, genlMt(ContextOfPCWFn(NthEditionOfWorkFn('Biology-TheTextbook', 6)), ContextOfPCWFn(TextualPCWSubSectionOfTypeWithIDFn(TextualPCWSubSectionOfTypeWithIDFn('ChapterOfWork-OrdinalFn'(NthEditionOfWorkFn('Biology-TheTextbook', 6), 12), 'Section-PCW', 'The Mitotic Cell Cycle'), 'Section-PCW', 'Mitosis in eukaryotes may have evolved from binary fission in bacteria')))).
istAsserted(UniversalVocabularyMt, genlMt(ContextOfPCWFn(TextualPCWSubSectionOfTypeWithIDFn(TextualPCWSubSectionOfTypeWithIDFn('ChapterOfWork-OrdinalFn'(NthEditionOfWorkFn('Biology-TheTextbook', 6), 12), 'Section-PCW', 'The Mitotic Cell Cycle'), 'Section-PCW', 'Mitosis in eukaryotes may have evolved from binary fission in bacteria')), ContextOfPCWFn(TextualPCWSubSectionOfTypeWithIDFn(TextualPCWSubSectionOfTypeWithIDFn('ChapterOfWork-OrdinalFn'(NthEditionOfWorkFn('Biology-TheTextbook', 6), 12), 'Section-PCW', 'The Mitotic Cell Cycle'), 'Section-PCW', 'Cytokinesis divides the cytoplasm: a closer look')))).

// Implicit Background Rules
forwardSentence(relationAllExistsCount(?PRED, ?COL1, ?COL2, 1)) :- removalSentence(relationAllExistsUnique(?PRED, ?COL1, ?COL2)).
forwardSentence(relationAllExistsUnique(?PRED, ?COL1, ?COL2)) :- removalSentence(relationAllExistsCount(?PRED, ?COL1, ?COL2, 1)).
forwardSentence(relationAllExists(firstSubEvents, ?COL1, ?COL2)) :- removalSentence(assertedSentence(firstProperSubEventTypes(?COL1, ?COL2))), removalSentence(firstProperSubEventTypes(?COL1, ?COL2)).
forwardSentence(firstProperSubEventTypes(?X, ?Y)) :- removalSentence(assertedSentence(relationAllExists(firstSubEvents, ?X, ?Y))), removalSentence(relationAllExists(firstSubEvents, ?X, ?Y)).
forwardSentence(genlPreds(?PRED, ?GENLPRED1)) :- removalSentence(predicateIntersection(?PRED, ?XGENLPRED2, ?GENLPRED1)).
forwardSentence(genlPreds(?PRED, ?GENLPRED1)) :- removalSentence(predicateIntersection(?PRED, ?GENLPRED1, ?XGENLPRED2)).
forwardSentence(relationAllExists(properSubEvents, ?WHOLE_TYPE, ?PART_TYPE)) :- removalSentence(properSubEventTypes(?WHOLE_TYPE, ?PART_TYPE)).
forwardSentence(relationAllExists(properSubEvents, ?COL1, ?COL2)) :- removalSentence(assertedSentence(properSubEventTypes(?COL1, ?COL2))), removalSentence(properSubEventTypes(?COL1, ?COL2)).
forwardSentence(properSubEventTypes(?COL1, ?COL2)) :- removalSentence(assertedSentence(relationAllExists(properSubEvents, ?COL1, ?COL2))), removalSentence(relationAllExists(properSubEvents, ?COL1, ?COL2)).
forwardSentence(relationAllExists(?PRED, ?COL1, ?COL2)) :- removalSentence(relationAllExistsUnique(?PRED, ?COL1, ?COL2)).
forwardSentence(properSubEventTypes(?SIT, ?SUB_SIT)) :- removalSentence(iterativeSubEventTypesTotality(?SIT, ?XSUB_SUB_SIT, ?SUB_SIT)).
forwardSentence(firstProperSubEventTypes(?SIT, ?SUB_SIT_1)) :- removalSentence(startTogetherInSituationType(?SIT, ?SUB_SIT_1, ?SUB_SIT_2)), removalSentence(firstProperSubEventTypes(?SIT, ?SUB_SIT_2)).
forwardSentence(relationAllExistsCount(properSubEvents, ?SUPER, ?SUB, 1)) :- removalSentence(iterativeSubEventTypesTotality(?SUPER, ?XSUB_SUB, ?SUB)).
forwardSentence(relationAllExistsCount(properSubEvents, ?EVENT_TYPE, ?SUB_TYPE, 1)) :- removalSentence(uniqueProperSubEventTypes(?EVENT_TYPE, ?SUB_TYPE)).
forwardSentence(?PRED(?ARG1, ?ARG2, ?NART)) :- naf impPred(?PRED), removalSentence('functionCorrespondingPredicate-Canonical'(?FUNC, ?PRED, 3)), removalSentence(termOfUnit(?NART, ?FUNC(?ARG1, ?ARG2))).
forwardSentence(uniqueProperSubEventTypes(?SUPER, ?SUB)) :- removalSentence(iterativeSubEventTypesTotality(?SUPER, ?XSUB_SUB, ?SUB)).

// Explicit Background Rules
backwardSentence(relationInstanceExists(?PRED, ?OBJ, ?COL_2)) :- mtVisible(BaseKB), naf backchainForbidden(relationInstanceExists), relationAllExists(?PRED, ?COL_1, ?COL_2), isa(?OBJ, ?COL_1).
backwardSentence(not(isa(?OBJ, ?COL_1))) :- mtVisible(BaseKB), naf backchainForbidden(isa), relationAllExists(?PRED, ?COL_1, ?COL_2), not(relationInstanceExists(?PRED, ?OBJ, ?COL_2)).
backwardSentence(not(relationAllExists(?PRED, ?COL_1, ?COL_2))) :- mtVisible(BaseKB), naf backchainForbidden(relationAllExists), isa(?OBJ, ?COL_1), not(relationInstanceExists(?PRED, ?OBJ, ?COL_2)).
backwardSentence(relationInstanceExists(?PRED, ?OBJ, ?TYPE)) :- mtVisible(UniversalVocabularyMt), naf backchainForbidden(relationInstanceExists), isa(?INS, ?TYPE), ?PRED(?OBJ, ?INS).
backwardSentence(not(isa(?INS, ?TYPE))) :- mtVisible(UniversalVocabularyMt), naf backchainForbidden(isa), ?PRED(?OBJ, ?INS), not(relationInstanceExists(?PRED, ?OBJ, ?TYPE)).
backwardSentence(not(?PRED(?OBJ, ?INS))) :- mtVisible(UniversalVocabularyMt), naf backchainForbidden(?PRED), isa(?INS, ?TYPE), not(relationInstanceExists(?PRED, ?OBJ, ?TYPE)).

// Hypothesized Premises
istAsserted(UniversalVocabularyMt, isa('Hypothesis-HypotheticalContext-260002', HypotheticalContext)).
istAsserted(UniversalVocabularyMt, genlMt('Hypothesis-HypotheticalContext-260002', CytologicalProcessesQueryMt)).
istAsserted(UniversalVocabularyMt, isa('HYP-SPhase-260003', Individual)).
istAsserted(MtSpace('Hypothesis-HypotheticalContext-260002', MtTimeDimFn(Now)), isa('HYP-SPhase-260003', SPhase)).
istAsserted(UniversalVocabularyMt, isa('HYP-Cell-260004', Individual)).
istAsserted(MtSpace('Hypothesis-HypotheticalContext-260002', MtTimeDimFn(Now)), isa('HYP-Cell-260004', Cell)).
istAsserted(MtSpace('Hypothesis-HypotheticalContext-260002', MtTimeDimFn(Now)), doneBy('HYP-SPhase-260003', 'HYP-Cell-260004')).

// Query
queryMt(MtSpace(MtTimeDimFn(Now), 'Hypothesis-HypotheticalContext-260002')).
//REMOVED TITLE('KBQ  : $CPTTest-SubEventsOfSPhase 1').
%pretest :- relationInstanceExists(subEvents, 'HYP-SPhase-260003', ?ACTIVITY), genls(?ACTIVITY, 'BiologicalProcess-CellularLevel'), %write_results('SUCCESS  : $CPTTest-SubEventsOfSPhase 1').

// Debugging
proof(3969, 0) :- subEvents('HYP-SPhase-260003', 'HYP-SPhase-260003').
proof(3969, 1) :- subEvents('HYP-SPhase-260003', 'HYP-SPhase-260003').
proof(3969, 2) :- isa('HYP-SPhase-260003', SPhase).
proof(3969, 3) :- isa('HYP-SPhase-260003', SPhase).
proof(3969, 4) :- genls(SPhase, 'BiologicalProcess-CellularLevel').
proof(3969, 5) :- genls(SPhase, 'BiologicalProcess-CellularLevel').
proof(3969, 6) :- isa('HYP-SPhase-260003', SPhase), genls(SPhase, 'BiologicalProcess-CellularLevel').
proof(3969, 7) :- isa('HYP-SPhase-260003', SPhase), genls(SPhase, 'BiologicalProcess-CellularLevel').
proof(3969, 8) :- isa('HYP-SPhase-260003', SPhase), genls(SPhase, 'BiologicalProcess-CellularLevel'), subEvents('HYP-SPhase-260003', 'HYP-SPhase-260003').
proof(3969, 9) :- genls(SPhase, 'BiologicalProcess-CellularLevel'), relationInstanceExists(subEvents, 'HYP-SPhase-260003', SPhase).
proof(3969, 10) :- isa('HYP-SPhase-260003', CellEnlargementEvent).
proof(3969, 11) :- isa('HYP-SPhase-260003', CellEnlargementEvent).
proof(3969, 12) :- genls(CellEnlargementEvent, 'BiologicalProcess-CellularLevel').
proof(3969, 13) :- genls(CellEnlargementEvent, 'BiologicalProcess-CellularLevel').
proof(3969, 14) :- isa('HYP-SPhase-260003', CellEnlargementEvent), genls(CellEnlargementEvent, 'BiologicalProcess-CellularLevel').
proof(3969, 15) :- isa('HYP-SPhase-260003', CellEnlargementEvent), genls(CellEnlargementEvent, 'BiologicalProcess-CellularLevel').
proof(3969, 16) :- isa('HYP-SPhase-260003', CellEnlargementEvent), genls(CellEnlargementEvent, 'BiologicalProcess-CellularLevel'), subEvents('HYP-SPhase-260003', 'HYP-SPhase-260003').
proof(3969, 17) :- genls(CellEnlargementEvent, 'BiologicalProcess-CellularLevel'), relationInstanceExists(subEvents, 'HYP-SPhase-260003', CellEnlargementEvent).
proof(3969, 18) :- isa('HYP-SPhase-260003', 'BiologicalProcess-CellularLevel-LocalizedToSingleCell').
proof(3969, 19) :- isa('HYP-SPhase-260003', 'BiologicalProcess-CellularLevel-LocalizedToSingleCell').
proof(3969, 20) :- genls('BiologicalProcess-CellularLevel-LocalizedToSingleCell', 'BiologicalProcess-CellularLevel').
proof(3969, 21) :- genls('BiologicalProcess-CellularLevel-LocalizedToSingleCell', 'BiologicalProcess-CellularLevel').
proof(3969, 22) :- isa('HYP-SPhase-260003', 'BiologicalProcess-CellularLevel-LocalizedToSingleCell'), genls('BiologicalProcess-CellularLevel-LocalizedToSingleCell', 'BiologicalProcess-CellularLevel').
proof(3969, 23) :- isa('HYP-SPhase-260003', 'BiologicalProcess-CellularLevel-LocalizedToSingleCell'), genls('BiologicalProcess-CellularLevel-LocalizedToSingleCell', 'BiologicalProcess-CellularLevel').
proof(3969, 24) :- isa('HYP-SPhase-260003', 'BiologicalProcess-CellularLevel-LocalizedToSingleCell'), genls('BiologicalProcess-CellularLevel-LocalizedToSingleCell', 'BiologicalProcess-CellularLevel'), subEvents('HYP-SPhase-260003', 'HYP-SPhase-260003').
proof(3969, 25) :- genls('BiologicalProcess-CellularLevel-LocalizedToSingleCell', 'BiologicalProcess-CellularLevel'), relationInstanceExists(subEvents, 'HYP-SPhase-260003', 'BiologicalProcess-CellularLevel-LocalizedToSingleCell').
proof(3969, 26) :- isa('HYP-SPhase-260003', 'BiologicalProcess-CellularLevel').
proof(3969, 27) :- isa('HYP-SPhase-260003', 'BiologicalProcess-CellularLevel').
proof(3969, 28) :- genls('BiologicalProcess-CellularLevel', 'BiologicalProcess-CellularLevel').
proof(3969, 29) :- genls('BiologicalProcess-CellularLevel', 'BiologicalProcess-CellularLevel').
proof(3969, 30) :- isa('HYP-SPhase-260003', 'BiologicalProcess-CellularLevel'), genls('BiologicalProcess-CellularLevel', 'BiologicalProcess-CellularLevel').
proof(3969, 31) :- isa('HYP-SPhase-260003', 'BiologicalProcess-CellularLevel'), genls('BiologicalProcess-CellularLevel', 'BiologicalProcess-CellularLevel').
proof(3969, 32) :- isa('HYP-SPhase-260003', 'BiologicalProcess-CellularLevel'), genls('BiologicalProcess-CellularLevel', 'BiologicalProcess-CellularLevel'), subEvents('HYP-SPhase-260003', 'HYP-SPhase-260003').
proof(3969, 33) :- genls('BiologicalProcess-CellularLevel', 'BiologicalProcess-CellularLevel'), relationInstanceExists(subEvents, 'HYP-SPhase-260003', 'BiologicalProcess-CellularLevel').
proof(3969, 34) :- genls(TotalityOfSubEventsOfTypeFn(InterphaseOfEukaryoticCellCycle, 'Replication-DNA'), 'BiologicalProcess-CellularLevel').
proof(3969, 35) :- genls(TotalityOfSubEventsOfTypeFn(InterphaseOfEukaryoticCellCycle, 'Replication-DNA'), 'BiologicalProcess-CellularLevel').
proof(3969, 36) :- genls(TotalityOfSubEventsOfTypeFn(SPhase, IncreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinA, amountPresentAt))), 'BiologicalProcess-CellularLevel').
proof(3969, 37) :- genls(TotalityOfSubEventsOfTypeFn(SPhase, IncreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinA, amountPresentAt))), 'BiologicalProcess-CellularLevel').
proof(3969, 38) :- genls(TotalityOfSubEventsOfTypeFn(SPhase, DecreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinE, amountPresentAt))), 'BiologicalProcess-CellularLevel').
proof(3969, 39) :- genls(TotalityOfSubEventsOfTypeFn(SPhase, DecreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinE, amountPresentAt))), 'BiologicalProcess-CellularLevel').
proof(3969, 40) :- genls(TotalityOfSubEventsOfTypeFn(SPhase, IncreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinB, amountPresentAt))), 'BiologicalProcess-CellularLevel').
proof(3969, 41) :- genls(TotalityOfSubEventsOfTypeFn(SPhase, IncreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinB, amountPresentAt))), 'BiologicalProcess-CellularLevel').
proof(3969, 42) :- genls('Replication-DNA', 'BiologicalProcess-CellularLevel').
proof(3969, 43) :- genls('Replication-DNA', 'BiologicalProcess-CellularLevel').
proof(3969, 44) :- genls(ChromosomalDuplication, 'BiologicalProcess-CellularLevel').
proof(3969, 45) :- genls(ChromosomalDuplication, 'BiologicalProcess-CellularLevel').
proof(3969, 46) :- relationAllExists(subEvents, SPhase, TotalityOfSubEventsOfTypeFn(InterphaseOfEukaryoticCellCycle, 'Replication-DNA')).
proof(3969, 47) :- relationAllExists(subEvents, SPhase, TotalityOfSubEventsOfTypeFn(InterphaseOfEukaryoticCellCycle, 'Replication-DNA')).
proof(3969, 48) :- genls(TotalityOfSubEventsOfTypeFn(InterphaseOfEukaryoticCellCycle, 'Replication-DNA'), 'BiologicalProcess-CellularLevel'), relationAllExists(subEvents, SPhase, TotalityOfSubEventsOfTypeFn(InterphaseOfEukaryoticCellCycle, 'Replication-DNA')).
proof(3969, 49) :- genls(TotalityOfSubEventsOfTypeFn(InterphaseOfEukaryoticCellCycle, 'Replication-DNA'), 'BiologicalProcess-CellularLevel'), relationAllExists(subEvents, SPhase, TotalityOfSubEventsOfTypeFn(InterphaseOfEukaryoticCellCycle, 'Replication-DNA')).
proof(3969, 50) :- isa('HYP-SPhase-260003', SPhase), genls(TotalityOfSubEventsOfTypeFn(InterphaseOfEukaryoticCellCycle, 'Replication-DNA'), 'BiologicalProcess-CellularLevel'), relationAllExists(subEvents, SPhase, TotalityOfSubEventsOfTypeFn(InterphaseOfEukaryoticCellCycle, 'Replication-DNA')).
proof(3969, 51) :- genls(TotalityOfSubEventsOfTypeFn(InterphaseOfEukaryoticCellCycle, 'Replication-DNA'), 'BiologicalProcess-CellularLevel'), relationInstanceExists(subEvents, 'HYP-SPhase-260003', TotalityOfSubEventsOfTypeFn(InterphaseOfEukaryoticCellCycle, 'Replication-DNA')).
proof(3969, 52) :- relationAllExists(subEvents, SPhase, 'Replication-DNA').
proof(3969, 53) :- relationAllExists(subEvents, SPhase, 'Replication-DNA').
proof(3969, 54) :- genls('Replication-DNA', 'BiologicalProcess-CellularLevel'), relationAllExists(subEvents, SPhase, 'Replication-DNA').
proof(3969, 55) :- genls('Replication-DNA', 'BiologicalProcess-CellularLevel'), relationAllExists(subEvents, SPhase, 'Replication-DNA').
proof(3969, 56) :- isa('HYP-SPhase-260003', SPhase), genls('Replication-DNA', 'BiologicalProcess-CellularLevel'), relationAllExists(subEvents, SPhase, 'Replication-DNA').
proof(3969, 57) :- genls('Replication-DNA', 'BiologicalProcess-CellularLevel'), relationInstanceExists(subEvents, 'HYP-SPhase-260003', 'Replication-DNA').
proof(3969, 58) :- relationAllExists(subEvents, SPhase, TotalityOfSubEventsOfTypeFn(SPhase, IncreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinB, amountPresentAt)))).
proof(3969, 59) :- relationAllExists(subEvents, SPhase, TotalityOfSubEventsOfTypeFn(SPhase, IncreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinB, amountPresentAt)))).
proof(3969, 60) :- genls(TotalityOfSubEventsOfTypeFn(SPhase, IncreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinB, amountPresentAt))), 'BiologicalProcess-CellularLevel'), relationAllExists(subEvents, SPhase, TotalityOfSubEventsOfTypeFn(SPhase, IncreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinB, amountPresentAt)))).
proof(3969, 61) :- genls(TotalityOfSubEventsOfTypeFn(SPhase, IncreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinB, amountPresentAt))), 'BiologicalProcess-CellularLevel'), relationAllExists(subEvents, SPhase, TotalityOfSubEventsOfTypeFn(SPhase, IncreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinB, amountPresentAt)))).
proof(3969, 62) :- isa('HYP-SPhase-260003', SPhase), genls(TotalityOfSubEventsOfTypeFn(SPhase, IncreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinB, amountPresentAt))), 'BiologicalProcess-CellularLevel'), relationAllExists(subEvents, SPhase, TotalityOfSubEventsOfTypeFn(SPhase, IncreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinB, amountPresentAt)))).
proof(3969, 63) :- genls(TotalityOfSubEventsOfTypeFn(SPhase, IncreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinB, amountPresentAt))), 'BiologicalProcess-CellularLevel'), relationInstanceExists(subEvents, 'HYP-SPhase-260003', TotalityOfSubEventsOfTypeFn(SPhase, IncreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinB, amountPresentAt)))).
proof(3969, 64) :- relationAllExists(subEvents, SPhase, TotalityOfSubEventsOfTypeFn(SPhase, DecreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinE, amountPresentAt)))).
proof(3969, 65) :- relationAllExists(subEvents, SPhase, TotalityOfSubEventsOfTypeFn(SPhase, DecreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinE, amountPresentAt)))).
proof(3969, 66) :- genls(TotalityOfSubEventsOfTypeFn(SPhase, DecreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinE, amountPresentAt))), 'BiologicalProcess-CellularLevel'), relationAllExists(subEvents, SPhase, TotalityOfSubEventsOfTypeFn(SPhase, DecreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinE, amountPresentAt)))).
proof(3969, 67) :- genls(TotalityOfSubEventsOfTypeFn(SPhase, DecreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinE, amountPresentAt))), 'BiologicalProcess-CellularLevel'), relationAllExists(subEvents, SPhase, TotalityOfSubEventsOfTypeFn(SPhase, DecreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinE, amountPresentAt)))).
proof(3969, 68) :- isa('HYP-SPhase-260003', SPhase), genls(TotalityOfSubEventsOfTypeFn(SPhase, DecreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinE, amountPresentAt))), 'BiologicalProcess-CellularLevel'), relationAllExists(subEvents, SPhase, TotalityOfSubEventsOfTypeFn(SPhase, DecreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinE, amountPresentAt)))).
proof(3969, 69) :- genls(TotalityOfSubEventsOfTypeFn(SPhase, DecreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinE, amountPresentAt))), 'BiologicalProcess-CellularLevel'), relationInstanceExists(subEvents, 'HYP-SPhase-260003', TotalityOfSubEventsOfTypeFn(SPhase, DecreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinE, amountPresentAt)))).
proof(3969, 70) :- relationAllExists(subEvents, SPhase, TotalityOfSubEventsOfTypeFn(SPhase, IncreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinA, amountPresentAt)))).
proof(3969, 71) :- relationAllExists(subEvents, SPhase, TotalityOfSubEventsOfTypeFn(SPhase, IncreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinA, amountPresentAt)))).
proof(3969, 72) :- genls(TotalityOfSubEventsOfTypeFn(SPhase, IncreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinA, amountPresentAt))), 'BiologicalProcess-CellularLevel'), relationAllExists(subEvents, SPhase, TotalityOfSubEventsOfTypeFn(SPhase, IncreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinA, amountPresentAt)))).
proof(3969, 73) :- genls(TotalityOfSubEventsOfTypeFn(SPhase, IncreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinA, amountPresentAt))), 'BiologicalProcess-CellularLevel'), relationAllExists(subEvents, SPhase, TotalityOfSubEventsOfTypeFn(SPhase, IncreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinA, amountPresentAt)))).
proof(3969, 74) :- isa('HYP-SPhase-260003', SPhase), genls(TotalityOfSubEventsOfTypeFn(SPhase, IncreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinA, amountPresentAt))), 'BiologicalProcess-CellularLevel'), relationAllExists(subEvents, SPhase, TotalityOfSubEventsOfTypeFn(SPhase, IncreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinA, amountPresentAt)))).
proof(3969, 75) :- genls(TotalityOfSubEventsOfTypeFn(SPhase, IncreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinA, amountPresentAt))), 'BiologicalProcess-CellularLevel'), relationInstanceExists(subEvents, 'HYP-SPhase-260003', TotalityOfSubEventsOfTypeFn(SPhase, IncreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinA, amountPresentAt)))).
proof(3969, 76) :- relationAllExists(subEvents, SPhase, ChromosomalDuplication).
proof(3969, 77) :- relationAllExists(subEvents, SPhase, ChromosomalDuplication).
proof(3969, 78) :- genls(ChromosomalDuplication, 'BiologicalProcess-CellularLevel'), relationAllExists(subEvents, SPhase, ChromosomalDuplication).
proof(3969, 79) :- genls(ChromosomalDuplication, 'BiologicalProcess-CellularLevel'), relationAllExists(subEvents, SPhase, ChromosomalDuplication).
proof(3969, 80) :- isa('HYP-SPhase-260003', SPhase), genls(ChromosomalDuplication, 'BiologicalProcess-CellularLevel'), relationAllExists(subEvents, SPhase, ChromosomalDuplication).
proof(3969, 81) :- genls(ChromosomalDuplication, 'BiologicalProcess-CellularLevel'), relationInstanceExists(subEvents, 'HYP-SPhase-260003', ChromosomalDuplication).

proof(3969, 1000) :- genlMt(MicrobiologyMt, MicrobiologyVocabularyMt).
proof(3969, 1001) :- genlMt(MolecularBiologyMt, MolecularBiologyVocabularyMt).
proof(3969, 1002) :- genlPreds(lastSubEvents, lastProperSubSituations).
proof(3969, 1003) :- genlPreds(firstSubEvents, firstProperSubSituations).
proof(3969, 1004) :- genlMt(MolecularBiologyVocabularyMt, MicrobiologicalChemistryMt).
proof(3969, 1005) :- genlMt(MicrobiologyVocabularyMt, BiologyVocabularyMt).
proof(3969, 1006) :- genlPreds(properSubSituations, properSubEvents).
proof(3969, 1007) :- genlMt(ProprietaryMtFn(BiologyMt), BiologyMt).
proof(3969, 1008) :- genlMt(BiologyVocabularyMt, ProprietaryMtFn(BiologyMt)).
proof(3969, 1009) :- genlPreds(uniqueProperSubEventTypes, properSubEventTypes).
proof(3969, 1010) :- firstProperSubEventTypes(SPhase, TotalityOfSubEventsOfTypeFn(InterphaseOfEukaryoticCellCycle, 'Replication-DNA')).
proof(3969, 1011) :- relationAllExists(firstSubEvents, SPhase, TotalityOfSubEventsOfTypeFn(InterphaseOfEukaryoticCellCycle, 'Replication-DNA')).
proof(3969, 1012) :- genlMt(ReasoningToCausesFromObservationsMt, BaseKB).
proof(3969, 1013) :- iterativeSubEventTypesTotality(SPhase, IncreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinB, amountPresentAt)), TotalityOfSubEventsOfTypeFn(SPhase, IncreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinB, amountPresentAt)))).
proof(3969, 1014) :- iterativeSubEventTypesTotality(SPhase, DecreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinE, amountPresentAt)), TotalityOfSubEventsOfTypeFn(SPhase, DecreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinE, amountPresentAt)))).
proof(3969, 1015) :- iterativeSubEventTypesTotality(SPhase, IncreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinA, amountPresentAt)), TotalityOfSubEventsOfTypeFn(SPhase, IncreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinA, amountPresentAt)))).
proof(3969, 1016) :- properSubEventTypes(SPhase, TotalityOfSubEventsOfTypeFn(SPhase, IncreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinB, amountPresentAt)))).
proof(3969, 1017) :- relationAllExistsCount(properSubEvents, SPhase, TotalityOfSubEventsOfTypeFn(SPhase, IncreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinB, amountPresentAt))), 1).
proof(3969, 1018) :- properSubEventTypes(SPhase, TotalityOfSubEventsOfTypeFn(SPhase, DecreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinE, amountPresentAt)))).
proof(3969, 1019) :- relationAllExistsCount(properSubEvents, SPhase, TotalityOfSubEventsOfTypeFn(SPhase, DecreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinE, amountPresentAt))), 1).
proof(3969, 1020) :- properSubEventTypes(SPhase, TotalityOfSubEventsOfTypeFn(SPhase, IncreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinA, amountPresentAt)))).
proof(3969, 1021) :- relationAllExistsCount(properSubEvents, SPhase, TotalityOfSubEventsOfTypeFn(SPhase, IncreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinA, amountPresentAt))), 1).
proof(3969, 1022) :- relationAllExists(properSubEvents, SPhase, TotalityOfSubEventsOfTypeFn(SPhase, IncreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinB, amountPresentAt)))).
proof(3969, 1023) :- relationAllExists(properSubEvents, SPhase, TotalityOfSubEventsOfTypeFn(SPhase, DecreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinE, amountPresentAt)))).
proof(3969, 1024) :- relationAllExists(properSubEvents, SPhase, TotalityOfSubEventsOfTypeFn(SPhase, IncreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinA, amountPresentAt)))).
proof(3969, 1025) :- relationAllExists(lastSubEvents, SPhase, ChromosomalDuplication).
proof(3969, 1026) :- uniqueProperSubEventTypes(SPhase, TotalityOfSubEventsOfTypeFn(SPhase, IncreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinA, amountPresentAt)))).
proof(3969, 1027) :- uniqueProperSubEventTypes(SPhase, TotalityOfSubEventsOfTypeFn(SPhase, IncreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinB, amountPresentAt)))).
proof(3969, 1028) :- uniqueProperSubEventTypes(SPhase, TotalityOfSubEventsOfTypeFn(SPhase, DecreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinE, amountPresentAt)))).
proof(3969, 1029) :- firstProperSubEventTypes(SPhase, 'Replication-DNA').
proof(3969, 1030) :- relationAllExists(firstSubEvents, SPhase, 'Replication-DNA').
proof(3969, 1031) :- genlMt(ContextOfPCWFn(TextualPCWSubSectionOfTypeWithIDFn(TextualPCWSubSectionOfTypeWithIDFn('ChapterOfWork-OrdinalFn'(NthEditionOfWorkFn('Biology-TheTextbook', 6), 12), 'Section-PCW', 'The Mitotic Cell Cycle'), 'Section-PCW', 'The mitotic spindle distributes chromosomes to daughter cells: a closer look')), ContextOfPCWFn(TextualPCWSubSectionOfTypeWithIDFn(TextualPCWSubSectionOfTypeWithIDFn('ChapterOfWork-OrdinalFn'(NthEditionOfWorkFn('Biology-TheTextbook', 6), 12), 'Section-PCW', 'The Mitotic Cell Cycle'), 'Section-PCW', 'The mitotic phase alternates with interphase in the cell cycle: an overview'))).
proof(3969, 1032) :- genlMt(ContextOfPCWFn(TextualPCWSubSectionOfTypeWithIDFn(TextualPCWSubSectionOfTypeWithIDFn('ChapterOfWork-OrdinalFn'(NthEditionOfWorkFn('Biology-TheTextbook', 6), 12), 'Section-PCW', 'The Mitotic Cell Cycle'), 'Section-PCW', 'Cytokinesis divides the cytoplasm: a closer look')), ContextOfPCWFn(TextualPCWSubSectionOfTypeWithIDFn(TextualPCWSubSectionOfTypeWithIDFn('ChapterOfWork-OrdinalFn'(NthEditionOfWorkFn('Biology-TheTextbook', 6), 12), 'Section-PCW', 'The Mitotic Cell Cycle'), 'Section-PCW', 'The mitotic spindle distributes chromosomes to daughter cells: a closer look'))).
proof(3969, 1033) :- genlMt(ContextOfPCWFn(NthEditionOfWorkFn('Biology-TheTextbook', 6)), ContextOfPCWFn(TextualPCWSubSectionOfTypeWithIDFn(TextualPCWSubSectionOfTypeWithIDFn('ChapterOfWork-OrdinalFn'(NthEditionOfWorkFn('Biology-TheTextbook', 6), 12), 'Section-PCW', 'The Mitotic Cell Cycle'), 'Section-PCW', 'Mitosis in eukaryotes may have evolved from binary fission in bacteria'))).
proof(3969, 1034) :- genlMt(ContextOfPCWFn(TextualPCWSubSectionOfTypeWithIDFn(TextualPCWSubSectionOfTypeWithIDFn('ChapterOfWork-OrdinalFn'(NthEditionOfWorkFn('Biology-TheTextbook', 6), 12), 'Section-PCW', 'The Mitotic Cell Cycle'), 'Section-PCW', 'Mitosis in eukaryotes may have evolved from binary fission in bacteria')), ContextOfPCWFn(TextualPCWSubSectionOfTypeWithIDFn(TextualPCWSubSectionOfTypeWithIDFn('ChapterOfWork-OrdinalFn'(NthEditionOfWorkFn('Biology-TheTextbook', 6), 12), 'Section-PCW', 'The Mitotic Cell Cycle'), 'Section-PCW', 'Cytokinesis divides the cytoplasm: a closer look'))).
proof(3969, 1035) :- relationAllExistsUnique(properSubEvents, SPhase, TotalityOfSubEventsOfTypeFn(SPhase, IncreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinB, amountPresentAt)))).
proof(3969, 1036) :- relationAllExistsUnique(properSubEvents, SPhase, TotalityOfSubEventsOfTypeFn(SPhase, DecreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinE, amountPresentAt)))).
proof(3969, 1037) :- relationAllExistsUnique(properSubEvents, SPhase, TotalityOfSubEventsOfTypeFn(SPhase, IncreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinA, amountPresentAt)))).

proof(3969, 2000) :- admittedArgument('Hypothesis-HypotheticalContext-260002', 1, genlMt).
proof(3969, 2001) :- admittedArgument('Hypothesis-HypotheticalContext-260002', 2, genlMt).
proof(3969, 2002) :- admittedArgument('HYP-SPhase-260003', 1, subEvents).
proof(3969, 2003) :- admittedArgument('HYP-SPhase-260003', 2, subEvents).
proof(3969, 2004) :- admittedArgument('BiologicalProcess-CellularLevel', 1, genls).
proof(3969, 2005) :- admittedArgument('BiologicalProcess-CellularLevel', 2, genls).
proof(3969, 2006) :- admittedArgument(SecondFn(30, MinuteFn(28, HourFn(18, DayFn(26, MonthFn(April, YearFn(2011)))))), 1, temporallySubsumes).
proof(3969, 2007) :- admittedArgument(SecondFn(30, MinuteFn(28, HourFn(18, DayFn(26, MonthFn(April, YearFn(2011)))))), 2, temporallySubsumes).
proof(3969, 2008) :- genlMt(MtSpace(MtTimeDimFn(Now), 'Hypothesis-HypotheticalContext-260002'), UniversalVocabularyMt).
proof(3969, 2009) :- genlMt(MtSpace(MtTimeDimFn(Now), 'Hypothesis-HypotheticalContext-260002'), BaseKB).
proof(3969, 2010) :- genlMt(MtSpace(MtTimeDimFn(Now), 'Hypothesis-HypotheticalContext-260002'), BiologyMt).
proof(3969, 2011) :- genlMt(MtSpace(MtTimeDimFn(Now), 'Hypothesis-HypotheticalContext-260002'), ContextOfPCWFn(TextualPCWSubSectionOfTypeWithIDFn(TextualPCWSubSectionOfTypeWithIDFn('ChapterOfWork-OrdinalFn'(NthEditionOfWorkFn('Biology-TheTextbook', 6), 12), 'Section-PCW', 'The Mitotic Cell Cycle'), 'Section-PCW', 'The mitotic phase alternates with interphase in the cell cycle: an overview'))).
proof(3969, 2012) :- genlMt(MtSpace(MtTimeDimFn(Now), 'Hypothesis-HypotheticalContext-260002'), MtSpace('Hypothesis-HypotheticalContext-260002', MtTimeDimFn(Now))).
proof(3969, 2013) :- genlPreds(typedGenlPreds, genlPreds).
proof(3969, 2014) :- genlPreds(typedGenlPreds, genlPreds).
proof(3969, 2015) :- genlPreds(uniqueProperSubEventTypes, properSubEventTypes).
proof(3969, 2016) :- genlPreds(iterativeSubEventTypesTotality, startTogetherInSituationType).
proof(3969, 2017) :- genls(CellEnlargementEvent, 'BiologicalProcess-CellularLevel').
proof(3969, 2018) :- genls('Replication-DNA', 'BiologicalProcess-CellularLevel').
proof(3969, 2019) :- genls('BiologicalProcess-CellularLevel', 'BiologicalProcess-CellularLevel').
proof(3969, 2020) :- genls(ChromosomalDuplication, 'BiologicalProcess-CellularLevel').
proof(3969, 2021) :- genls(SPhase, 'BiologicalProcess-CellularLevel').
proof(3969, 2022) :- genls('BiologicalProcess-CellularLevel-LocalizedToSingleCell', 'BiologicalProcess-CellularLevel').
proof(3969, 2023) :- genls(TotalityOfSubEventsOfTypeFn(InterphaseOfEukaryoticCellCycle, 'Replication-DNA'), 'BiologicalProcess-CellularLevel').
proof(3969, 2024) :- genls(TotalityOfSubEventsOfTypeFn(SPhase, IncreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinA, amountPresentAt))), 'BiologicalProcess-CellularLevel').
proof(3969, 2025) :- genls(TotalityOfSubEventsOfTypeFn(SPhase, DecreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinE, amountPresentAt))), 'BiologicalProcess-CellularLevel').
proof(3969, 2026) :- genls(TotalityOfSubEventsOfTypeFn(SPhase, IncreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinB, amountPresentAt))), 'BiologicalProcess-CellularLevel').
proof(3969, 2027) :- isa('HYP-SPhase-260003', CellEnlargementEvent).
proof(3969, 2028) :- isa('HYP-SPhase-260003', 'BiologicalProcess-CellularLevel').
proof(3969, 2029) :- isa('HYP-SPhase-260003', SPhase).
proof(3969, 2030) :- isa('HYP-SPhase-260003', 'BiologicalProcess-CellularLevel-LocalizedToSingleCell').
proof(3969, 2031) :- isa(predicateIntersection, PartiallyCommutativePredicate).
proof(3969, 2032) :- subEvents('HYP-SPhase-260003', 'HYP-SPhase-260003').
proof(3969, 2033) :- relationAllExists(subEvents, SPhase, 'Replication-DNA').
proof(3969, 2034) :- relationAllExists(subEvents, SPhase, ChromosomalDuplication).
proof(3969, 2035) :- relationAllExists(subEvents, SPhase, TotalityOfSubEventsOfTypeFn(InterphaseOfEukaryoticCellCycle, 'Replication-DNA')).
proof(3969, 2036) :- relationAllExists(subEvents, SPhase, TotalityOfSubEventsOfTypeFn(SPhase, IncreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinA, amountPresentAt)))).
proof(3969, 2037) :- relationAllExists(subEvents, SPhase, TotalityOfSubEventsOfTypeFn(SPhase, DecreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinE, amountPresentAt)))).
proof(3969, 2038) :- relationAllExists(subEvents, SPhase, TotalityOfSubEventsOfTypeFn(SPhase, IncreaseOnSlotFn(QuantitySlotForArg2Fn(CyclinB, amountPresentAt)))). 
checkingGround(?R) :- ground(?R).
%write_results(?R) :- %writeln(?R)@\io.

%pretest :- true.

%test :- tell(temp)@\plg(), 
	Method[%mustDefine(on)]@\sys,
	%pretest,
	Method[%mustDefine(off)]@\sys,
	%pretest,
	told@\plg().

