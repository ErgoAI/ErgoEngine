/* File:      flrsimpleprimitive.P - generalized support for simple primitives
**
** Author(s): Michael Kifer
**
** Contact:   flora-users@lists.sourceforge.net
**
** Copyright (C) by
**     The Research Foundation of the State University of New York, 2013 - 2018;
**     and Vulcan, Inc., 2013.
*      Coherent Knowledge Systems, LLC, 2014-2018.
**
** Licensed under the Apache License, Version 2.0 (the "License");
** you may not use this file except in compliance with the License.
** You may obtain a copy of the License at
**
**      http://www.apache.org/licenses/LICENSE-2.0
**
** Unless required by applicable law or agreed to in writing, software
** distributed under the License is distributed on an "AS IS" BASIS,
** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
** See the License for the specific language governing permissions and
** limitations under the License.
**
**
*/

/*
  This provides a simple way of adding builtin primitives of the form
  primitiveName{...}
*/

:- compiler_options([xpp_on]).
#mode standard Prolog


#include "flora_terms.flh"

:- dynamic flora_simple_primitive/4, flora_simple_delayed_primitive/3.
:- index(flora_simple_primitive/4,[1,3]).
:- index(flora_simple_delayed_primitive/3,[1,3]).

:- export
        flora_simple_primitive/4,
        flora_simple_delayed_primitive/3,
        flora_simple_primitive_extra_args/3.

%% these primitives have invisible additional arguments
flora_simple_primitive(FL_RULEENABLE,3,enable_rule_by_id,flrdescriptor_support).
flora_simple_primitive(FL_RULEDISABLE,3,disable_rule_by_id,flrdescriptor_support).
flora_simple_primitive(FL_TRANS_RULEENABLE,3,enable_rule_by_id_trans,flrdescriptor_support).
flora_simple_primitive(FL_TRANS_RULEDISABLE,3,disable_rule_by_id_trans,flrdescriptor_support).
flora_simple_primitive(FL_ISRULEENABLED,3,is_enabled_rule,flrdescriptor_support).
flora_simple_primitive(FL_ISRULEDISABLED,3,is_disabled_rule,flrdescriptor_support).
flora_simple_primitive(FL_MAKEDEFEASIBLE,3,make_rule_defeasible,flrdescriptor_support).
flora_simple_primitive(FL_MAKESTRICT,3,make_rule_strict,flrdescriptor_support).
flora_simple_primitive(FL_ISDEFEASIBLE,3,is_defeasible_rule,flrdescriptor_support).
flora_simple_primitive(FL_ISSTRICT,3,is_strict_rule,flrdescriptor_support).

flora_simple_primitive(FL_RUN_QUERY,3,test_latent_query,flrdescriptor_support).

%%flora_simple_primitive(FL_VARIABLES,3,flrterm_vars,flora_ground).
flora_simple_primitive(FL_VARIABLES,2,flora_term_variables,flrauxil).

flora_simple_primitive(FL_COUNTER,2,get_counter,flrcounter).
flora_simple_primitive(FL_HERE,2,flora_localize_call,flrlocalize).
%% return only one answer
flora_simple_primitive(once,1,flora_table_once,flrtables).

%%%%%%% END of primitives with invisible additional arguments


flora_simple_primitive(FL_NEWOIDOP,1,FLLIBNEWOID,flrnewoid).
flora_simple_primitive(FL_SKOLEMOP,1,FLLIBNEWOID,flrnewoid).
flora_simple_primitive(FL_NEWOIDOP,2,FLLIBNEWOID,flrnewoid).
flora_simple_primitive(FL_SKOLEMOP,2,FLLIBNEWOID,flrnewoid).
flora_simple_primitive(FL_SKOLEMIZE,2,flora_skolemize_term,flrnewoid).
flora_simple_primitive(cloneterm,2,copy_term,basics).
flora_simple_primitive(encoding,2,flora_encoding,flrencoding).
flora_simple_primitive(isnegform,1,flora_is_neg_negated_pred,flrwrapper).
flora_simple_primitive(isnegform,2,unnegate_predicate,flrwrapper).
flora_simple_primitive(isnafform,1,is_naf_literal,flrcanon).
flora_simple_primitive(isnafform,2,is_naf_literal,flrcanon).

flora_simple_primitive(FL_ISBASEFACTPRIM,1,FL_ISBASEFACT,flrstorageutils).
flora_simple_primitive(FL_ISBASEFACTPRIM,2,FL_ISBASEFACT,flrstorageutils).
flora_simple_primitive(isloaded,1,flora_user_module_registry,flrregistry).
flora_simple_primitive(isloaded,3,flora_user_load_registry,flrregistry).
flora_simple_primitive(isloaded,4,flora_user_load_registry,flrregistry).
flora_simple_primitive(FL_PROFILEPRIM,1,profile_call,xsb_profiling).

flora_simple_primitive(FL_COMPILEPRIM,1,FL_COMPILE,flora2).
flora_simple_primitive(FL_COMPILE_ADDPRIM,1,FL_COMPILE_ADD,flora2).
flora_simple_primitive(FL_SAVEPRIM,1,FL_SAVE,flora2).
flora_simple_primitive(FL_DUMPPRIM,1,FL_DUMP,flrutils).

%% current truthvalue{?X} - check in rule body
flora_simple_primitive(FL_TRUTHVALUE_PRIMITIVE,1,FL_TRUTHVALUE_TEST_PRED,usermod).

%% debug, answer, default
flora_simple_primitive(setdisplaymode,1,flora_set_display_mode,flrdecode).
flora_simple_primitive(displaymode,1,flora_display_mode,flrdecode).
%% raw, flora
flora_simple_primitive(setdisplayschema,1,flora_set_display_schema,flrdecode).
flora_simple_primitive(displayschema,1,flora_display_schema,flrdecode).

flora_simple_primitive(system,1,flora_system_info,flrutils).

%% demoname
flora_simple_primitive(demo,1,'\\demo',usermod).
%% on/off
flora_simple_primitive(warnings,1,flora_warnings_control,flrutils).
flora_simple_primitive(setwarnings,1,flora_set_warnings_control,flrutils).
%% on/off
flora_simple_primitive(chatter,1,flora_chatter_control,flrutils).
%% on/off/tempoff
flora_simple_primitive(feedback,1,flora_feedback_control,flrutils).
%% on/off/tempoff
flora_simple_primitive(prompt,1,flora_prompt_control,flrutils).

%% bt{on/off} - whether to print backtrace on error
flora_simple_primitive(bt,1,flora_backtrace,flrshell_loop_handler).

%% on/off
flora_simple_primitive(production,1,'\\production',usermod).
%% on/off
flora_simple_primitive(expert,1,'\\expert',usermod).
flora_simple_primitive(resetoptimization,1,'\\resetoptimization',usermod).
flora_simple_primitive(resetoptimization,2,'\\resetoptimization',usermod).

flora_simple_primitive(FL_ISSKOLEMPRIM,1,FL_ISSKOLEM,flrnewoid) :- !.

flora_simple_primitive('isiri',1,'\\isiri',flrdatatype) :- !.
flora_simple_primitive('isstring',1,'\\isstring',flrdatatype) :- !.
flora_simple_primitive('issymbol',1,'\\issymbol',flrdatatype) :- !.
flora_simple_primitive('isboolean',1,'\\isboolean',flrdatatype) :- !.
flora_simple_primitive('isinteger',1,integer,usermod) :- !.
flora_simple_primitive('isfloat',1,float,usermod) :- !.
flora_simple_primitive('isnumber',1,number,usermod) :- !.
flora_simple_primitive('isdecimal',1,number,usermod) :- !.
flora_simple_primitive('islist',1,is_list,usermod) :- !.
flora_simple_primitive('isatom',1,atom,usermod) :- !.
flora_simple_primitive('isatomic',1,atomic,usermod) :- !.
flora_simple_primitive('iscompound',1,compound,usermod) :- !.
flora_simple_primitive('ischarlist',1,is_charlist,usermod) :- !.
flora_simple_primitive('isground',1,flrground,flora_ground).
flora_simple_primitive('isnonground',1,flrnonground,flora_ground).

flora_simple_primitive('isvar',1,flora_is_var_prim,flrdatatype) :- !.
flora_simple_primitive('isnonvar',1,flora_is_nonvar_prim,flrdatatype) :- !.

flora_simple_primitive(FL_SPLITIRI_PRIMITIVE,4,flora_split_iri,flrprefixdef).

flora_simple_primitive(displayformat,1,flora_get_display_format,flrdecode).
flora_simple_primitive(setdisplayformat,1,flora_set_display_format,flrdecode).

flora_simple_primitive(copy2mod,3,flora_changemodule,flrchangemod).

flora_simple_delayed_primitive(isiri,2,'\\isiri') :- !.
flora_simple_delayed_primitive(isstring,2,'\\isstring') :- !.
flora_simple_delayed_primitive(issymbol,2,'\\issymbol') :- !.
flora_simple_delayed_primitive(isinteger,2,'\\isinteger') :- !.
flora_simple_delayed_primitive(isfloat,2,'\\isfloat') :- !.
flora_simple_delayed_primitive(isnumber,2,'\\isnumber') :- !.
flora_simple_delayed_primitive(isdecimal,2,'\\isdecimal') :- !.
flora_simple_delayed_primitive(islist,2,'\\islist') :- !.
flora_simple_delayed_primitive(isatom,2,'\\isatom') :- !.
flora_simple_delayed_primitive(isatomic,2,'\\isatomic') :- !.
flora_simple_delayed_primitive(iscompound,2,'\\iscompound') :- !.
flora_simple_delayed_primitive(ischarlist,2,'\\ischarlist') :- !.
flora_simple_delayed_primitive(isvar,2,'\\isvar') :- !.
flora_simple_delayed_primitive(isnonvar,2,'\\isnonvar') :- !.
flora_simple_delayed_primitive(isground,2,'\\isground').
flora_simple_delayed_primitive(isnonground,2,'\\isnonground').

%% The following primitives get 2 extra arguments at the end.
%% They are inserted by the compiler
%% The primitives below are converted by the compiler to the
%% primitives listed in flora_simple_primitive/4 with bigger arity
%% The extra args specified below are added at the end.
%% Argument specs:
%%      'F' means - this-file, short name; '@' - this module;
%%      'FF' - this-file, full file name
%%      'L' - line
%%      After these, any number or atom is passed as is (eg, in FL_VARIABLES)
flora_simple_primitive_extra_args(FL_RULEENABLE,1,['F','@']).
flora_simple_primitive_extra_args(FL_RULEDISABLE,1,['F','@']).
flora_simple_primitive_extra_args(FL_TRANS_RULEENABLE,1,['F','@']).
flora_simple_primitive_extra_args(FL_TRANS_RULEDISABLE,1,['F','@']).
flora_simple_primitive_extra_args(FL_ISRULEENABLED,1,['F','@']).
flora_simple_primitive_extra_args(FL_ISRULEDISABLED,1,['F','@']).
flora_simple_primitive_extra_args(FL_MAKEDEFEASIBLE,1,['F','@']).
flora_simple_primitive_extra_args(FL_MAKESTRICT,1,['F','@']).
flora_simple_primitive_extra_args(FL_ISDEFEASIBLE,1,['F','@']).
flora_simple_primitive_extra_args(FL_ISSTRICT,1,['F','@']).
flora_simple_primitive_extra_args(FL_RUN_QUERY,1,['F','@']).
%%flora_simple_primitive_extra_args(FL_VARIABLES,2,[0]).
flora_simple_primitive_extra_args(FL_COUNTER,1,['@']).
flora_simple_primitive_extra_args(FL_HERE,1,['FF']). %% full filename

%% Ergo extensions

%% fastload is also listed in flora_simple_primitive_extra_args/3.
%% it is normally used with 2 arguments only. The extra (3-d) argument is
%% inserted by the compiler
flora_simple_primitive(FL_FASTLOAD,3,ergo_fast_trie_loader,ergo_fastloader).
flora_simple_primitive(FL_FASTQUERY,2,ergo_fast_query,ergo_fastloader).
flora_simple_primitive(FL_FASTERASE,1,ergo_fast_erase,ergo_fastloader).

flora_simple_primitive(ERGOTEXT_TEMPLATE_DIRECTIVE,2,flora_load_ergotext_template,flrutils).
%% in syslib/extensions/flrwhy.P
flora_simple_primitive(FL_WHY_PRIMITIVE,1,'\\flora_explain_answer',usermod).
flora_simple_primitive(FL_PEEK,1,FLLIBPEEK,flrtables).

flora_simple_primitive(omni,1,'\\omni',usermod).

flora_simple_primitive(showgoals,0,show_unfinished_goals,flrtabledump).
flora_simple_primitive(showgoals,2,show_unfinished_goals,flrtabledump).
flora_simple_primitive(showtables,0,show_tables,flrtabledump).
flora_simple_primitive(showtables,2,show_tables,flrtabledump).

flora_simple_primitive(terminyzer,5,start_logging_for_terminyzer,flrterminyzer).
flora_simple_primitive(terminyzer,0,start_logging_for_terminyzer,flrterminyzer).

flora_simple_primitive(setmonitor,2,ergo_perf_monitor,flrerrhandler).
flora_simple_primitive(setmonitor,0,ergo_perf_monitor,flrerrhandler).

flora_simple_primitive(mustDefine,0,set_mustDefine,flrutils).

flora_simple_primitive(FL_STRUCTDB,5,ergo_query_structdb,ergo_struct_db).
flora_simple_primitive(FL_STRUCTDB,6,ergo_query_structdb,ergo_struct_db).

flora_simple_primitive(FL_CONSTRAINT,5,ergo_constraint,ergo_dbconstraint).
flora_simple_primitive(FL_CONSTRAINT,6,ergo_constraint,ergo_dbconstraint).
flora_simple_primitive(FL_ALERT,6,ergo_alert,ergo_alert).
flora_simple_primitive(FL_ALERT,7,ergo_alert,ergo_alert).

flora_simple_primitive(FL_TEXTIT_PRIMITIVE,4,ergo_textit_insert,ergo_textit).
flora_simple_primitive(FL_TEXTIT_PRIMITIVE,5,ergo_textit_insert,ergo_textit).

flora_simple_primitive(random,1,flora_get_random,ergo_random).
flora_simple_primitive(random,2,flora_get_random,ergo_random).

%% this gets an extra argument inserted by the compiler
%% Argument specs:
%%      'F' means - this-file, short name; '@' - this module;
%%      'FF' - this-file, full file name
%%      'L' - line
flora_simple_primitive_extra_args(FL_FASTLOAD,2,['FF']).
flora_simple_primitive_extra_args(ERGOTEXT_TEMPLATE_DIRECTIVE,1,['@']).
flora_simple_primitive_extra_args(FL_CONSTRAINT,2,['F','@','L']).
flora_simple_primitive_extra_args(FL_CONSTRAINT,3,['F','@','L']).
flora_simple_primitive_extra_args(FL_ALERT,3,['F','@','L']).
flora_simple_primitive_extra_args(FL_ALERT,4,['F','@','L']).

flora_simple_primitive_extra_args(FL_TEXTIT_PRIMITIVE,3,['@']).
flora_simple_primitive_extra_args(FL_TEXTIT_PRIMITIVE,4,['@']).
