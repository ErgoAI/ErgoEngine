/* File:      flrrulesigops.P
**
** Author(s): Michael Kifer
**
** Contact:   flora-users@lists.sourceforge.net
**
** Copyright (C) by
**      The Research Foundation of the State University of New York, 2008 - 2018;
**      and Vulcan, Inc., 2013.
**
** Licensed under the Apache License, Version 2.0 (the "License");
** you may not use this file except in compliance with the License.
** You may obtain a copy of the License at
**
**      http://www.apache.org/licenses/LICENSE-2.0
**
** Unless required by applicable law or agreed to in writing, software
** distributed under the License is distributed on an "AS IS" BASIS,
** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
** See the License for the specific language governing permissions and
** limitations under the License.
**
**
*/

:- compiler_options([xpp_on]).
#mode standard Prolog

#include "flora_terms.flh"

:- import
	show_rule_signature/13,
	matching_rule_signature/7
   from flrcanon.

:- import
	get_tag_descriptor_info/5
   from flrdescriptor_support.
:- import
	flora_decode_module_name/2
   from flrwrapper.


%% to specify the module, use tag{?T,?H@module}
FLLIBTAGPRIMITIVE(Tag,HeadList) :-
	HeadList = [Head],
	(var(Head) -> true
	; flora_decode_module_name(Head,Mod)
	),
	get_tag_descriptor_info(RuleId,FileName,Mod,Tag,VarsTerm),
	matching_rule_signature(RuleId,FileName,VarsTerm,_RulePrefx,Head,_Body,_RuleSig).

%% Can be used to obtain all known tags of defeasible rules.
%% Not used. Can be replaced by ?- @!{?[defeasible,tag->?T]}.
%% FL_RULE_TAG(-Tag,+Mod)
FL_RULE_TAG(Tag,Mod) :-
	get_tag_descriptor_info(RuleId,FileName,Mod,Tag,VarsTerm),
	show_rule_signature(RuleId,FileName,VarsTerm,_RulePrefx,Mod,_RuleNum,_Hd,_Body,_PreBody,_H2BSig,_PostBody,DefeatCond,_RuleList),
	DefeatCond \== NULL.
