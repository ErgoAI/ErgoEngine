/* File:      flraggmax.P
**
** Author(s): Guizhen Yang 
**
** Contact:   flora-users@lists.sourceforge.net
**
** Copyright (C) by
**      The Research Foundation of the State University of New York, 1999-2021.
**
** Licensed under the Apache License, Version 2.0 (the "License");
** you may not use this file except in compliance with the License.
** You may obtain a copy of the License at
**
**      http://www.apache.org/licenses/LICENSE-2.0
**
** Unless required by applicable law or agreed to in writing, software
** distributed under the License is distributed on an "AS IS" BASIS,
** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
** See the License for the specific language governing permissions and
** limitations under the License.
**
**
*/


:- compiler_options([xpp_on]).
#mode standard Prolog


#include "flora_terms.flh"
#include "flora_errors.flh"
#include "flora_exceptions.flh"

:- import member/2 from basics.

:- import flora_decode_oid_list_as_atom_list_substitute_vars/2 from flrdecode.
:- import flora_abort/2 from flrporting.
%%:- import ground_memberchk/1 from flrauxil.
:- import flora_type_numeric_value/2 from flrdatatype.

:- import sup/2 from clpr.



/*********************************************************************
  fllibmax(+Var,+GrpByLst,[],+Goal,-Max)
*********************************************************************/
FLLIBMAX(Var,[],[],Goal,Max) :-
	!,
	findall(Var,Goal,Matches),
	Matches=[H|L],
	flora_maxaux(L,H,Max).

/*
FLLIBMAX(Var,GrpByLst,[],Goal,_Max) :-
	ground_memberchk(GrpByLst),
	!,
	flora_decode_oid_list_as_atom_list_substitute_vars([Var,GrpByLst,Goal],
							   [VarA,GrpByLstA,GoalA]),
	flora_abort(['In ',FL_MAX,'{',VarA,GrpByLstA,'|',GoalA,'}',GROUPING_VAR_GROUND],
		    FLORA_ABORT_NOTRACE).
*/


FLLIBMAX(Var,GrpByLst,[],Goal,Max) :-
	!,
	findall(flora_result(Var,GrpByLst),Goal,Matches),
	findall(Grp,member(flora_result(_,Grp),Matches),GL),
	sort(GL,Groups),
	member(GrpByLst,Groups),
	findall(D,member(flora_result(D,GrpByLst),Matches),DL),
	DL=[H|L],
	flora_maxaux(L,H,Max).


/********************************************************************
  flora_maxaux(+List,+CurrMax,-Max)
********************************************************************/
flora_maxaux([],X,UB) :-
        var(X),
        !,
        sup(X,UB).
flora_maxaux([],X,X) :- !.

flora_maxaux([H|L],X,Max) :-
	!,
	( (number(H), HUB = H; var(H), sup(H,HUB)),
            (number(X), XUB = X ; var(X), sup(X,XUB)) ->
	    (HUB>XUB -> flora_maxaux(L,HUB,Max)
	    ; flora_maxaux(L,XUB,Max)
	    )
	;
            %% the use of flora_type_numeric_value/2 allows us to get
            %% the right min/max for things like dates, time, etc.
            flora_type_numeric_value(H,HVval),
            flora_type_numeric_value(X,XVval),
            HVval @> XVval -> flora_maxaux(L,H,Max)
	; flora_maxaux(L,X,Max)
	).
