/* File:      ergo_pkgs/minizinc.ergo -- MiniZinc interface
**
** Author(s): Michael Kifer
**
** Contact:   flora-users@lists.sourceforge.net
**
** Copyright (C) Coherent Knowledge Systems, 2018-2023.
**
** Licensed under the Apache License, Version 2.0 (the "License");
** you may not use this file except in compliance with the License.
** You may obtain a copy of the License at
**
**      http://www.apache.org/licenses/LICENSE-2.0
**
** Unless required by applicable law or agreed to in writing, software
** distributed under the License is distributed on an "AS IS" BASIS,
** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
** See the License for the specific language governing permissions and
** limitations under the License.
**
*/


:- compiler_options{production=on}.

:- suppress_rule_signatures.
:- nontabled_module.

:- export{
           show(?),
           delete(?),
           keep_tmpfiles,
           show_mzn_cmd,
           dbg_clear,
           solve(?,?,?,?,?,?,?,?),
           solve_flex(?,?,?,?,?,?,?,?)
         }.

solve(?MZNFile,?DataFileList,?InParams,?Solver,?NumSolutions,?OutTemplate,?Result,?Exceptions) :-
        p2h{?InParamsPlg,?InParams},
        p2h{?OutTemplatePlg,?OutTemplate},
        \if isnonvar{?Result} \then
           p2h{?ResultPlg,?Result}, // Result could be bound
        solve(?MZNFile,?DataFileList,?InParamsPlg,?Solver,?NumSolutions,?OutTemplatePlg,?ResultPlg,?ExceptionsPlg)@\prolog(minizinc),
        p2h{?ResultPlg,?Result},
        p2h{?ExceptionsPlg,?Exceptions}.

solve_flex(?MZNFile,?DataFileList,?InParams,?Solver,?NumSolutions,?OutTemplate,?Result,?Exceptions) :-
        must(ground(?InParams), ground(?OutTemplate))^
        (
          solve(?MZNFile,?DataFileList,?InParams,?Solver,?NumSolutions,?OutTemplate,?Result,?Exceptions)
        ).


show(?X) :-
        \if isnonvar{?X} \then
           p2h{?Y,?X},
        show(?Y)@\prolog(minizinc),
        p2h{?Y,?X}.

delete(?X) :-
        \if isnonvar{?X} \then
           p2h{?Y,?X},
        delete(?Y)@\prolog(minizinc).

keep_tmpfiles :- keep_tmpfiles@\prolog(minizinc).
show_mzn_cmd  :- show_mzn_cmd@\prolog(minizinc).
dbg_clear     :- dbg_clear@\prolog(minizinc).
