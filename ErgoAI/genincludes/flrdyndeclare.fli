/***************************************************************************
  file: genincludes/flrdyndeclare.fli - A template for the include file for
                                  dynamic declarations
  Author(s): Michael Kifer

  Copyright (C) by
       The Research Foundation of the State University of New York, 1999-2018
       and Vulcan, Inc., 2012-2013.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
 
       http://www.apache.org/licenses/LICENSE-2.0
 
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

***************************************************************************/

#include "flora_wspredicates.flh"

:- WRAP_COPY_UNQUOTED 'TABLING_CONNECTIVE'.
:- WRAP_COPY_UNQUOTED 'FLORA_DYNAMICS_TYPE'.
:- WRAP_COPY_UNQUOTED 'FLORA_THIS_WORKSPACE'.

/*
%% This is now done in flora_tabling_methods.flh
:- WRAP_DUMP  '#ifdef FLORA_NONTABLED_DATA_MODULE'.
:- WRAP_DUMP  '#define FLORA_FLEX_DYNAMIC_TYPE_CLAUSE none'.
:- WRAP_DUMP  '#else'.
:- WRAP_DUMP  '#define FLORA_FLEX_DYNAMIC_TYPE_CLAUSE FLORA_DYNAMICS_TYPE'.
:- WRAP_DUMP  '#endif'.
*/

:- WRAP_COPY_UNQUOTED 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'.


/*******************************************************************
 Hilog
*******************************************************************/

'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_NONTABLED_HILOG)/2,
	FLDYNZPREFIX(WRAP_NONTABLED_HILOG)/2
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_NONTABLED_HILOG)/3,
	FLDYNZPREFIX(WRAP_NONTABLED_HILOG)/3
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_NONTABLED_HILOG)/4,
	FLDYNZPREFIX(WRAP_NONTABLED_HILOG)/4
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_NONTABLED_HILOG)/5,
	FLDYNZPREFIX(WRAP_NONTABLED_HILOG)/5
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_NONTABLED_HILOG)/6,
	FLDYNZPREFIX(WRAP_NONTABLED_HILOG)/6
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_NONTABLED_HILOG)/7,
	FLDYNZPREFIX(WRAP_NONTABLED_HILOG)/7
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_NONTABLED_HILOG)/8,
	FLDYNZPREFIX(WRAP_NONTABLED_HILOG)/8
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_NONTABLED_HILOG)/9,
	FLDYNZPREFIX(WRAP_NONTABLED_HILOG)/9
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_NONTABLED_HILOG)/10,
	FLDYNZPREFIX(WRAP_NONTABLED_HILOG)/10
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_NONTABLED_HILOG)/11,
	FLDYNZPREFIX(WRAP_NONTABLED_HILOG)/11
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_NONTABLED_HILOG)/12,
	FLDYNZPREFIX(WRAP_NONTABLED_HILOG)/12
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_NONTABLED_HILOG)/13,
	FLDYNZPREFIX(WRAP_NONTABLED_HILOG)/13
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_NONTABLED_HILOG)/14,
	FLDYNZPREFIX(WRAP_NONTABLED_HILOG)/14
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_NONTABLED_HILOG)/15,
	FLDYNZPREFIX(WRAP_NONTABLED_HILOG)/15
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_NONTABLED_HILOG)/16,
	FLDYNZPREFIX(WRAP_NONTABLED_HILOG)/16
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_NONTABLED_HILOG)/17,
	FLDYNZPREFIX(WRAP_NONTABLED_HILOG)/17
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_NONTABLED_HILOG)/18,
	FLDYNZPREFIX(WRAP_NONTABLED_HILOG)/18
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_NONTABLED_HILOG)/19,
	FLDYNZPREFIX(WRAP_NONTABLED_HILOG)/19
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_NONTABLED_HILOG)/20,
	FLDYNZPREFIX(WRAP_NONTABLED_HILOG)/20
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_NONTABLED_HILOG)/21,
	FLDYNZPREFIX(WRAP_NONTABLED_HILOG)/21
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_NONTABLED_HILOG)/22,
	FLDYNZPREFIX(WRAP_NONTABLED_HILOG)/22
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).


/*******************************************************************
 Tabled Hilog
*******************************************************************/

'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_TABLED_HILOG)/2,
	FLDYNZPREFIX(WRAP_TABLED_HILOG)/2
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_TABLED_HILOG)/3,
	FLDYNZPREFIX(WRAP_TABLED_HILOG)/3
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_TABLED_HILOG)/4,
	FLDYNZPREFIX(WRAP_TABLED_HILOG)/4
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_TABLED_HILOG)/5,
	FLDYNZPREFIX(WRAP_TABLED_HILOG)/5
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_TABLED_HILOG)/6,
	FLDYNZPREFIX(WRAP_TABLED_HILOG)/6
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_TABLED_HILOG)/7,
	FLDYNZPREFIX(WRAP_TABLED_HILOG)/7
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_TABLED_HILOG)/8,
	FLDYNZPREFIX(WRAP_TABLED_HILOG)/8
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_TABLED_HILOG)/9,
	FLDYNZPREFIX(WRAP_TABLED_HILOG)/9
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_TABLED_HILOG)/10,
	FLDYNZPREFIX(WRAP_TABLED_HILOG)/10
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_TABLED_HILOG)/11,
	FLDYNZPREFIX(WRAP_TABLED_HILOG)/11
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_TABLED_HILOG)/12,
	FLDYNZPREFIX(WRAP_TABLED_HILOG)/12
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_TABLED_HILOG)/13,
	FLDYNZPREFIX(WRAP_TABLED_HILOG)/13
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_TABLED_HILOG)/14,
	FLDYNZPREFIX(WRAP_TABLED_HILOG)/14
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_TABLED_HILOG)/15,
	FLDYNZPREFIX(WRAP_TABLED_HILOG)/15
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_TABLED_HILOG)/16,
	FLDYNZPREFIX(WRAP_TABLED_HILOG)/16
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_TABLED_HILOG)/17,
	FLDYNZPREFIX(WRAP_TABLED_HILOG)/17
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_TABLED_HILOG)/18,
	FLDYNZPREFIX(WRAP_TABLED_HILOG)/18
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_TABLED_HILOG)/19,
	FLDYNZPREFIX(WRAP_TABLED_HILOG)/19
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_TABLED_HILOG)/20,
	FLDYNZPREFIX(WRAP_TABLED_HILOG)/20
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_TABLED_HILOG)/21,
	FLDYNZPREFIX(WRAP_TABLED_HILOG)/21
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_TABLED_HILOG)/22,
	FLDYNZPREFIX(WRAP_TABLED_HILOG)/22
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).



/*******************************************************************
 Negated Tabled Hilog
*******************************************************************/

'TABLING_CONNECTIVE'(( dynamic
	FLNEGDYNAPREFIX(WRAP_TABLED_HILOG)/2,
	FLNEGDYNZPREFIX(WRAP_TABLED_HILOG)/2
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLNEGDYNAPREFIX(WRAP_TABLED_HILOG)/3,
	FLNEGDYNZPREFIX(WRAP_TABLED_HILOG)/3
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLNEGDYNAPREFIX(WRAP_TABLED_HILOG)/4,
	FLNEGDYNZPREFIX(WRAP_TABLED_HILOG)/4
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLNEGDYNAPREFIX(WRAP_TABLED_HILOG)/5,
	FLNEGDYNZPREFIX(WRAP_TABLED_HILOG)/5
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLNEGDYNAPREFIX(WRAP_TABLED_HILOG)/6,
	FLNEGDYNZPREFIX(WRAP_TABLED_HILOG)/6
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLNEGDYNAPREFIX(WRAP_TABLED_HILOG)/7,
	FLNEGDYNZPREFIX(WRAP_TABLED_HILOG)/7
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLNEGDYNAPREFIX(WRAP_TABLED_HILOG)/8,
	FLNEGDYNZPREFIX(WRAP_TABLED_HILOG)/8
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLNEGDYNAPREFIX(WRAP_TABLED_HILOG)/9,
	FLNEGDYNZPREFIX(WRAP_TABLED_HILOG)/9
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLNEGDYNAPREFIX(WRAP_TABLED_HILOG)/10,
	FLNEGDYNZPREFIX(WRAP_TABLED_HILOG)/10
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLNEGDYNAPREFIX(WRAP_TABLED_HILOG)/11,
	FLNEGDYNZPREFIX(WRAP_TABLED_HILOG)/11
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLNEGDYNAPREFIX(WRAP_TABLED_HILOG)/12,
	FLNEGDYNZPREFIX(WRAP_TABLED_HILOG)/12
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLNEGDYNAPREFIX(WRAP_TABLED_HILOG)/13,
	FLNEGDYNZPREFIX(WRAP_TABLED_HILOG)/13
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLNEGDYNAPREFIX(WRAP_TABLED_HILOG)/14,
	FLNEGDYNZPREFIX(WRAP_TABLED_HILOG)/14
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLNEGDYNAPREFIX(WRAP_TABLED_HILOG)/15,
	FLNEGDYNZPREFIX(WRAP_TABLED_HILOG)/15
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLNEGDYNAPREFIX(WRAP_TABLED_HILOG)/16,
	FLNEGDYNZPREFIX(WRAP_TABLED_HILOG)/16
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLNEGDYNAPREFIX(WRAP_TABLED_HILOG)/17,
	FLNEGDYNZPREFIX(WRAP_TABLED_HILOG)/17
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLNEGDYNAPREFIX(WRAP_TABLED_HILOG)/18,
	FLNEGDYNZPREFIX(WRAP_TABLED_HILOG)/18
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLNEGDYNAPREFIX(WRAP_TABLED_HILOG)/19,
	FLNEGDYNZPREFIX(WRAP_TABLED_HILOG)/19
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLNEGDYNAPREFIX(WRAP_TABLED_HILOG)/20,
	FLNEGDYNZPREFIX(WRAP_TABLED_HILOG)/20
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLNEGDYNAPREFIX(WRAP_TABLED_HILOG)/21,
	FLNEGDYNZPREFIX(WRAP_TABLED_HILOG)/21
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLNEGDYNAPREFIX(WRAP_TABLED_HILOG)/22,
	FLNEGDYNZPREFIX(WRAP_TABLED_HILOG)/22
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).


/*******************************************************************
 F-logic
*******************************************************************/

'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_ISA)/3,FLDYNZPREFIX(WRAP_ISA)/3
   as 'FLORA_DYNAMICS_TYPE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_SUB)/3,FLDYNZPREFIX(WRAP_SUB)/3
   as 'FLORA_DYNAMICS_TYPE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_METH)/3,FLDYNZPREFIX(WRAP_METH)/3
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_IMETH)/3,FLDYNZPREFIX(WRAP_IMETH)/3
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_BOOLSIG)/3,FLDYNZPREFIX(WRAP_BOOLSIG)/3
   as 'FLORA_DYNAMICS_TYPE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_IBOOLSIG)/3,FLDYNZPREFIX(WRAP_IBOOLSIG)/3
   as 'FLORA_DYNAMICS_TYPE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_TRANSIG)/3,FLDYNZPREFIX(WRAP_TRANSIG)/3
   as 'FLORA_DYNAMICS_TYPE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_ITRANSIG)/3,FLDYNZPREFIX(WRAP_ITRANSIG)/3
   as 'FLORA_DYNAMICS_TYPE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_MVD)/4,FLDYNZPREFIX(WRAP_MVD)/4
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_IMVD)/4,FLDYNZPREFIX(WRAP_IMVD)/4
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_MVDSIG)/4,FLDYNZPREFIX(WRAP_MVDSIG)/4
   as 'FLORA_DYNAMICS_TYPE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_IMVDSIG)/4,FLDYNZPREFIX(WRAP_IMVDSIG)/4
   as 'FLORA_DYNAMICS_TYPE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_MVDCONDEF)/5,FLDYNZPREFIX(WRAP_MVDCONDEF)/5
   as 'FLORA_DYNAMICS_TYPE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_IMVDCONDEF)/5,FLDYNZPREFIX(WRAP_IMVDCONDEF)/5
   as 'FLORA_DYNAMICS_TYPE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_MVDSIGDEF)/3,FLDYNZPREFIX(WRAP_MVDSIGDEF)/3
   as 'FLORA_DYNAMICS_TYPE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_IMVDSIGDEF)/3,FLDYNZPREFIX(WRAP_IMVDSIGDEF)/3
   as 'FLORA_DYNAMICS_TYPE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_MVDDEF)/3,FLDYNZPREFIX(WRAP_MVDDEF)/3
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_IMVDDEF)/3,FLDYNZPREFIX(WRAP_IMVDDEF)/3
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_TRAN)/3,FLDYNZPREFIX(WRAP_TRAN)/3
   as 'FLORA_DYNAMICS_TYPE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_EXISTS)/2,FLDYNZPREFIX(WRAP_EXISTS)/2
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(WRAP_OBJEQL)/3,FLDYNZPREFIX(WRAP_OBJEQL)/3
   as 'FLORA_DYNAMICS_TYPE'
   )).


/*******************************************************************
 negated F-logic
*******************************************************************/

'TABLING_CONNECTIVE'(( dynamic
	FLNEGDYNAPREFIX(WRAP_ISA)/3,FLNEGDYNZPREFIX(WRAP_ISA)/3
   as 'FLORA_DYNAMICS_TYPE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLNEGDYNAPREFIX(WRAP_SUB)/3,FLNEGDYNZPREFIX(WRAP_SUB)/3
   as 'FLORA_DYNAMICS_TYPE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLNEGDYNAPREFIX(WRAP_METH)/3,FLNEGDYNZPREFIX(WRAP_METH)/3
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLNEGDYNAPREFIX(WRAP_IMETH)/3,FLNEGDYNZPREFIX(WRAP_IMETH)/3
   as 'FLORA_DYNAMICS_TYPE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLNEGDYNAPREFIX(WRAP_BOOLSIG)/3,FLNEGDYNZPREFIX(WRAP_BOOLSIG)/3
   as 'FLORA_DYNAMICS_TYPE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLNEGDYNAPREFIX(WRAP_IBOOLSIG)/3,FLNEGDYNZPREFIX(WRAP_IBOOLSIG)/3
   as 'FLORA_DYNAMICS_TYPE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLNEGDYNAPREFIX(WRAP_MVD)/4,FLNEGDYNZPREFIX(WRAP_MVD)/4
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLNEGDYNAPREFIX(WRAP_IMVD)/4,FLNEGDYNZPREFIX(WRAP_IMVD)/4
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLNEGDYNAPREFIX(WRAP_MVDSIG)/4,FLNEGDYNZPREFIX(WRAP_MVDSIG)/4
   as 'FLORA_DYNAMICS_TYPE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLNEGDYNAPREFIX(WRAP_IMVDSIG)/4,FLNEGDYNZPREFIX(WRAP_IMVDSIG)/4
   as 'FLORA_DYNAMICS_TYPE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLNEGDYNAPREFIX(WRAP_MVDSIGDEF)/3,FLNEGDYNZPREFIX(WRAP_MVDSIGDEF)/3
   as 'FLORA_DYNAMICS_TYPE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLNEGDYNAPREFIX(WRAP_IMVDSIGDEF)/3,FLNEGDYNZPREFIX(WRAP_IMVDSIGDEF)/3
   as 'FLORA_DYNAMICS_TYPE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLNEGDYNAPREFIX(WRAP_MVDDEF)/3,FLNEGDYNZPREFIX(WRAP_MVDDEF)/3
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLNEGDYNAPREFIX(WRAP_IMVDDEF)/3,FLNEGDYNZPREFIX(WRAP_IMVDDEF)/3
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLNEGDYNAPREFIX(WRAP_EXISTS)/2,FLNEGDYNZPREFIX(WRAP_EXISTS)/2
   as 'FLORA_FLEX_DYNAMIC_TYPE_CLAUSE'
   )).
'TABLING_CONNECTIVE'(( dynamic
	FLNEGDYNAPREFIX(WRAP_OBJEQL)/3,FLNEGDYNZPREFIX(WRAP_OBJEQL)/3
   as 'FLORA_DYNAMICS_TYPE'
   )).


/*******************************************************************
 Defeasible reasoning
*******************************************************************/

'TABLING_CONNECTIVE'(( dynamic
	FLDYNAPREFIX(FL_OVERRIDES_UNQUOTED)/3,
	FLDYNAPREFIX(FL_OVERRIDES_UNQUOTED)/5,
	FLDYNAPREFIX(FL_OPPOSES_UNQUOTED)/3,
	FLDYNAPREFIX(FL_OPPOSES_UNQUOTED)/5,
	FLDYNAPREFIX(FL_CANCEL_UNQUOTED)/2,
	FLDYNAPREFIX(FL_CANCEL_UNQUOTED)/3,

	FLDYNZPREFIX(FL_OVERRIDES_UNQUOTED)/3,
	FLDYNZPREFIX(FL_OVERRIDES_UNQUOTED)/5,
	FLDYNZPREFIX(FL_OPPOSES_UNQUOTED)/3,
	FLDYNZPREFIX(FL_OPPOSES_UNQUOTED)/5,
	FLDYNZPREFIX(FL_CANCEL_UNQUOTED)/2,
	FLDYNZPREFIX(FL_CANCEL_UNQUOTED)/3,

	FLNEGDYNAPREFIX(FL_OVERRIDES_UNQUOTED)/3,
	FLNEGDYNAPREFIX(FL_OVERRIDES_UNQUOTED)/5,
	FLNEGDYNAPREFIX(FL_OPPOSES_UNQUOTED)/3,
	FLNEGDYNAPREFIX(FL_OPPOSES_UNQUOTED)/5,
	FLNEGDYNAPREFIX(FL_CANCEL_UNQUOTED)/2,
	FLNEGDYNAPREFIX(FL_CANCEL_UNQUOTED)/3,

	FLNEGDYNZPREFIX(FL_OVERRIDES_UNQUOTED)/3,
	FLNEGDYNZPREFIX(FL_OVERRIDES_UNQUOTED)/5,
	FLNEGDYNZPREFIX(FL_OPPOSES_UNQUOTED)/3,
	FLNEGDYNZPREFIX(FL_OPPOSES_UNQUOTED)/5,
	FLNEGDYNZPREFIX(FL_CANCEL_UNQUOTED)/2,
	FLNEGDYNZPREFIX(FL_CANCEL_UNQUOTED)/3
   as 'FLORA_DYNAMICS_TYPE'
   )).

'TABLING_CONNECTIVE'(( dynamic
	FL_FORCED_DEFEASIBILITY/3
   as 'FLORA_DYNAMICS_TYPE'
   )).

