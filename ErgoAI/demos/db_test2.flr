/*
  Prior to executing this, you must run db_test1.
  This is because this demo uses a database, ext_db, created by db_test1.
*/
#include "db_test.flh"

?- load{persistentmodules>>pm}.

?- writeln('--Sanity test: To check all values got stored in database correctly.--')@\plg().

?- writeln('create modules mod1, mod2, mod3')@\plg(),
	newmodule{mod1}, newmodule{mod2}, newmodule{mod3}.

?- write('test 20, associate modules with an existing database')@\plg(),
	mod1[attach(DSN,'ext_db',USER_NAME,PWD)]@pm,
	mod2[attach(DSN,'ext_db',USER_NAME,PWD)]@pm,
	mod3[attach(DSN,'ext_db',USER_NAME,PWD)]@pm,
	writeln('succeeded, as expected')@\plg.


?- writeln('test 30, get answers for q(X): a,b,c,d')@\plg().

?- q(?Z1)@mod1.
?- q(?Z2)@mod2. 
?- q(?Z3)@mod3.

?- writeln('succeeded, as expected')@\plg.


?- writeln('test 40, get answers for p(M,N): (a)a,b,c,d')@\plg.
   
?- p(?M1,?N1)@mod1.
?- p(?M2,?N2)@mod2.
?- p(?M3,?N3)@mod3.

?- writeln('succeeded, as expected')@\plg.


?- writeln('test 50, get answers for a[X->Y]. NOTE no answers for mod3...')@\plg.

?- a[?X1->?Y1]@mod1.
?- a[?X2->?Y2]@mod2. 

?- writeln('succeeded, as expected')@\plg.

?- a[?X3->?Y3]@mod3.
?- writeln('failed, as expected')@\plg.

?- \halt.


