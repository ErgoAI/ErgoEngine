/*
  ATCO: A client, like SILK, should generate a flora-addable file containing
        SILK refutablebodylit facts and bodyinfo facts.
        The file should look as described below.

    #include "atco.flh"

    // for each DEFEASIBLE rule and a body literal in it
    ATCO_REFUTABLEBODYLIT(ruleid,filename,${head},\@,${bodylit1}).
    ATCO_REFUTABLEBODYLIT(ruleid,filename,${head},\@,${bodylit2}).
    ... ... ...
    ... ... ...
    // for each DEFEASIBLE rule
    ATCO_BODYINFO(ruleid,filename,head,\@,bodyspec)
    ... ... ...

    where
      ruleid is the rule id,
      filename is the name of the file where the rule appears,
      head is the head of that rule
      \@, ?_ExtLit, ?_CtlVar  are to be reproduced literally.
      bodyspec:
	is a reified rule ``body'' generated by the omni transform AND
	modified as follows:
	- irrefutable literals in ``body'' are left AS IS in ``bodyspec''
	  (reified).
	- if ``blt'' is a refutable literal in ``body'' then ``bodyspec''
	   has this in its place:
	     ATCO_BODYLIT_WRAPPER(${blt})
	  The literals in bodyspec must appear inside paretheses
	  and separated with commas. For example:

   ATCO_BODYINFO(ex3_r11, ${ex3_p}, \@,
                 (ATCO_BODYLIT_WRAPPER(${ex3_a}),
		  ${some_irrefutable_body_lit1},
                  ATCO_BODYLIT_WRAPPER(${ex3_b}),
		  ${some_irrefutable_body_lit2})).

    *** It is NOT necessary to generate ATCO_BODYINFO for rules with no
        refutable bodylits. Better not to so as to save memory and load time.

    *** It is NOT necessary to generate irrefutable bodylits: they are not used.

    Loading in FLORA-2:
        If the main KB is foo.flr there should be something like
        foo_atco_aux.flr with the above statements. The whole thing is loaded
        like this:

        ?- [atco_init].

        Then load the FLORA file(s) foo.flr obtained from foo.flr.
        That file should have something like

	:- use_argumentation_theory{MY_AT}.
        ?- [atco2>>MY_AT].

        at the top.

        The file foo.flr can be loaded either statically (using \load)
	or dynamically (using \add), and both foo.flr and foo_atco_aux.flr
	should be loaded into the same module:

	?- [foo >> some_module].

        Add (\add, not \load) the auxiliary metafacts generated from the rules
	in foo.flr.

        ?- [+foo_atco_aux >> same_module_as_foo.flr].

        Please remember that Polina has sent her mods for modules and
	untabled preds to Mike, so loading into modules is coming very
	soon. In particular, please avoid using the module 'main' explicitly.

       NONE of the above should be generated for STRICT rules.
*/

:- compiler_options([xpp_on]).
#mode standard Prolog


#include "atco_common.flh"

?- dynamic ATCO_REFUTABLEBODYLIT/5,
           ATCO_BODYINFO/5.

?- index(ATCO_REFUTABLEBODYLIT/5, [1,3]),
    index(ATCO_BODYINFO/5, [1,3]).

%% this is the only important declaration here. the others (above)
%% are duplicates, for documentation
?- flrprolog:flora_define_permanent_prolog(ATCO_REFUTABLEBODYLIT,5),
   flrprolog:flora_define_permanent_prolog(ATCO_BODYINFO,5),
   flrprolog:flora_define_permanent_prolog(ATCO_BODYLIT_WRAPPER,1).

