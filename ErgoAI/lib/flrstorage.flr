/* File:      flrstorage.flr
**
** Author(s): Michael Kifer
**
** Contact:   flora-users@lists.sourceforge.net
**
** Copyright (C) by
**      The Research Foundation of the State University of New York, 1999-2018.
**
** Licensed under the Apache License, Version 2.0 (the "License");
** you may not use this file except in compliance with the License.
** You may obtain a copy of the License at
**
**      http://www.apache.org/licenses/LICENSE-2.0
**
** Unless required by applicable law or agreed to in writing, software
** distributed under the License is distributed on an "AS IS" BASIS,
** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
** See the License for the specific language governing permissions and
** limitations under the License.
**
**
*/

:- compiler_options{production=on}.


:- nontabled_module.
:- suppress_rule_signatures.

:- symbol_context{commit(?)@?}.

:- export{
        commit,
	commit(?_),
	purgedb(?_)}.

commit :- flora_commit_storage@\plg(flrutils).

// This commit is only for user modules
commit(?Module) :-
	flora_fdb_storage_name(?Module,?StorageName)@\plg(flrwrapper),
	flora_db_commit(?StorageName)@\plg(flrstoragebase),
	flora_db_reclaim_space(?StorageName)@\plg(flrstoragebase).

purgedb(?Module) :-
	flora_fdb_storage_name(?Module,?StorageName)@\plg(flrwrapper),
	flora_db_delete_all(?StorageName)@\plg(flrstoragebase),
        // create an empty storage for that module
        flora_new_db_storage(?StorageName)@\plg(flrstoragebase),
        // storage_delete_all/1 does not trigger incremental action,
        // so we hack it by deleting an arbitrary fact before deleting
        // the entire storage.
        incr_storage_delete_fact(?StorageName,?,?)@\prolog(storage).



